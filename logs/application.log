2025-06-24 15:46:37.656 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-06-24 15:46:37.673 [restartedMain] INFO  a.s.k.p.PromptTestApplication - Starting PromptTestApplication using Java 17.0.14 with PID 11434 (/Users/gyudeok0202/Workspace/BE_Repository/build/classes/java/main started by gyudeok0202 in /Users/gyudeok0202/Workspace/BE_Repository)
2025-06-24 15:46:37.673 [restartedMain] DEBUG a.s.k.p.PromptTestApplication - Running with Spring Boot v3.2.3, Spring v6.1.4
2025-06-24 15:46:37.673 [restartedMain] INFO  a.s.k.p.PromptTestApplication - The following 1 profile is active: "secret"
2025-06-24 15:46:37.687 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-24 15:46:37.688 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-24 15:46:37.975 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-24 15:46:37.975 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-24 15:46:37.986 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.ChatHistoryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-24 15:46:37.986 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.IngredientRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-24 15:46:37.987 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.RecipeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-24 15:46:37.987 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.UserIngredientRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-24 15:46:37.987 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.UserPromptRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-24 15:46:37.988 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.UserRecipeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-24 15:46:37.988 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-24 15:46:37.988 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 JDBC repository interfaces.
2025-06-24 15:46:37.991 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-24 15:46:37.992 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-24 15:46:38.034 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 41 ms. Found 7 JPA repository interfaces.
2025-06-24 15:46:38.044 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-24 15:46:38.044 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-24 15:46:38.050 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.ChatHistoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 15:46:38.051 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.IngredientRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 15:46:38.051 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.RecipeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 15:46:38.051 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.UserIngredientRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 15:46:38.051 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.UserPromptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 15:46:38.051 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.UserRecipeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 15:46:38.051 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 15:46:38.051 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2025-06-24 15:46:38.287 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-24 15:46:38.291 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-06-24 15:46:38.292 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-24 15:46:38.292 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
2025-06-24 15:46:38.308 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-24 15:46:38.308 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 620 ms
2025-06-24 15:46:38.321 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-24 15:46:38.377 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@b9c53f2
2025-06-24 15:46:38.377 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-24 15:46:38.381 [restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3306/recipedb?useSSL=false&serverTimezone=UTC&characterEncoding=UTF-8&allowPublicKeyRetrieval=true'
2025-06-24 15:46:38.416 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-24 15:46:38.438 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-06-24 15:46:38.449 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-24 15:46:38.523 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-24 15:46:38.546 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-24 15:46:38.547 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-24 15:46:38.921 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-24 15:46:38.947 [restartedMain] DEBUG org.hibernate.SQL - 
    create table recipe (
        recipe_id integer not null auto_increment,
        category varchar(50),
        cooking_time integer,
        description TEXT,
        difficulty varchar(5),
        image tinyblob,
        title varchar(15) not null,
        primary key (recipe_id)
    ) engine=InnoDB
2025-06-24 15:46:38.952 [restartedMain] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    create table recipe (
        recipe_id integer not null auto_increment,
        category varchar(50),
        cooking_time integer,
        description TEXT,
        difficulty varchar(5),
        image tinyblob,
        title varchar(15) not null,
        primary key (recipe_id)
    ) engine=InnoDB" via JDBC [Table 'recipe' already exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table recipe (
        recipe_id integer not null auto_increment,
        category varchar(50),
        cooking_time integer,
        description TEXT,
        difficulty varchar(5),
        image tinyblob,
        title varchar(15) not null,
        primary key (recipe_id)
    ) engine=InnoDB" via JDBC [Table 'recipe' already exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.createTable(AbstractSchemaMigrator.java:315)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:80)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:685)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1685)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1434)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4866)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:437)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:126)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:105)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:499)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:618)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at ac.su.kdt.prompttest.PromptTestApplication.main(PromptTestApplication.java:12)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.sql.SQLSyntaxErrorException: Table 'recipe' already exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 128 common frames omitted
2025-06-24 15:46:38.953 [restartedMain] DEBUG org.hibernate.SQL - 
    create table user_recipe (
        recipe_id integer not null,
        user_id integer not null,
        primary key (recipe_id, user_id)
    ) engine=InnoDB
2025-06-24 15:46:38.954 [restartedMain] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    create table user_recipe (
        recipe_id integer not null,
        user_id integer not null,
        primary key (recipe_id, user_id)
    ) engine=InnoDB" via JDBC [Table 'user_recipe' already exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table user_recipe (
        recipe_id integer not null,
        user_id integer not null,
        primary key (recipe_id, user_id)
    ) engine=InnoDB" via JDBC [Table 'user_recipe' already exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.createTable(AbstractSchemaMigrator.java:315)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:80)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:685)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1685)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1434)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4866)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:437)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:126)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:105)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:499)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:618)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at ac.su.kdt.prompttest.PromptTestApplication.main(PromptTestApplication.java:12)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.sql.SQLSyntaxErrorException: Table 'user_recipe' already exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 128 common frames omitted
2025-06-24 15:46:38.986 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-24 15:46:39.132 [restartedMain] DEBUG a.s.k.p.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-06-24 15:46:39.196 [restartedMain] INFO  a.s.k.p.service.PerplexityService - API URL: https://api.perplexity.ai/chat/completions
2025-06-24 15:46:39.196 [restartedMain] INFO  a.s.k.p.service.PerplexityService - API Key length: 53
2025-06-24 15:46:39.264 [restartedMain] ERROR i.n.r.d.DnsServerAddressStreamProviders - Unable to load io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'. Use DEBUG level to see the full stack: java.lang.UnsatisfiedLinkError: failed to load the required native library
2025-06-24 15:46:39.359 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-24 15:46:39.396 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-24 15:46:39.450 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@753f11ea, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7ec93e50, org.springframework.security.web.context.SecurityContextHolderFilter@667db5de, org.springframework.security.web.header.HeaderWriterFilter@585addd2, org.springframework.web.filter.CorsFilter@54164d0d, org.springframework.security.web.authentication.logout.LogoutFilter@75a41a41, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6c14461d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7f27197b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2f471456, org.springframework.security.web.session.SessionManagementFilter@4692fde7, org.springframework.security.web.access.ExceptionTranslationFilter@42e4853, org.springframework.security.web.access.intercept.AuthorizationFilter@51db44d1]
2025-06-24 15:46:39.502 [restartedMain] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2025-06-24 15:46:39.581 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-06-24 15:46:39.587 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-06-24 15:46:39.590 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-06-24 15:46:39.594 [restartedMain] INFO  a.s.k.p.PromptTestApplication - Started PromptTestApplication in 2.027 seconds (process running for 2.239)
2025-06-24 15:46:39.743 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-24 15:46:39.743 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-24 15:46:39.744 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-06-24 15:46:39.772 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Starting getResponse for userId: 1, prompt: 내가 가진 재료로 요리를 먹고싶어
2025-06-24 15:46:39.786 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.provider_id,
        u1_0.updated_at,
        u1_0.username,
        r1_0.user_user_id,
        r1_0.roles 
    from
        user u1_0 
    left join
        user_roles r1_0 
            on u1_0.user_id=r1_0.user_user_id 
    where
        u1_0.user_id=?
2025-06-24 15:46:39.826 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        up1_0.prompt_id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    where
        up1_0.user_id=?
2025-06-24 15:46:39.829 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ui1_0.ingredient_id,
        ui1_0.user_id,
        ui1_0.weight_in_grams 
    from
        user_ingredient ui1_0 
    join
        user u1_0 
            on u1_0.user_id=ui1_0.user_id 
    where
        u1_0.user_id=?
2025-06-24 15:46:39.831 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:46:39.832 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:46:39.833 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:46:39.833 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:46:39.834 [http-nio-8080-exec-1] DEBUG a.s.k.p.service.PerplexityService - System prompt: 당신은 레시피 추천 전문가입니다. 사용자가 가지고 있는 재료는 다음과 같습니다:
- 감자
- 캐비어
- 유니콘 뿔
- 수소폭탄
아래 보유재료를 반드시 1개 이상 포함해서 레시피를 추천해주세요. 보유재료가 하나도 포함되지 않으면 답변하지 마세요. 보유재료를 최대한 많이 활용한 레시피를 우선 추천하고, 불가피할 경우 1개 이상만이라도 반드시 포함해서 추천해주세요.  

다음 사용자의 특성을 고려하여 레시피를 추천해주세요:

- 이름: 한규덕
- 나이: 30세
- 성별: 남성
- 닉네임: 한규덕
- 건강 상태: 건강
- 알레르기: 땅콩
- 선호하는 음식: 육류


건강 상태에 따른 특별 지시사항:
현재 사용자는 건강 상태입니다. 해당 건강 상태에 맞는 적절한 식단을 추천해주세요.

다음 사항을 고려하여 레시피를 추천해주세요:
1. 해당 건강 상태에 맞는 영양소를 포함한 재료를 선택해주세요.
2. 해당 건강 상태에 해로운 성분이 포함된 재료는 피해주세요.
3. 건강 상태 개선에 도움이 되는 조리 방법을 선택해주세요.
4. 필요한 경우, 특정 재료의 대체재를 제안해주세요.

알레르기 주의사항:
- 땅콩 알레르기가 있으므로 해당 재료를 제외한 레시피를 추천해주세요.

## 사용자 요청
내가 가진 재료로 요리를 먹고싶어

레시피는 다음 형식으로 제공해주세요:
## 요리 이름

**필요한 재료와 양**
- 재료명: 양 단위
- 재료명: 양 단위
...

**조리 시간**
- 시간분

**난이도**
- 난이도 (상/중/하 중 하나)

**상세한 조리 방법**
1. 첫 번째 단계
2. 두 번째 단계
...

**요리 팁과 주의사항**
- 팁 또는 주의사항
- 팁 또는 주의사항

**완성된 요리의 이미지 URL**
- 실제 이미지 URL

주의사항:
- 모든 재료의 양과 단위를 정확히 명시해주세요.
- 조리 방법은 반드시 포함해야 하며, 순서대로 상세히 설명해주세요.
- 요리 팁과 주의사항은 실제 조리 시 도움이 될 수 있는 내용을 포함해주세요.
- 요리 이미지 URL은 실제 존재하는 이미지의 URL을 제공해주세요.
- 난이도는 반드시 '상', '중', '하' 중 하나로만 표기해주세요.
- 각 섹션은 정확히 위의 형식을 따라주세요.
- 조리 방법 섹션을 절대 생략하지 마세요. 반드시 포함해주세요.
- '상세한 조리 방법' 섹션이 누락되면 답변하지 마세요. 반드시 포함하세요.
- 아래 예시처럼 모든 섹션이 빠짐없이 포함된 답변만 작성하세요.
아래는 예시입니다. 반드시 이 형식을 따라 답변하세요.

## 닭가슴살 감자볶음

**필요한 재료와 양**
- 닭가슴살: 200g
- 감자: 2개(약 300g)
- 양파: 1/2개
- 대파: 1대
- 다진 마늘: 1큰술
- 식용유: 2큰술
- 간장: 2큰술
- 소금: 약간
- 후추: 약간

**조리 시간**
- 20분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 깍둑썰기 해주세요.
2. 닭가슴살은 한 입 크기로 썰어 소금, 후추로 밑간합니다.
3. 팬에 식용유를 두르고 다진 마늘, 대파를 볶아 향을 냅니다.
4. 닭가슴살을 넣고 익을 때까지 볶습니다.
5. 감자, 양파를 넣고 5분간 볶은 뒤 간장으로 간을 맞춥니다.
6. 감자가 익을 때까지 중불에서 볶아 완성합니다.

**요리 팁과 주의사항**
- 감자는 미리 전자레인지에 3분간 돌리면 더 빨리 익힙니다.
- 닭가슴살 대신 돼지고기나 소고기를 사용해도 좋습니다.

**완성된 요리의 이미지 URL**
- https://example.com/sample.jpg


2025-06-24 15:46:39.834 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Sending request to Perplexity API
2025-06-24 15:46:39.834 [http-nio-8080-exec-1] DEBUG a.s.k.p.service.PerplexityService - Request headers: [Content-Type:"application/json", Authorization:"Bearer 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"]
2025-06-24 15:46:39.834 [http-nio-8080-exec-1] DEBUG a.s.k.p.service.PerplexityService - Request body: {messages=[{role=system, content=당신은 레시피 추천 전문가입니다. 사용자가 가지고 있는 재료는 다음과 같습니다:
- 감자
- 캐비어
- 유니콘 뿔
- 수소폭탄
아래 보유재료를 반드시 1개 이상 포함해서 레시피를 추천해주세요. 보유재료가 하나도 포함되지 않으면 답변하지 마세요. 보유재료를 최대한 많이 활용한 레시피를 우선 추천하고, 불가피할 경우 1개 이상만이라도 반드시 포함해서 추천해주세요.  

다음 사용자의 특성을 고려하여 레시피를 추천해주세요:

- 이름: 한규덕
- 나이: 30세
- 성별: 남성
- 닉네임: 한규덕
- 건강 상태: 건강
- 알레르기: 땅콩
- 선호하는 음식: 육류


건강 상태에 따른 특별 지시사항:
현재 사용자는 건강 상태입니다. 해당 건강 상태에 맞는 적절한 식단을 추천해주세요.

다음 사항을 고려하여 레시피를 추천해주세요:
1. 해당 건강 상태에 맞는 영양소를 포함한 재료를 선택해주세요.
2. 해당 건강 상태에 해로운 성분이 포함된 재료는 피해주세요.
3. 건강 상태 개선에 도움이 되는 조리 방법을 선택해주세요.
4. 필요한 경우, 특정 재료의 대체재를 제안해주세요.

알레르기 주의사항:
- 땅콩 알레르기가 있으므로 해당 재료를 제외한 레시피를 추천해주세요.

## 사용자 요청
내가 가진 재료로 요리를 먹고싶어

레시피는 다음 형식으로 제공해주세요:
## 요리 이름

**필요한 재료와 양**
- 재료명: 양 단위
- 재료명: 양 단위
...

**조리 시간**
- 시간분

**난이도**
- 난이도 (상/중/하 중 하나)

**상세한 조리 방법**
1. 첫 번째 단계
2. 두 번째 단계
...

**요리 팁과 주의사항**
- 팁 또는 주의사항
- 팁 또는 주의사항

**완성된 요리의 이미지 URL**
- 실제 이미지 URL

주의사항:
- 모든 재료의 양과 단위를 정확히 명시해주세요.
- 조리 방법은 반드시 포함해야 하며, 순서대로 상세히 설명해주세요.
- 요리 팁과 주의사항은 실제 조리 시 도움이 될 수 있는 내용을 포함해주세요.
- 요리 이미지 URL은 실제 존재하는 이미지의 URL을 제공해주세요.
- 난이도는 반드시 '상', '중', '하' 중 하나로만 표기해주세요.
- 각 섹션은 정확히 위의 형식을 따라주세요.
- 조리 방법 섹션을 절대 생략하지 마세요. 반드시 포함해주세요.
- '상세한 조리 방법' 섹션이 누락되면 답변하지 마세요. 반드시 포함하세요.
- 아래 예시처럼 모든 섹션이 빠짐없이 포함된 답변만 작성하세요.
아래는 예시입니다. 반드시 이 형식을 따라 답변하세요.

## 닭가슴살 감자볶음

**필요한 재료와 양**
- 닭가슴살: 200g
- 감자: 2개(약 300g)
- 양파: 1/2개
- 대파: 1대
- 다진 마늘: 1큰술
- 식용유: 2큰술
- 간장: 2큰술
- 소금: 약간
- 후추: 약간

**조리 시간**
- 20분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 깍둑썰기 해주세요.
2. 닭가슴살은 한 입 크기로 썰어 소금, 후추로 밑간합니다.
3. 팬에 식용유를 두르고 다진 마늘, 대파를 볶아 향을 냅니다.
4. 닭가슴살을 넣고 익을 때까지 볶습니다.
5. 감자, 양파를 넣고 5분간 볶은 뒤 간장으로 간을 맞춥니다.
6. 감자가 익을 때까지 중불에서 볶아 완성합니다.

**요리 팁과 주의사항**
- 감자는 미리 전자레인지에 3분간 돌리면 더 빨리 익힙니다.
- 닭가슴살 대신 돼지고기나 소고기를 사용해도 좋습니다.

**완성된 요리의 이미지 URL**
- https://example.com/sample.jpg

}, {role=user, content=내가 가진 재료로 요리를 먹고싶어}], model=sonar-pro}
2025-06-24 15:46:50.574 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Received response from Perplexity API
2025-06-24 15:46:50.575 [http-nio-8080-exec-1] DEBUG a.s.k.p.service.PerplexityService - Response: {id=5d98afbb-6a03-4c4c-ad9b-b6bd5b6ab364, model=sonar-pro, created=1750747610, usage={prompt_tokens=1085, completion_tokens=519, total_tokens=1604, search_context_size=low}, citations=[https://m.10000recipe.com/recipe/list.html?q=%EC%9E%AC%EB%A3%8C, https://blog.naver.com/satorru/222655364431, https://www.10000recipe.com, https://blog.naver.com/holic_29/221945743135, https://www.youtube.com/watch?v=ax5fjtpm3Ec], search_results=[{title=재료 - 요리를 즐겁게~ 만개의레시피, url=https://m.10000recipe.com/recipe/list.html?q=%EC%9E%AC%EB%A3%8C, date=null}, {title=[요리] 재료별 레시피 : 네이버 블로그, url=https://blog.naver.com/satorru/222655364431, date=2022-02-23}, {title=요리를 즐겁게~ 만개의레시피, url=https://www.10000recipe.com, date=null}, {title=[요리] 자취생 간단요리 메뉴 / 유학생 요리 메뉴 추천 (난이도 최하부터 ..., url=https://blog.naver.com/holic_29/221945743135, date=2020-05-04}, {title=일주일 반찬 재료별 모음 : 가지 요리 11가지 자취생 요린이 ... - YouTube, url=https://www.youtube.com/watch?v=ax5fjtpm3Ec, date=2021-05-03}], object=chat.completion, choices=[{index=0, finish_reason=stop, message={role=assistant, content=## 감자 캐비어 퓨레

**필요한 재료와 양**
- 감자: 3개(약 400g)
- 캐비어: 2큰술(20g)
- 버터: 2큰술(30g)
- 우유: 100ml
- 소금: 약간
- 후추: 약간

**조리 시간**
- 30분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 깨끗이 씻어 껍질을 벗기고 4등분으로 썰어주세요.
2. 냄비에 감자를 담고 감자가 잠길 정도로 물을 부어 소금을 살짝 뿌린 뒤, 중불에서 15~20분간 삶아줍니다.
3. 삶아진 감자는 체에 받쳐 물기를 빼고, 뜨거울 때 곱게 으깨세요.
4. 으깬 감자에 버터를 넣어 녹이고, 우유를 조금씩 부어가며 부드럽게 섞습니다.
5. 소금과 후추로 간을 맞춰주세요.
6. 완성된 감자 퓨레를 그릇에 담고, 캐비어를 얹어 마무리합니다.

**요리 팁과 주의사항**
- 감자는 삶은 뒤 바로 으깨면 더 부드러운 퓨레가 완성됩니다.
- 우유 대신 생크림을 사용하면 더 고소한 맛을 느낄 수 있습니다.
- 캐비어는 마지막에 올려야 신선한 맛과 식감을 유지할 수 있습니다.
- 캐비어가 짠 편이니 전체 간을 약하게 해주세요.

**완성된 요리의 이미지 URL**
- https://cdn.pixabay.com/photo/2015/08/20/20/07/food-897591_1280.jpg

---

**참고:**  
- 사용자의 건강 상태와 땅콩 알레르기를 고려하여, 영양가가 높고 땅콩이 없는 레시피로 추천했습니다.
- 유니콘 뿔과 수소폭탄은 현실에서 식재료로 사용할 수 없으므로 포함하지 않았습니다.  
- 감자와 캐비어의 조합은 고급 레스토랑에서도 인기 있는 일품 메뉴입니다.}, delta={role=assistant, content=}}]}
2025-06-24 15:46:50.575 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Parsing AI response content
2025-06-24 15:46:50.575 [http-nio-8080-exec-1] DEBUG a.s.k.p.service.PerplexityService - Content: ## 감자 캐비어 퓨레

**필요한 재료와 양**
- 감자: 3개(약 400g)
- 캐비어: 2큰술(20g)
- 버터: 2큰술(30g)
- 우유: 100ml
- 소금: 약간
- 후추: 약간

**조리 시간**
- 30분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 깨끗이 씻어 껍질을 벗기고 4등분으로 썰어주세요.
2. 냄비에 감자를 담고 감자가 잠길 정도로 물을 부어 소금을 살짝 뿌린 뒤, 중불에서 15~20분간 삶아줍니다.
3. 삶아진 감자는 체에 받쳐 물기를 빼고, 뜨거울 때 곱게 으깨세요.
4. 으깬 감자에 버터를 넣어 녹이고, 우유를 조금씩 부어가며 부드럽게 섞습니다.
5. 소금과 후추로 간을 맞춰주세요.
6. 완성된 감자 퓨레를 그릇에 담고, 캐비어를 얹어 마무리합니다.

**요리 팁과 주의사항**
- 감자는 삶은 뒤 바로 으깨면 더 부드러운 퓨레가 완성됩니다.
- 우유 대신 생크림을 사용하면 더 고소한 맛을 느낄 수 있습니다.
- 캐비어는 마지막에 올려야 신선한 맛과 식감을 유지할 수 있습니다.
- 캐비어가 짠 편이니 전체 간을 약하게 해주세요.

**완성된 요리의 이미지 URL**
- https://cdn.pixabay.com/photo/2015/08/20/20/07/food-897591_1280.jpg

---

**참고:**  
- 사용자의 건강 상태와 땅콩 알레르기를 고려하여, 영양가가 높고 땅콩이 없는 레시피로 추천했습니다.
- 유니콘 뿔과 수소폭탄은 현실에서 식재료로 사용할 수 없으므로 포함하지 않았습니다.  
- 감자와 캐비어의 조합은 고급 레스토랑에서도 인기 있는 일품 메뉴입니다.
2025-06-24 15:46:50.575 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - AI 응답 원본:
## 감자 캐비어 퓨레

**필요한 재료와 양**
- 감자: 3개(약 400g)
- 캐비어: 2큰술(20g)
- 버터: 2큰술(30g)
- 우유: 100ml
- 소금: 약간
- 후추: 약간

**조리 시간**
- 30분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 깨끗이 씻어 껍질을 벗기고 4등분으로 썰어주세요.
2. 냄비에 감자를 담고 감자가 잠길 정도로 물을 부어 소금을 살짝 뿌린 뒤, 중불에서 15~20분간 삶아줍니다.
3. 삶아진 감자는 체에 받쳐 물기를 빼고, 뜨거울 때 곱게 으깨세요.
4. 으깬 감자에 버터를 넣어 녹이고, 우유를 조금씩 부어가며 부드럽게 섞습니다.
5. 소금과 후추로 간을 맞춰주세요.
6. 완성된 감자 퓨레를 그릇에 담고, 캐비어를 얹어 마무리합니다.

**요리 팁과 주의사항**
- 감자는 삶은 뒤 바로 으깨면 더 부드러운 퓨레가 완성됩니다.
- 우유 대신 생크림을 사용하면 더 고소한 맛을 느낄 수 있습니다.
- 캐비어는 마지막에 올려야 신선한 맛과 식감을 유지할 수 있습니다.
- 캐비어가 짠 편이니 전체 간을 약하게 해주세요.

**완성된 요리의 이미지 URL**
- https://cdn.pixabay.com/photo/2015/08/20/20/07/food-897591_1280.jpg

---

**참고:**  
- 사용자의 건강 상태와 땅콩 알레르기를 고려하여, 영양가가 높고 땅콩이 없는 레시피로 추천했습니다.
- 유니콘 뿔과 수소폭탄은 현실에서 식재료로 사용할 수 없으므로 포함하지 않았습니다.  
- 감자와 캐비어의 조합은 고급 레스토랑에서도 인기 있는 일품 메뉴입니다.
2025-06-24 15:46:50.576 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Starting to parse recipe response
2025-06-24 15:46:50.576 [http-nio-8080-exec-1] DEBUG a.s.k.p.service.PerplexityService - Content to parse: ## 감자 캐비어 퓨레

**필요한 재료와 양**
- 감자: 3개(약 400g)
- 캐비어: 2큰술(20g)
- 버터: 2큰술(30g)
- 우유: 100ml
- 소금: 약간
- 후추: 약간

**조리 시간**
- 30분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 깨끗이 씻어 껍질을 벗기고 4등분으로 썰어주세요.
2. 냄비에 감자를 담고 감자가 잠길 정도로 물을 부어 소금을 살짝 뿌린 뒤, 중불에서 15~20분간 삶아줍니다.
3. 삶아진 감자는 체에 받쳐 물기를 빼고, 뜨거울 때 곱게 으깨세요.
4. 으깬 감자에 버터를 넣어 녹이고, 우유를 조금씩 부어가며 부드럽게 섞습니다.
5. 소금과 후추로 간을 맞춰주세요.
6. 완성된 감자 퓨레를 그릇에 담고, 캐비어를 얹어 마무리합니다.

**요리 팁과 주의사항**
- 감자는 삶은 뒤 바로 으깨면 더 부드러운 퓨레가 완성됩니다.
- 우유 대신 생크림을 사용하면 더 고소한 맛을 느낄 수 있습니다.
- 캐비어는 마지막에 올려야 신선한 맛과 식감을 유지할 수 있습니다.
- 캐비어가 짠 편이니 전체 간을 약하게 해주세요.

**완성된 요리의 이미지 URL**
- https://cdn.pixabay.com/photo/2015/08/20/20/07/food-897591_1280.jpg

---

**참고:**  
- 사용자의 건강 상태와 땅콩 알레르기를 고려하여, 영양가가 높고 땅콩이 없는 레시피로 추천했습니다.
- 유니콘 뿔과 수소폭탄은 현실에서 식재료로 사용할 수 없으므로 포함하지 않았습니다.  
- 감자와 캐비어의 조합은 고급 레스토랑에서도 인기 있는 일품 메뉴입니다.
2025-06-24 15:46:50.580 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        up1_0.prompt_id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    where
        up1_0.user_id=?
2025-06-24 15:46:50.581 [http-nio-8080-exec-1] WARN  a.s.k.p.service.PerplexityService - No ingredients text found in content
2025-06-24 15:46:50.582 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Final description: 조리 방법:
1. 감자는 깨끗이 씻어 껍질을 벗기고 4등분으로 썰어주세요.
2. 냄비에 감자를 담고 감자가 잠길 정도로 물을 부어 소금을 살짝 뿌린 뒤, 중불에서 15~20분간 삶아줍니다.
3. 삶아진 감자는 체에 받쳐 물기를 빼고, 뜨거울 때 곱게 으깨세요.
4. 으깬 감자에 버터를 넣어 녹이고, 우유를 조금씩 부어가며 부드럽게 섞습니다.
5. 소금과 후추로 간을 맞춰주세요.
6. 완성된 감자 퓨레를 그릇에 담고, 캐비어를 얹어 마무리합니다.
2025-06-24 15:46:50.582 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Saving recipe with title: 감자 캐비어 퓨레
2025-06-24 15:46:50.597 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* insert for
        ac.su.kdt.prompttest.entity.Recipe */insert 
    into
        recipe (category, cooking_time, description, difficulty, image, title) 
    values
        (?, ?, ?, ?, ?, ?)
2025-06-24 15:46:50.606 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Saved recipe with ID: 10
2025-06-24 15:46:50.606 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Successfully parsed recipe with ID: 10
2025-06-24 15:48:41.873 [http-nio-8080-exec-2] INFO  a.s.k.p.service.PerplexityService - Starting getResponse for userId: 1, prompt: 내가 가진 재료로 요리를 먹고싶어
2025-06-24 15:48:41.874 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.provider_id,
        u1_0.updated_at,
        u1_0.username,
        r1_0.user_user_id,
        r1_0.roles 
    from
        user u1_0 
    left join
        user_roles r1_0 
            on u1_0.user_id=r1_0.user_user_id 
    where
        u1_0.user_id=?
2025-06-24 15:48:41.876 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        up1_0.prompt_id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    where
        up1_0.user_id=?
2025-06-24 15:48:41.877 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ui1_0.ingredient_id,
        ui1_0.user_id,
        ui1_0.weight_in_grams 
    from
        user_ingredient ui1_0 
    join
        user u1_0 
            on u1_0.user_id=ui1_0.user_id 
    where
        u1_0.user_id=?
2025-06-24 15:48:41.878 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:48:41.879 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:48:41.879 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:48:41.880 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:48:41.880 [http-nio-8080-exec-2] DEBUG a.s.k.p.service.PerplexityService - System prompt: 당신은 레시피 추천 전문가입니다. 사용자가 가지고 있는 재료는 다음과 같습니다:
- 감자
- 캐비어
- 유니콘 뿔
- 수소폭탄
아래 보유재료를 반드시 1개 이상 포함해서 레시피를 추천해주세요. 보유재료가 하나도 포함되지 않으면 답변하지 마세요. 보유재료를 최대한 많이 활용한 레시피를 우선 추천하고, 불가피할 경우 1개 이상만이라도 반드시 포함해서 추천해주세요.  

다음 사용자의 특성을 고려하여 레시피를 추천해주세요:

- 이름: 한규덕
- 나이: 30세
- 성별: 남성
- 닉네임: 한규덕
- 건강 상태: 건강
- 알레르기: 땅콩
- 선호하는 음식: 육류


건강 상태에 따른 특별 지시사항:
현재 사용자는 건강 상태입니다. 해당 건강 상태에 맞는 적절한 식단을 추천해주세요.

다음 사항을 고려하여 레시피를 추천해주세요:
1. 해당 건강 상태에 맞는 영양소를 포함한 재료를 선택해주세요.
2. 해당 건강 상태에 해로운 성분이 포함된 재료는 피해주세요.
3. 건강 상태 개선에 도움이 되는 조리 방법을 선택해주세요.
4. 필요한 경우, 특정 재료의 대체재를 제안해주세요.

알레르기 주의사항:
- 땅콩 알레르기가 있으므로 해당 재료를 제외한 레시피를 추천해주세요.

## 사용자 요청
내가 가진 재료로 요리를 먹고싶어

레시피는 다음 형식으로 제공해주세요:
## 요리 이름

**필요한 재료와 양**
- 재료명: 양 단위
- 재료명: 양 단위
...

**조리 시간**
- 시간분

**난이도**
- 난이도 (상/중/하 중 하나)

**상세한 조리 방법**
1. 첫 번째 단계
2. 두 번째 단계
...

**요리 팁과 주의사항**
- 팁 또는 주의사항
- 팁 또는 주의사항

**완성된 요리의 이미지 URL**
- 실제 이미지 URL

주의사항:
- 모든 재료의 양과 단위를 정확히 명시해주세요.
- 조리 방법은 반드시 포함해야 하며, 순서대로 상세히 설명해주세요.
- 요리 팁과 주의사항은 실제 조리 시 도움이 될 수 있는 내용을 포함해주세요.
- 요리 이미지 URL은 실제 존재하는 이미지의 URL을 제공해주세요.
- 난이도는 반드시 '상', '중', '하' 중 하나로만 표기해주세요.
- 각 섹션은 정확히 위의 형식을 따라주세요.
- 조리 방법 섹션을 절대 생략하지 마세요. 반드시 포함해주세요.
- '상세한 조리 방법' 섹션이 누락되면 답변하지 마세요. 반드시 포함하세요.
- 아래 예시처럼 모든 섹션이 빠짐없이 포함된 답변만 작성하세요.
아래는 예시입니다. 반드시 이 형식을 따라 답변하세요.

## 닭가슴살 감자볶음

**필요한 재료와 양**
- 닭가슴살: 200g
- 감자: 2개(약 300g)
- 양파: 1/2개
- 대파: 1대
- 다진 마늘: 1큰술
- 식용유: 2큰술
- 간장: 2큰술
- 소금: 약간
- 후추: 약간

**조리 시간**
- 20분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 깍둑썰기 해주세요.
2. 닭가슴살은 한 입 크기로 썰어 소금, 후추로 밑간합니다.
3. 팬에 식용유를 두르고 다진 마늘, 대파를 볶아 향을 냅니다.
4. 닭가슴살을 넣고 익을 때까지 볶습니다.
5. 감자, 양파를 넣고 5분간 볶은 뒤 간장으로 간을 맞춥니다.
6. 감자가 익을 때까지 중불에서 볶아 완성합니다.

**요리 팁과 주의사항**
- 감자는 미리 전자레인지에 3분간 돌리면 더 빨리 익힙니다.
- 닭가슴살 대신 돼지고기나 소고기를 사용해도 좋습니다.

**완성된 요리의 이미지 URL**
- https://example.com/sample.jpg


2025-06-24 15:48:41.881 [http-nio-8080-exec-2] INFO  a.s.k.p.service.PerplexityService - Sending request to Perplexity API
2025-06-24 15:48:41.881 [http-nio-8080-exec-2] DEBUG a.s.k.p.service.PerplexityService - Request headers: [Content-Type:"application/json", Authorization:"Bearer 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"]
2025-06-24 15:48:41.881 [http-nio-8080-exec-2] DEBUG a.s.k.p.service.PerplexityService - Request body: {messages=[{role=system, content=당신은 레시피 추천 전문가입니다. 사용자가 가지고 있는 재료는 다음과 같습니다:
- 감자
- 캐비어
- 유니콘 뿔
- 수소폭탄
아래 보유재료를 반드시 1개 이상 포함해서 레시피를 추천해주세요. 보유재료가 하나도 포함되지 않으면 답변하지 마세요. 보유재료를 최대한 많이 활용한 레시피를 우선 추천하고, 불가피할 경우 1개 이상만이라도 반드시 포함해서 추천해주세요.  

다음 사용자의 특성을 고려하여 레시피를 추천해주세요:

- 이름: 한규덕
- 나이: 30세
- 성별: 남성
- 닉네임: 한규덕
- 건강 상태: 건강
- 알레르기: 땅콩
- 선호하는 음식: 육류


건강 상태에 따른 특별 지시사항:
현재 사용자는 건강 상태입니다. 해당 건강 상태에 맞는 적절한 식단을 추천해주세요.

다음 사항을 고려하여 레시피를 추천해주세요:
1. 해당 건강 상태에 맞는 영양소를 포함한 재료를 선택해주세요.
2. 해당 건강 상태에 해로운 성분이 포함된 재료는 피해주세요.
3. 건강 상태 개선에 도움이 되는 조리 방법을 선택해주세요.
4. 필요한 경우, 특정 재료의 대체재를 제안해주세요.

알레르기 주의사항:
- 땅콩 알레르기가 있으므로 해당 재료를 제외한 레시피를 추천해주세요.

## 사용자 요청
내가 가진 재료로 요리를 먹고싶어

레시피는 다음 형식으로 제공해주세요:
## 요리 이름

**필요한 재료와 양**
- 재료명: 양 단위
- 재료명: 양 단위
...

**조리 시간**
- 시간분

**난이도**
- 난이도 (상/중/하 중 하나)

**상세한 조리 방법**
1. 첫 번째 단계
2. 두 번째 단계
...

**요리 팁과 주의사항**
- 팁 또는 주의사항
- 팁 또는 주의사항

**완성된 요리의 이미지 URL**
- 실제 이미지 URL

주의사항:
- 모든 재료의 양과 단위를 정확히 명시해주세요.
- 조리 방법은 반드시 포함해야 하며, 순서대로 상세히 설명해주세요.
- 요리 팁과 주의사항은 실제 조리 시 도움이 될 수 있는 내용을 포함해주세요.
- 요리 이미지 URL은 실제 존재하는 이미지의 URL을 제공해주세요.
- 난이도는 반드시 '상', '중', '하' 중 하나로만 표기해주세요.
- 각 섹션은 정확히 위의 형식을 따라주세요.
- 조리 방법 섹션을 절대 생략하지 마세요. 반드시 포함해주세요.
- '상세한 조리 방법' 섹션이 누락되면 답변하지 마세요. 반드시 포함하세요.
- 아래 예시처럼 모든 섹션이 빠짐없이 포함된 답변만 작성하세요.
아래는 예시입니다. 반드시 이 형식을 따라 답변하세요.

## 닭가슴살 감자볶음

**필요한 재료와 양**
- 닭가슴살: 200g
- 감자: 2개(약 300g)
- 양파: 1/2개
- 대파: 1대
- 다진 마늘: 1큰술
- 식용유: 2큰술
- 간장: 2큰술
- 소금: 약간
- 후추: 약간

**조리 시간**
- 20분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 깍둑썰기 해주세요.
2. 닭가슴살은 한 입 크기로 썰어 소금, 후추로 밑간합니다.
3. 팬에 식용유를 두르고 다진 마늘, 대파를 볶아 향을 냅니다.
4. 닭가슴살을 넣고 익을 때까지 볶습니다.
5. 감자, 양파를 넣고 5분간 볶은 뒤 간장으로 간을 맞춥니다.
6. 감자가 익을 때까지 중불에서 볶아 완성합니다.

**요리 팁과 주의사항**
- 감자는 미리 전자레인지에 3분간 돌리면 더 빨리 익힙니다.
- 닭가슴살 대신 돼지고기나 소고기를 사용해도 좋습니다.

**완성된 요리의 이미지 URL**
- https://example.com/sample.jpg

}, {role=user, content=내가 가진 재료로 요리를 먹고싶어}], model=sonar-pro}
2025-06-24 15:48:47.028 [http-nio-8080-exec-2] INFO  a.s.k.p.service.PerplexityService - Received response from Perplexity API
2025-06-24 15:48:47.028 [http-nio-8080-exec-2] DEBUG a.s.k.p.service.PerplexityService - Response: {id=137571d1-1782-45e7-900e-5c49ae6974c2, model=sonar-pro, created=1750747727, usage={prompt_tokens=1085, completion_tokens=564, total_tokens=1649, search_context_size=low}, citations=[https://m.10000recipe.com/recipe/list.html?q=%EC%9E%AC%EB%A3%8C, https://blog.naver.com/satorru/222655364431, https://www.10000recipe.com, https://blog.naver.com/holic_29/221945743135, https://www.youtube.com/watch?v=ax5fjtpm3Ec], search_results=[{title=재료 - 요리를 즐겁게~ 만개의레시피, url=https://m.10000recipe.com/recipe/list.html?q=%EC%9E%AC%EB%A3%8C, date=null}, {title=[요리] 재료별 레시피 : 네이버 블로그, url=https://blog.naver.com/satorru/222655364431, date=2022-02-23}, {title=요리를 즐겁게~ 만개의레시피, url=https://www.10000recipe.com, date=null}, {title=[요리] 자취생 간단요리 메뉴 / 유학생 요리 메뉴 추천 (난이도 최하부터 ..., url=https://blog.naver.com/holic_29/221945743135, date=2020-05-04}, {title=일주일 반찬 재료별 모음 : 가지 요리 11가지 자취생 요린이 ... - YouTube, url=https://www.youtube.com/watch?v=ax5fjtpm3Ec, date=2021-05-03}], object=chat.completion, choices=[{index=0, finish_reason=stop, message={role=assistant, content=## 감자 캐비어 미니 팬케이크

**필요한 재료와 양**
- 감자: 2개(약 300g)
- 캐비어: 20g
- 달걀: 1개
- 밀가루: 3큰술(30g)
- 우유: 50ml
- 소금: 약간
- 후추: 약간
- 버터: 1큰술(10g)
- (선택) 크림치즈: 2큰술(생략 가능)

**조리 시간**
- 30분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗긴 후 강판에 곱게 갈아줍니다.
2. 감자즙이 생기면 가볍게 짜서 물기를 어느 정도 제거합니다.
3. 볼에 감자, 밀가루, 달걀, 우유, 소금, 후추를 넣고 잘 섞어 부침 반죽을 만듭니다.
4. 중불로 달군 팬에 버터를 녹입니다.
5. 한 숟가락씩 올려 동그랗게 얇게 펴 팬케이크 형태로 굽습니다.
6. 한 면이 노릇해지면 뒤집어 양면을 모두 익혀주세요.
7. 완성된 감자 팬케이크 위에 캐비어를 올립니다.
8. (선택) 크림치즈를 작은 숟가락으로 팬케이크 위에 발라주면 더욱 고급스럽게 즐길 수 있습니다.

**요리 팁과 주의사항**
- 감자전 반죽이 너무 묽으면 밀가루를 조금 더 추가하고, 너무 되면 우유로 농도를 조절하세요.
- 캐비어는 조리 후 식은 팬케이크 위에 올려야 신선한 맛을 즐길 수 있습니다.
- 땅콩은 포함하지 않으니 알레르기 걱정 없이 드실 수 있습니다.
- 유니콘 뿔과 수소폭탄은 실제 조리 재료로 사용할 수 없으니 제외했습니다.

**완성된 요리의 이미지 URL**
- https://images.unsplash.com/photo-1504674900247-0877df9cc836

---

이 레시피는 감자와 캐비어 두 가지 주요 재료를 활용했습니다. 감자의 탄수화물과 캐비어의 고단백·미네랄로 영양 또한 균형 있게 챙길 수 있습니다.}, delta={role=assistant, content=}}]}
2025-06-24 15:48:47.029 [http-nio-8080-exec-2] INFO  a.s.k.p.service.PerplexityService - Parsing AI response content
2025-06-24 15:48:47.029 [http-nio-8080-exec-2] DEBUG a.s.k.p.service.PerplexityService - Content: ## 감자 캐비어 미니 팬케이크

**필요한 재료와 양**
- 감자: 2개(약 300g)
- 캐비어: 20g
- 달걀: 1개
- 밀가루: 3큰술(30g)
- 우유: 50ml
- 소금: 약간
- 후추: 약간
- 버터: 1큰술(10g)
- (선택) 크림치즈: 2큰술(생략 가능)

**조리 시간**
- 30분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗긴 후 강판에 곱게 갈아줍니다.
2. 감자즙이 생기면 가볍게 짜서 물기를 어느 정도 제거합니다.
3. 볼에 감자, 밀가루, 달걀, 우유, 소금, 후추를 넣고 잘 섞어 부침 반죽을 만듭니다.
4. 중불로 달군 팬에 버터를 녹입니다.
5. 한 숟가락씩 올려 동그랗게 얇게 펴 팬케이크 형태로 굽습니다.
6. 한 면이 노릇해지면 뒤집어 양면을 모두 익혀주세요.
7. 완성된 감자 팬케이크 위에 캐비어를 올립니다.
8. (선택) 크림치즈를 작은 숟가락으로 팬케이크 위에 발라주면 더욱 고급스럽게 즐길 수 있습니다.

**요리 팁과 주의사항**
- 감자전 반죽이 너무 묽으면 밀가루를 조금 더 추가하고, 너무 되면 우유로 농도를 조절하세요.
- 캐비어는 조리 후 식은 팬케이크 위에 올려야 신선한 맛을 즐길 수 있습니다.
- 땅콩은 포함하지 않으니 알레르기 걱정 없이 드실 수 있습니다.
- 유니콘 뿔과 수소폭탄은 실제 조리 재료로 사용할 수 없으니 제외했습니다.

**완성된 요리의 이미지 URL**
- https://images.unsplash.com/photo-1504674900247-0877df9cc836

---

이 레시피는 감자와 캐비어 두 가지 주요 재료를 활용했습니다. 감자의 탄수화물과 캐비어의 고단백·미네랄로 영양 또한 균형 있게 챙길 수 있습니다.
2025-06-24 15:48:47.029 [http-nio-8080-exec-2] INFO  a.s.k.p.service.PerplexityService - AI 응답 원본:
## 감자 캐비어 미니 팬케이크

**필요한 재료와 양**
- 감자: 2개(약 300g)
- 캐비어: 20g
- 달걀: 1개
- 밀가루: 3큰술(30g)
- 우유: 50ml
- 소금: 약간
- 후추: 약간
- 버터: 1큰술(10g)
- (선택) 크림치즈: 2큰술(생략 가능)

**조리 시간**
- 30분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗긴 후 강판에 곱게 갈아줍니다.
2. 감자즙이 생기면 가볍게 짜서 물기를 어느 정도 제거합니다.
3. 볼에 감자, 밀가루, 달걀, 우유, 소금, 후추를 넣고 잘 섞어 부침 반죽을 만듭니다.
4. 중불로 달군 팬에 버터를 녹입니다.
5. 한 숟가락씩 올려 동그랗게 얇게 펴 팬케이크 형태로 굽습니다.
6. 한 면이 노릇해지면 뒤집어 양면을 모두 익혀주세요.
7. 완성된 감자 팬케이크 위에 캐비어를 올립니다.
8. (선택) 크림치즈를 작은 숟가락으로 팬케이크 위에 발라주면 더욱 고급스럽게 즐길 수 있습니다.

**요리 팁과 주의사항**
- 감자전 반죽이 너무 묽으면 밀가루를 조금 더 추가하고, 너무 되면 우유로 농도를 조절하세요.
- 캐비어는 조리 후 식은 팬케이크 위에 올려야 신선한 맛을 즐길 수 있습니다.
- 땅콩은 포함하지 않으니 알레르기 걱정 없이 드실 수 있습니다.
- 유니콘 뿔과 수소폭탄은 실제 조리 재료로 사용할 수 없으니 제외했습니다.

**완성된 요리의 이미지 URL**
- https://images.unsplash.com/photo-1504674900247-0877df9cc836

---

이 레시피는 감자와 캐비어 두 가지 주요 재료를 활용했습니다. 감자의 탄수화물과 캐비어의 고단백·미네랄로 영양 또한 균형 있게 챙길 수 있습니다.
2025-06-24 15:48:47.029 [http-nio-8080-exec-2] INFO  a.s.k.p.service.PerplexityService - Starting to parse recipe response
2025-06-24 15:48:47.029 [http-nio-8080-exec-2] DEBUG a.s.k.p.service.PerplexityService - Content to parse: ## 감자 캐비어 미니 팬케이크

**필요한 재료와 양**
- 감자: 2개(약 300g)
- 캐비어: 20g
- 달걀: 1개
- 밀가루: 3큰술(30g)
- 우유: 50ml
- 소금: 약간
- 후추: 약간
- 버터: 1큰술(10g)
- (선택) 크림치즈: 2큰술(생략 가능)

**조리 시간**
- 30분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗긴 후 강판에 곱게 갈아줍니다.
2. 감자즙이 생기면 가볍게 짜서 물기를 어느 정도 제거합니다.
3. 볼에 감자, 밀가루, 달걀, 우유, 소금, 후추를 넣고 잘 섞어 부침 반죽을 만듭니다.
4. 중불로 달군 팬에 버터를 녹입니다.
5. 한 숟가락씩 올려 동그랗게 얇게 펴 팬케이크 형태로 굽습니다.
6. 한 면이 노릇해지면 뒤집어 양면을 모두 익혀주세요.
7. 완성된 감자 팬케이크 위에 캐비어를 올립니다.
8. (선택) 크림치즈를 작은 숟가락으로 팬케이크 위에 발라주면 더욱 고급스럽게 즐길 수 있습니다.

**요리 팁과 주의사항**
- 감자전 반죽이 너무 묽으면 밀가루를 조금 더 추가하고, 너무 되면 우유로 농도를 조절하세요.
- 캐비어는 조리 후 식은 팬케이크 위에 올려야 신선한 맛을 즐길 수 있습니다.
- 땅콩은 포함하지 않으니 알레르기 걱정 없이 드실 수 있습니다.
- 유니콘 뿔과 수소폭탄은 실제 조리 재료로 사용할 수 없으니 제외했습니다.

**완성된 요리의 이미지 URL**
- https://images.unsplash.com/photo-1504674900247-0877df9cc836

---

이 레시피는 감자와 캐비어 두 가지 주요 재료를 활용했습니다. 감자의 탄수화물과 캐비어의 고단백·미네랄로 영양 또한 균형 있게 챙길 수 있습니다.
2025-06-24 15:48:47.033 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        up1_0.prompt_id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    where
        up1_0.user_id=?
2025-06-24 15:48:47.035 [http-nio-8080-exec-2] WARN  a.s.k.p.service.PerplexityService - No ingredients text found in content
2025-06-24 15:48:47.035 [http-nio-8080-exec-2] INFO  a.s.k.p.service.PerplexityService - Final description: 조리 방법:
1. 감자는 껍질을 벗긴 후 강판에 곱게 갈아줍니다.
2. 감자즙이 생기면 가볍게 짜서 물기를 어느 정도 제거합니다.
3. 볼에 감자, 밀가루, 달걀, 우유, 소금, 후추를 넣고 잘 섞어 부침 반죽을 만듭니다.
4. 중불로 달군 팬에 버터를 녹입니다.
5. 한 숟가락씩 올려 동그랗게 얇게 펴 팬케이크 형태로 굽습니다.
6. 한 면이 노릇해지면 뒤집어 양면을 모두 익혀주세요.
7. 완성된 감자 팬케이크 위에 캐비어를 올립니다.
8. (선택) 크림치즈를 작은 숟가락으로 팬케이크 위에 발라주면 더욱 고급스럽게 즐길 수 있습니다.
2025-06-24 15:48:47.035 [http-nio-8080-exec-2] INFO  a.s.k.p.service.PerplexityService - Saving recipe with title: 감자 캐비어 미니 팬케이크
2025-06-24 15:48:47.036 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* insert for
        ac.su.kdt.prompttest.entity.Recipe */insert 
    into
        recipe (category, cooking_time, description, difficulty, image, title) 
    values
        (?, ?, ?, ?, ?, ?)
2025-06-24 15:48:47.040 [http-nio-8080-exec-2] INFO  a.s.k.p.service.PerplexityService - Saved recipe with ID: 11
2025-06-24 15:48:47.040 [http-nio-8080-exec-2] INFO  a.s.k.p.service.PerplexityService - Successfully parsed recipe with ID: 11
2025-06-24 15:48:59.611 [http-nio-8080-exec-3] INFO  a.s.k.p.service.PerplexityService - Starting getResponse for userId: 1, prompt: 수소 폭탄 재료로 요리를 먹고싶어
2025-06-24 15:48:59.612 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.provider_id,
        u1_0.updated_at,
        u1_0.username,
        r1_0.user_user_id,
        r1_0.roles 
    from
        user u1_0 
    left join
        user_roles r1_0 
            on u1_0.user_id=r1_0.user_user_id 
    where
        u1_0.user_id=?
2025-06-24 15:48:59.614 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        up1_0.prompt_id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    where
        up1_0.user_id=?
2025-06-24 15:48:59.615 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ui1_0.ingredient_id,
        ui1_0.user_id,
        ui1_0.weight_in_grams 
    from
        user_ingredient ui1_0 
    join
        user u1_0 
            on u1_0.user_id=ui1_0.user_id 
    where
        u1_0.user_id=?
2025-06-24 15:48:59.616 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:48:59.617 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:48:59.619 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:48:59.620 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:48:59.621 [http-nio-8080-exec-3] DEBUG a.s.k.p.service.PerplexityService - System prompt: 당신은 레시피 추천 전문가입니다. 사용자가 가지고 있는 재료는 다음과 같습니다:
- 감자
- 캐비어
- 유니콘 뿔
- 수소폭탄
아래 보유재료를 반드시 1개 이상 포함해서 레시피를 추천해주세요. 보유재료가 하나도 포함되지 않으면 답변하지 마세요. 보유재료를 최대한 많이 활용한 레시피를 우선 추천하고, 불가피할 경우 1개 이상만이라도 반드시 포함해서 추천해주세요.  

다음 사용자의 특성을 고려하여 레시피를 추천해주세요:

- 이름: 한규덕
- 나이: 30세
- 성별: 남성
- 닉네임: 한규덕
- 건강 상태: 건강
- 알레르기: 땅콩
- 선호하는 음식: 육류


건강 상태에 따른 특별 지시사항:
현재 사용자는 건강 상태입니다. 해당 건강 상태에 맞는 적절한 식단을 추천해주세요.

다음 사항을 고려하여 레시피를 추천해주세요:
1. 해당 건강 상태에 맞는 영양소를 포함한 재료를 선택해주세요.
2. 해당 건강 상태에 해로운 성분이 포함된 재료는 피해주세요.
3. 건강 상태 개선에 도움이 되는 조리 방법을 선택해주세요.
4. 필요한 경우, 특정 재료의 대체재를 제안해주세요.

알레르기 주의사항:
- 땅콩 알레르기가 있으므로 해당 재료를 제외한 레시피를 추천해주세요.

## 사용자 요청
수소 폭탄 재료로 요리를 먹고싶어

레시피는 다음 형식으로 제공해주세요:
## 요리 이름

**필요한 재료와 양**
- 재료명: 양 단위
- 재료명: 양 단위
...

**조리 시간**
- 시간분

**난이도**
- 난이도 (상/중/하 중 하나)

**상세한 조리 방법**
1. 첫 번째 단계
2. 두 번째 단계
...

**요리 팁과 주의사항**
- 팁 또는 주의사항
- 팁 또는 주의사항

**완성된 요리의 이미지 URL**
- 실제 이미지 URL

주의사항:
- 모든 재료의 양과 단위를 정확히 명시해주세요.
- 조리 방법은 반드시 포함해야 하며, 순서대로 상세히 설명해주세요.
- 요리 팁과 주의사항은 실제 조리 시 도움이 될 수 있는 내용을 포함해주세요.
- 요리 이미지 URL은 실제 존재하는 이미지의 URL을 제공해주세요.
- 난이도는 반드시 '상', '중', '하' 중 하나로만 표기해주세요.
- 각 섹션은 정확히 위의 형식을 따라주세요.
- 조리 방법 섹션을 절대 생략하지 마세요. 반드시 포함해주세요.
- '상세한 조리 방법' 섹션이 누락되면 답변하지 마세요. 반드시 포함하세요.
- 아래 예시처럼 모든 섹션이 빠짐없이 포함된 답변만 작성하세요.
아래는 예시입니다. 반드시 이 형식을 따라 답변하세요.

## 닭가슴살 감자볶음

**필요한 재료와 양**
- 닭가슴살: 200g
- 감자: 2개(약 300g)
- 양파: 1/2개
- 대파: 1대
- 다진 마늘: 1큰술
- 식용유: 2큰술
- 간장: 2큰술
- 소금: 약간
- 후추: 약간

**조리 시간**
- 20분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 깍둑썰기 해주세요.
2. 닭가슴살은 한 입 크기로 썰어 소금, 후추로 밑간합니다.
3. 팬에 식용유를 두르고 다진 마늘, 대파를 볶아 향을 냅니다.
4. 닭가슴살을 넣고 익을 때까지 볶습니다.
5. 감자, 양파를 넣고 5분간 볶은 뒤 간장으로 간을 맞춥니다.
6. 감자가 익을 때까지 중불에서 볶아 완성합니다.

**요리 팁과 주의사항**
- 감자는 미리 전자레인지에 3분간 돌리면 더 빨리 익힙니다.
- 닭가슴살 대신 돼지고기나 소고기를 사용해도 좋습니다.

**완성된 요리의 이미지 URL**
- https://example.com/sample.jpg


2025-06-24 15:48:59.621 [http-nio-8080-exec-3] INFO  a.s.k.p.service.PerplexityService - Sending request to Perplexity API
2025-06-24 15:48:59.621 [http-nio-8080-exec-3] DEBUG a.s.k.p.service.PerplexityService - Request headers: [Content-Type:"application/json", Authorization:"Bearer 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"]
2025-06-24 15:48:59.621 [http-nio-8080-exec-3] DEBUG a.s.k.p.service.PerplexityService - Request body: {messages=[{role=system, content=당신은 레시피 추천 전문가입니다. 사용자가 가지고 있는 재료는 다음과 같습니다:
- 감자
- 캐비어
- 유니콘 뿔
- 수소폭탄
아래 보유재료를 반드시 1개 이상 포함해서 레시피를 추천해주세요. 보유재료가 하나도 포함되지 않으면 답변하지 마세요. 보유재료를 최대한 많이 활용한 레시피를 우선 추천하고, 불가피할 경우 1개 이상만이라도 반드시 포함해서 추천해주세요.  

다음 사용자의 특성을 고려하여 레시피를 추천해주세요:

- 이름: 한규덕
- 나이: 30세
- 성별: 남성
- 닉네임: 한규덕
- 건강 상태: 건강
- 알레르기: 땅콩
- 선호하는 음식: 육류


건강 상태에 따른 특별 지시사항:
현재 사용자는 건강 상태입니다. 해당 건강 상태에 맞는 적절한 식단을 추천해주세요.

다음 사항을 고려하여 레시피를 추천해주세요:
1. 해당 건강 상태에 맞는 영양소를 포함한 재료를 선택해주세요.
2. 해당 건강 상태에 해로운 성분이 포함된 재료는 피해주세요.
3. 건강 상태 개선에 도움이 되는 조리 방법을 선택해주세요.
4. 필요한 경우, 특정 재료의 대체재를 제안해주세요.

알레르기 주의사항:
- 땅콩 알레르기가 있으므로 해당 재료를 제외한 레시피를 추천해주세요.

## 사용자 요청
수소 폭탄 재료로 요리를 먹고싶어

레시피는 다음 형식으로 제공해주세요:
## 요리 이름

**필요한 재료와 양**
- 재료명: 양 단위
- 재료명: 양 단위
...

**조리 시간**
- 시간분

**난이도**
- 난이도 (상/중/하 중 하나)

**상세한 조리 방법**
1. 첫 번째 단계
2. 두 번째 단계
...

**요리 팁과 주의사항**
- 팁 또는 주의사항
- 팁 또는 주의사항

**완성된 요리의 이미지 URL**
- 실제 이미지 URL

주의사항:
- 모든 재료의 양과 단위를 정확히 명시해주세요.
- 조리 방법은 반드시 포함해야 하며, 순서대로 상세히 설명해주세요.
- 요리 팁과 주의사항은 실제 조리 시 도움이 될 수 있는 내용을 포함해주세요.
- 요리 이미지 URL은 실제 존재하는 이미지의 URL을 제공해주세요.
- 난이도는 반드시 '상', '중', '하' 중 하나로만 표기해주세요.
- 각 섹션은 정확히 위의 형식을 따라주세요.
- 조리 방법 섹션을 절대 생략하지 마세요. 반드시 포함해주세요.
- '상세한 조리 방법' 섹션이 누락되면 답변하지 마세요. 반드시 포함하세요.
- 아래 예시처럼 모든 섹션이 빠짐없이 포함된 답변만 작성하세요.
아래는 예시입니다. 반드시 이 형식을 따라 답변하세요.

## 닭가슴살 감자볶음

**필요한 재료와 양**
- 닭가슴살: 200g
- 감자: 2개(약 300g)
- 양파: 1/2개
- 대파: 1대
- 다진 마늘: 1큰술
- 식용유: 2큰술
- 간장: 2큰술
- 소금: 약간
- 후추: 약간

**조리 시간**
- 20분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 깍둑썰기 해주세요.
2. 닭가슴살은 한 입 크기로 썰어 소금, 후추로 밑간합니다.
3. 팬에 식용유를 두르고 다진 마늘, 대파를 볶아 향을 냅니다.
4. 닭가슴살을 넣고 익을 때까지 볶습니다.
5. 감자, 양파를 넣고 5분간 볶은 뒤 간장으로 간을 맞춥니다.
6. 감자가 익을 때까지 중불에서 볶아 완성합니다.

**요리 팁과 주의사항**
- 감자는 미리 전자레인지에 3분간 돌리면 더 빨리 익힙니다.
- 닭가슴살 대신 돼지고기나 소고기를 사용해도 좋습니다.

**완성된 요리의 이미지 URL**
- https://example.com/sample.jpg

}, {role=user, content=수소 폭탄 재료로 요리를 먹고싶어}], model=sonar-pro}
2025-06-24 15:49:03.043 [http-nio-8080-exec-3] INFO  a.s.k.p.service.PerplexityService - Received response from Perplexity API
2025-06-24 15:49:03.043 [http-nio-8080-exec-3] DEBUG a.s.k.p.service.PerplexityService - Response: {id=d4ad9fd3-cd83-473f-8535-e38bda1188e0, model=sonar-pro, created=1750747743, usage={prompt_tokens=1088, completion_tokens=107, total_tokens=1195, search_context_size=low}, citations=[https://blog.naver.com/kogasblog/222083505721, https://blog.naver.com/energium/223870307894?fromRss=true&trackingCode=rss, https://m.science.ytn.co.kr/view.php?s_mcd=0082&key=201905241624225088, https://www.youtube.com/watch?v=zOp_KBVlW8I, https://www.hellot.net/news/article_print.html?no=44784], search_results=[{title=수소폭탄? 수소폭발? 수소, 정말 안전해? 미안하다 이거 보여 ..., url=https://blog.naver.com/kogasblog/222083505721, date=2020-09-09}, {title=수소차·수소충전소 정말 안전할까요? 수소법이 해답입니다!, url=https://blog.naver.com/energium/223870307894?fromRss=true&trackingCode=rss, date=2025-05-20}, {title=강릉 수소탱크 폭발…'수소' 안전성 문제 없나?, url=https://m.science.ytn.co.kr/view.php?s_mcd=0082&key=201905241624225088, date=2019-05-24}, {title=[친절한 경제] '수소, 안전할까?'…수소 경제 이모저모 / KBS ..., url=https://www.youtube.com/watch?v=zOp_KBVlW8I, date=null}, {title=[이제는 수소경제 시대 ④] 수소차 폭발에 대한 우려, “ ..., url=https://www.hellot.net/news/article_print.html?no=44784, date=null}], object=chat.completion, choices=[{index=0, finish_reason=stop, message={role=assistant, content=죄송합니다. '수소폭탄'은 요리에 사용할 수 없는 위험하고 실존하는 무기이며, 음식 재료가 아닙니다. 안전을 위해 수소폭탄 또는 이와 관련된 조리법은 추천해드릴 수 없습니다.

감자, 캐비어 등 다른 보유 재료를 활용한 안전하고 건강한 요리 레시피를 추천해 드릴 수 있습니다. 원하시면 이를 활용한 레시피를 안내해 드리겠습니다.}, delta={role=assistant, content=}}]}
2025-06-24 15:49:03.043 [http-nio-8080-exec-3] INFO  a.s.k.p.service.PerplexityService - Parsing AI response content
2025-06-24 15:49:03.043 [http-nio-8080-exec-3] DEBUG a.s.k.p.service.PerplexityService - Content: 죄송합니다. '수소폭탄'은 요리에 사용할 수 없는 위험하고 실존하는 무기이며, 음식 재료가 아닙니다. 안전을 위해 수소폭탄 또는 이와 관련된 조리법은 추천해드릴 수 없습니다.

감자, 캐비어 등 다른 보유 재료를 활용한 안전하고 건강한 요리 레시피를 추천해 드릴 수 있습니다. 원하시면 이를 활용한 레시피를 안내해 드리겠습니다.
2025-06-24 15:49:03.043 [http-nio-8080-exec-3] INFO  a.s.k.p.service.PerplexityService - AI 응답 원본:
죄송합니다. '수소폭탄'은 요리에 사용할 수 없는 위험하고 실존하는 무기이며, 음식 재료가 아닙니다. 안전을 위해 수소폭탄 또는 이와 관련된 조리법은 추천해드릴 수 없습니다.

감자, 캐비어 등 다른 보유 재료를 활용한 안전하고 건강한 요리 레시피를 추천해 드릴 수 있습니다. 원하시면 이를 활용한 레시피를 안내해 드리겠습니다.
2025-06-24 15:49:03.043 [http-nio-8080-exec-3] INFO  a.s.k.p.service.PerplexityService - Starting to parse recipe response
2025-06-24 15:49:03.043 [http-nio-8080-exec-3] DEBUG a.s.k.p.service.PerplexityService - Content to parse: 죄송합니다. '수소폭탄'은 요리에 사용할 수 없는 위험하고 실존하는 무기이며, 음식 재료가 아닙니다. 안전을 위해 수소폭탄 또는 이와 관련된 조리법은 추천해드릴 수 없습니다.

감자, 캐비어 등 다른 보유 재료를 활용한 안전하고 건강한 요리 레시피를 추천해 드릴 수 있습니다. 원하시면 이를 활용한 레시피를 안내해 드리겠습니다.
2025-06-24 15:49:03.045 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        up1_0.prompt_id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    where
        up1_0.user_id=?
2025-06-24 15:49:03.046 [http-nio-8080-exec-3] WARN  a.s.k.p.service.PerplexityService - No ingredients text found in content
2025-06-24 15:49:03.046 [http-nio-8080-exec-3] INFO  a.s.k.p.service.PerplexityService - Final description: 조리 방법 정보를 찾을 수 없습니다.
2025-06-24 15:49:03.046 [http-nio-8080-exec-3] INFO  a.s.k.p.service.PerplexityService - Saving recipe with title: 죄송합니다. '수소폭탄'은 요리에 사용할 수 없는 위험하고 실존하는 무기이며, 음식 재료가 아닙니다. 안전을 위해 수소폭탄 또는 이와 관련된 조리법은 추천해드릴 수 없습니다.
2025-06-24 15:49:03.047 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* insert for
        ac.su.kdt.prompttest.entity.Recipe */insert 
    into
        recipe (category, cooking_time, description, difficulty, image, title) 
    values
        (?, ?, ?, ?, ?, ?)
2025-06-24 15:49:03.050 [http-nio-8080-exec-3] INFO  a.s.k.p.service.PerplexityService - Saved recipe with ID: 12
2025-06-24 15:49:03.050 [http-nio-8080-exec-3] INFO  a.s.k.p.service.PerplexityService - Successfully parsed recipe with ID: 12
2025-06-24 15:49:13.900 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-24 15:49:13.902 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-24 15:49:13.904 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-24 15:49:16.365 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-06-24 15:49:16.378 [restartedMain] INFO  a.s.k.p.PromptTestApplication - Starting PromptTestApplication using Java 17.0.14 with PID 12108 (/Users/gyudeok0202/Workspace/BE_Repository/build/classes/java/main started by gyudeok0202 in /Users/gyudeok0202/Workspace/BE_Repository)
2025-06-24 15:49:16.378 [restartedMain] DEBUG a.s.k.p.PromptTestApplication - Running with Spring Boot v3.2.3, Spring v6.1.4
2025-06-24 15:49:16.378 [restartedMain] INFO  a.s.k.p.PromptTestApplication - The following 1 profile is active: "secret"
2025-06-24 15:49:16.393 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-24 15:49:16.394 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-24 15:49:16.647 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-24 15:49:16.648 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-24 15:49:16.659 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.ChatHistoryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-24 15:49:16.659 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.IngredientRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-24 15:49:16.660 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.RecipeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-24 15:49:16.660 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.UserIngredientRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-24 15:49:16.660 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.UserPromptRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-24 15:49:16.661 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.UserRecipeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-24 15:49:16.661 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-24 15:49:16.661 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 JDBC repository interfaces.
2025-06-24 15:49:16.665 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-24 15:49:16.665 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-24 15:49:16.704 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 38 ms. Found 7 JPA repository interfaces.
2025-06-24 15:49:16.710 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-24 15:49:16.710 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-24 15:49:16.714 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.ChatHistoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 15:49:16.714 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.IngredientRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 15:49:16.714 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.RecipeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 15:49:16.714 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.UserIngredientRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 15:49:16.714 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.UserPromptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 15:49:16.715 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.UserRecipeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 15:49:16.715 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 15:49:16.715 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1 ms. Found 0 Redis repository interfaces.
2025-06-24 15:49:16.921 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-24 15:49:16.925 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-06-24 15:49:16.925 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-24 15:49:16.925 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
2025-06-24 15:49:16.940 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-24 15:49:16.941 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 546 ms
2025-06-24 15:49:16.952 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-24 15:49:17.004 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5a6db907
2025-06-24 15:49:17.005 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-24 15:49:17.008 [restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3306/recipedb?useSSL=false&serverTimezone=UTC&characterEncoding=UTF-8&allowPublicKeyRetrieval=true'
2025-06-24 15:49:17.041 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-24 15:49:17.057 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-06-24 15:49:17.067 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-24 15:49:17.132 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-24 15:49:17.155 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-24 15:49:17.155 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-24 15:49:17.505 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-24 15:49:17.524 [restartedMain] DEBUG org.hibernate.SQL - 
    create table recipe (
        recipe_id integer not null auto_increment,
        category varchar(50),
        cooking_time integer,
        description TEXT,
        difficulty varchar(5),
        image tinyblob,
        title varchar(15) not null,
        primary key (recipe_id)
    ) engine=InnoDB
2025-06-24 15:49:17.528 [restartedMain] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    create table recipe (
        recipe_id integer not null auto_increment,
        category varchar(50),
        cooking_time integer,
        description TEXT,
        difficulty varchar(5),
        image tinyblob,
        title varchar(15) not null,
        primary key (recipe_id)
    ) engine=InnoDB" via JDBC [Table 'recipe' already exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table recipe (
        recipe_id integer not null auto_increment,
        category varchar(50),
        cooking_time integer,
        description TEXT,
        difficulty varchar(5),
        image tinyblob,
        title varchar(15) not null,
        primary key (recipe_id)
    ) engine=InnoDB" via JDBC [Table 'recipe' already exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.createTable(AbstractSchemaMigrator.java:315)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:80)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:685)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1685)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1434)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4866)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:437)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:126)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:105)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:499)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:618)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at ac.su.kdt.prompttest.PromptTestApplication.main(PromptTestApplication.java:12)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.sql.SQLSyntaxErrorException: Table 'recipe' already exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 128 common frames omitted
2025-06-24 15:49:17.529 [restartedMain] DEBUG org.hibernate.SQL - 
    create table user_recipe (
        recipe_id integer not null,
        user_id integer not null,
        primary key (recipe_id, user_id)
    ) engine=InnoDB
2025-06-24 15:49:17.529 [restartedMain] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    create table user_recipe (
        recipe_id integer not null,
        user_id integer not null,
        primary key (recipe_id, user_id)
    ) engine=InnoDB" via JDBC [Table 'user_recipe' already exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table user_recipe (
        recipe_id integer not null,
        user_id integer not null,
        primary key (recipe_id, user_id)
    ) engine=InnoDB" via JDBC [Table 'user_recipe' already exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.createTable(AbstractSchemaMigrator.java:315)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:80)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:685)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1685)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1434)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4866)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:437)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:126)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:105)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:499)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:618)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at ac.su.kdt.prompttest.PromptTestApplication.main(PromptTestApplication.java:12)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.sql.SQLSyntaxErrorException: Table 'user_recipe' already exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 128 common frames omitted
2025-06-24 15:49:17.555 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-24 15:49:17.685 [restartedMain] DEBUG a.s.k.p.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-06-24 15:49:17.745 [restartedMain] INFO  a.s.k.p.service.PerplexityService - API URL: https://api.perplexity.ai/chat/completions
2025-06-24 15:49:17.745 [restartedMain] INFO  a.s.k.p.service.PerplexityService - API Key length: 53
2025-06-24 15:49:17.814 [restartedMain] ERROR i.n.r.d.DnsServerAddressStreamProviders - Unable to load io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'. Use DEBUG level to see the full stack: java.lang.UnsatisfiedLinkError: failed to load the required native library
2025-06-24 15:49:17.905 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-24 15:49:17.953 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-24 15:49:18.011 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@18da9d7f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2526233e, org.springframework.security.web.context.SecurityContextHolderFilter@3d1a9c13, org.springframework.security.web.header.HeaderWriterFilter@543e96be, org.springframework.web.filter.CorsFilter@44b9c115, org.springframework.security.web.authentication.logout.LogoutFilter@43b1c960, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@152d2be6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@53a2aca6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5e6c975c, org.springframework.security.web.session.SessionManagementFilter@623e5bef, org.springframework.security.web.access.ExceptionTranslationFilter@19d6b687, org.springframework.security.web.access.intercept.AuthorizationFilter@3b20dc36]
2025-06-24 15:49:18.067 [restartedMain] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2025-06-24 15:49:18.145 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-06-24 15:49:18.157 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-06-24 15:49:18.161 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-06-24 15:49:18.166 [restartedMain] INFO  a.s.k.p.PromptTestApplication - Started PromptTestApplication in 1.887 seconds (process running for 2.069)
2025-06-24 15:49:18.901 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-24 15:49:18.901 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-24 15:49:18.902 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 0 ms
2025-06-24 15:49:18.933 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Starting getResponse for userId: 1, prompt: 내가 가진 재료로 요리를 먹고싶어
2025-06-24 15:49:18.953 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.provider_id,
        u1_0.updated_at,
        u1_0.username,
        r1_0.user_user_id,
        r1_0.roles 
    from
        user u1_0 
    left join
        user_roles r1_0 
            on u1_0.user_id=r1_0.user_user_id 
    where
        u1_0.user_id=?
2025-06-24 15:49:18.997 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        up1_0.prompt_id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    where
        up1_0.user_id=?
2025-06-24 15:49:19.002 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ui1_0.ingredient_id,
        ui1_0.user_id,
        ui1_0.weight_in_grams 
    from
        user_ingredient ui1_0 
    join
        user u1_0 
            on u1_0.user_id=ui1_0.user_id 
    where
        u1_0.user_id=?
2025-06-24 15:49:19.005 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:49:19.006 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:49:19.006 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:49:19.007 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:49:19.007 [http-nio-8080-exec-1] DEBUG a.s.k.p.service.PerplexityService - System prompt: 당신은 레시피 추천 전문가입니다. 사용자가 가지고 있는 재료는 다음과 같습니다:
- 감자
- 캐비어
- 유니콘 뿔
- 수소폭탄
아래 보유재료를 반드시 1개 이상 포함해서 레시피를 추천해주세요. 보유재료가 하나도 포함되지 않으면 답변하지 마세요. 보유재료를 최대한 많이 활용한 레시피를 우선 추천하고, 불가피할 경우 1개 이상만이라도 반드시 포함해서 추천해주세요.  

다음 사용자의 특성을 고려하여 레시피를 추천해주세요:

- 이름: 한규덕
- 나이: 30세
- 성별: 남성
- 닉네임: 한규덕
- 건강 상태: 건강
- 알레르기: 땅콩
- 선호하는 음식: 육류


건강 상태에 따른 특별 지시사항:
현재 사용자는 건강 상태입니다. 해당 건강 상태에 맞는 적절한 식단을 추천해주세요.

다음 사항을 고려하여 레시피를 추천해주세요:
1. 해당 건강 상태에 맞는 영양소를 포함한 재료를 선택해주세요.
2. 해당 건강 상태에 해로운 성분이 포함된 재료는 피해주세요.
3. 건강 상태 개선에 도움이 되는 조리 방법을 선택해주세요.
4. 필요한 경우, 특정 재료의 대체재를 제안해주세요.

알레르기 주의사항:
- 땅콩 알레르기가 있으므로 해당 재료를 제외한 레시피를 추천해주세요.

## 사용자 요청
내가 가진 재료로 요리를 먹고싶어

레시피는 다음 형식으로 제공해주세요:
## 요리 이름

**필요한 재료**
- 재료명
- 재료명
...

**조리 시간**
- 시간분

**난이도**
- 난이도 (상/중/하 중 하나)

**상세한 조리 방법**
1. 첫 번째 단계
2. 두 번째 단계
...

**요리 팁과 주의사항**
- 팁 또는 주의사항
- 팁 또는 주의사항

**완성된 요리의 이미지 URL**
- 실제 이미지 URL

주의사항:
- 모든 재료의 양과 단위를 정확히 명시해주세요.
- 조리 방법은 반드시 포함해야 하며, 순서대로 상세히 설명해주세요.
- 요리 팁과 주의사항은 실제 조리 시 도움이 될 수 있는 내용을 포함해주세요.
- 요리 이미지 URL은 실제 존재하는 이미지의 URL을 제공해주세요.
- 난이도는 반드시 '상', '중', '하' 중 하나로만 표기해주세요.
- 각 섹션은 정확히 위의 형식을 따라주세요.
- 조리 방법 섹션을 절대 생략하지 마세요. 반드시 포함해주세요.
- '상세한 조리 방법' 섹션이 누락되면 답변하지 마세요. 반드시 포함하세요.
- 아래 예시처럼 모든 섹션이 빠짐없이 포함된 답변만 작성하세요.
아래는 예시입니다. 반드시 이 형식을 따라 답변하세요.

## 닭가슴살 감자볶음

**필요한 재료**
- 닭가슴살
- 감자
- 양파
- 대파
- 다진 마늘
- 식용유
- 간장
- 소금
- 후추

**조리 시간**
- 20분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 깍둑썰기 해주세요.
2. 닭가슴살은 한 입 크기로 썰어 소금, 후추로 밑간합니다.
3. 팬에 식용유를 두르고 다진 마늘, 대파를 볶아 향을 냅니다.
4. 닭가슴살을 넣고 익을 때까지 볶습니다.
5. 감자, 양파를 넣고 5분간 볶은 뒤 간장으로 간을 맞춥니다.
6. 감자가 익을 때까지 중불에서 볶아 완성합니다.

**요리 팁과 주의사항**
- 감자는 미리 전자레인지에 3분간 돌리면 더 빨리 익힙니다.
- 닭가슴살 대신 돼지고기나 소고기를 사용해도 좋습니다.

**완성된 요리의 이미지 URL**
- https://example.com/sample.jpg


2025-06-24 15:49:19.007 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Sending request to Perplexity API
2025-06-24 15:49:19.007 [http-nio-8080-exec-1] DEBUG a.s.k.p.service.PerplexityService - Request headers: [Content-Type:"application/json", Authorization:"Bearer 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"]
2025-06-24 15:49:19.008 [http-nio-8080-exec-1] DEBUG a.s.k.p.service.PerplexityService - Request body: {messages=[{role=system, content=당신은 레시피 추천 전문가입니다. 사용자가 가지고 있는 재료는 다음과 같습니다:
- 감자
- 캐비어
- 유니콘 뿔
- 수소폭탄
아래 보유재료를 반드시 1개 이상 포함해서 레시피를 추천해주세요. 보유재료가 하나도 포함되지 않으면 답변하지 마세요. 보유재료를 최대한 많이 활용한 레시피를 우선 추천하고, 불가피할 경우 1개 이상만이라도 반드시 포함해서 추천해주세요.  

다음 사용자의 특성을 고려하여 레시피를 추천해주세요:

- 이름: 한규덕
- 나이: 30세
- 성별: 남성
- 닉네임: 한규덕
- 건강 상태: 건강
- 알레르기: 땅콩
- 선호하는 음식: 육류


건강 상태에 따른 특별 지시사항:
현재 사용자는 건강 상태입니다. 해당 건강 상태에 맞는 적절한 식단을 추천해주세요.

다음 사항을 고려하여 레시피를 추천해주세요:
1. 해당 건강 상태에 맞는 영양소를 포함한 재료를 선택해주세요.
2. 해당 건강 상태에 해로운 성분이 포함된 재료는 피해주세요.
3. 건강 상태 개선에 도움이 되는 조리 방법을 선택해주세요.
4. 필요한 경우, 특정 재료의 대체재를 제안해주세요.

알레르기 주의사항:
- 땅콩 알레르기가 있으므로 해당 재료를 제외한 레시피를 추천해주세요.

## 사용자 요청
내가 가진 재료로 요리를 먹고싶어

레시피는 다음 형식으로 제공해주세요:
## 요리 이름

**필요한 재료**
- 재료명
- 재료명
...

**조리 시간**
- 시간분

**난이도**
- 난이도 (상/중/하 중 하나)

**상세한 조리 방법**
1. 첫 번째 단계
2. 두 번째 단계
...

**요리 팁과 주의사항**
- 팁 또는 주의사항
- 팁 또는 주의사항

**완성된 요리의 이미지 URL**
- 실제 이미지 URL

주의사항:
- 모든 재료의 양과 단위를 정확히 명시해주세요.
- 조리 방법은 반드시 포함해야 하며, 순서대로 상세히 설명해주세요.
- 요리 팁과 주의사항은 실제 조리 시 도움이 될 수 있는 내용을 포함해주세요.
- 요리 이미지 URL은 실제 존재하는 이미지의 URL을 제공해주세요.
- 난이도는 반드시 '상', '중', '하' 중 하나로만 표기해주세요.
- 각 섹션은 정확히 위의 형식을 따라주세요.
- 조리 방법 섹션을 절대 생략하지 마세요. 반드시 포함해주세요.
- '상세한 조리 방법' 섹션이 누락되면 답변하지 마세요. 반드시 포함하세요.
- 아래 예시처럼 모든 섹션이 빠짐없이 포함된 답변만 작성하세요.
아래는 예시입니다. 반드시 이 형식을 따라 답변하세요.

## 닭가슴살 감자볶음

**필요한 재료**
- 닭가슴살
- 감자
- 양파
- 대파
- 다진 마늘
- 식용유
- 간장
- 소금
- 후추

**조리 시간**
- 20분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 깍둑썰기 해주세요.
2. 닭가슴살은 한 입 크기로 썰어 소금, 후추로 밑간합니다.
3. 팬에 식용유를 두르고 다진 마늘, 대파를 볶아 향을 냅니다.
4. 닭가슴살을 넣고 익을 때까지 볶습니다.
5. 감자, 양파를 넣고 5분간 볶은 뒤 간장으로 간을 맞춥니다.
6. 감자가 익을 때까지 중불에서 볶아 완성합니다.

**요리 팁과 주의사항**
- 감자는 미리 전자레인지에 3분간 돌리면 더 빨리 익힙니다.
- 닭가슴살 대신 돼지고기나 소고기를 사용해도 좋습니다.

**완성된 요리의 이미지 URL**
- https://example.com/sample.jpg

}, {role=user, content=내가 가진 재료로 요리를 먹고싶어}], model=sonar-pro}
2025-06-24 15:49:24.252 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Received response from Perplexity API
2025-06-24 15:49:24.252 [http-nio-8080-exec-1] DEBUG a.s.k.p.service.PerplexityService - Response: {id=2a4e2be0-6b2c-45ac-adcf-b49ed1529d6c, model=sonar-pro, created=1750747764, usage={prompt_tokens=1026, completion_tokens=537, total_tokens=1563, search_context_size=low}, citations=[https://m.10000recipe.com/recipe/list.html?q=%EC%9E%AC%EB%A3%8C, https://blog.naver.com/satorru/222655364431, https://www.10000recipe.com, https://blog.naver.com/holic_29/221945743135, https://www.youtube.com/watch?v=ax5fjtpm3Ec], search_results=[{title=재료 - 요리를 즐겁게~ 만개의레시피, url=https://m.10000recipe.com/recipe/list.html?q=%EC%9E%AC%EB%A3%8C, date=null}, {title=[요리] 재료별 레시피 : 네이버 블로그, url=https://blog.naver.com/satorru/222655364431, date=2022-02-23}, {title=요리를 즐겁게~ 만개의레시피, url=https://www.10000recipe.com, date=null}, {title=[요리] 자취생 간단요리 메뉴 / 유학생 요리 메뉴 추천 (난이도 최하부터 ..., url=https://blog.naver.com/holic_29/221945743135, date=2020-05-04}, {title=일주일 반찬 재료별 모음 : 가지 요리 11가지 자취생 요린이 ... - YouTube, url=https://www.youtube.com/watch?v=ax5fjtpm3Ec, date=2021-05-03}], object=chat.completion, choices=[{index=0, finish_reason=stop, message={role=assistant, content=## 감자 캐비어 미니 샐러드

**필요한 재료**
- 감자 2개 (중간 크기)
- 캐비어 1큰술
- 마요네즈 2큰술
- 오이 1/2개
- 삶은 달걀 1개
- 레몬즙 1작은술
- 소금 약간
- 후추 약간
- 파슬리(선택·장식용)

**조리 시간**
- 25분

**난이도**
- 하

**상세한 조리 방법**
1. 감자는 껍질을 벗겨 작은 큐브 모양으로 썬 뒤, 냄비에 소금을 넣고 10~12분간 익혀준다. 포크로 찔러 부드럽게 들어가면 체에 밭쳐 식혀 둔다.
2. 오이는 껍질을 벗기고 잘게 dice한다. 삶은 달걀도 껍질을 벗겨 잘게 다진다.
3. 볼에 감자, 오이, 삶은 달걀을 넣고 마요네즈, 레몬즙, 소금, 후추를 넣어 고루 버무린다.
4. 작은 접시에 감자 샐러드 한 스푼씩 올려 미니 원형으로 만들어준다.
5. 그 위에 캐비어를 1/2~1티스푼씩 예쁘게 올린다.
6. 마지막으로 파슬리로 장식해 완성한다.

**요리 팁과 주의사항**
- 감자는 너무 오래 익히면 부서지니 큐브 형태가 유지될 정도로 익히세요.
- 마요네즈 대신 플레인 요거트를 사용하면 더 가볍게 즐길 수 있습니다.
- 캐비어는 장식처럼 소량만 얹어 풍미를 살리는 것이 중요합니다.
- 땅콩이 들어가지 않으므로 알레르기 걱정없이 드실 수 있습니다.
- 유니콘 뿔, 수소폭탄은 식재료로 안전하게 사용할 수 없어 제외하였습니다.

**완성된 요리의 이미지 URL**
- https://images.pexels.com/photos/461382/pexels-photo-461382.jpeg

(※ 이미지 예시: 감자 미니 샐러드와 캐비어 토핑)}, delta={role=assistant, content=}}]}
2025-06-24 15:49:24.252 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Parsing AI response content
2025-06-24 15:49:24.252 [http-nio-8080-exec-1] DEBUG a.s.k.p.service.PerplexityService - Content: ## 감자 캐비어 미니 샐러드

**필요한 재료**
- 감자 2개 (중간 크기)
- 캐비어 1큰술
- 마요네즈 2큰술
- 오이 1/2개
- 삶은 달걀 1개
- 레몬즙 1작은술
- 소금 약간
- 후추 약간
- 파슬리(선택·장식용)

**조리 시간**
- 25분

**난이도**
- 하

**상세한 조리 방법**
1. 감자는 껍질을 벗겨 작은 큐브 모양으로 썬 뒤, 냄비에 소금을 넣고 10~12분간 익혀준다. 포크로 찔러 부드럽게 들어가면 체에 밭쳐 식혀 둔다.
2. 오이는 껍질을 벗기고 잘게 dice한다. 삶은 달걀도 껍질을 벗겨 잘게 다진다.
3. 볼에 감자, 오이, 삶은 달걀을 넣고 마요네즈, 레몬즙, 소금, 후추를 넣어 고루 버무린다.
4. 작은 접시에 감자 샐러드 한 스푼씩 올려 미니 원형으로 만들어준다.
5. 그 위에 캐비어를 1/2~1티스푼씩 예쁘게 올린다.
6. 마지막으로 파슬리로 장식해 완성한다.

**요리 팁과 주의사항**
- 감자는 너무 오래 익히면 부서지니 큐브 형태가 유지될 정도로 익히세요.
- 마요네즈 대신 플레인 요거트를 사용하면 더 가볍게 즐길 수 있습니다.
- 캐비어는 장식처럼 소량만 얹어 풍미를 살리는 것이 중요합니다.
- 땅콩이 들어가지 않으므로 알레르기 걱정없이 드실 수 있습니다.
- 유니콘 뿔, 수소폭탄은 식재료로 안전하게 사용할 수 없어 제외하였습니다.

**완성된 요리의 이미지 URL**
- https://images.pexels.com/photos/461382/pexels-photo-461382.jpeg

(※ 이미지 예시: 감자 미니 샐러드와 캐비어 토핑)
2025-06-24 15:49:24.252 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - AI 응답 원본:
## 감자 캐비어 미니 샐러드

**필요한 재료**
- 감자 2개 (중간 크기)
- 캐비어 1큰술
- 마요네즈 2큰술
- 오이 1/2개
- 삶은 달걀 1개
- 레몬즙 1작은술
- 소금 약간
- 후추 약간
- 파슬리(선택·장식용)

**조리 시간**
- 25분

**난이도**
- 하

**상세한 조리 방법**
1. 감자는 껍질을 벗겨 작은 큐브 모양으로 썬 뒤, 냄비에 소금을 넣고 10~12분간 익혀준다. 포크로 찔러 부드럽게 들어가면 체에 밭쳐 식혀 둔다.
2. 오이는 껍질을 벗기고 잘게 dice한다. 삶은 달걀도 껍질을 벗겨 잘게 다진다.
3. 볼에 감자, 오이, 삶은 달걀을 넣고 마요네즈, 레몬즙, 소금, 후추를 넣어 고루 버무린다.
4. 작은 접시에 감자 샐러드 한 스푼씩 올려 미니 원형으로 만들어준다.
5. 그 위에 캐비어를 1/2~1티스푼씩 예쁘게 올린다.
6. 마지막으로 파슬리로 장식해 완성한다.

**요리 팁과 주의사항**
- 감자는 너무 오래 익히면 부서지니 큐브 형태가 유지될 정도로 익히세요.
- 마요네즈 대신 플레인 요거트를 사용하면 더 가볍게 즐길 수 있습니다.
- 캐비어는 장식처럼 소량만 얹어 풍미를 살리는 것이 중요합니다.
- 땅콩이 들어가지 않으므로 알레르기 걱정없이 드실 수 있습니다.
- 유니콘 뿔, 수소폭탄은 식재료로 안전하게 사용할 수 없어 제외하였습니다.

**완성된 요리의 이미지 URL**
- https://images.pexels.com/photos/461382/pexels-photo-461382.jpeg

(※ 이미지 예시: 감자 미니 샐러드와 캐비어 토핑)
2025-06-24 15:49:24.252 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Starting to parse recipe response
2025-06-24 15:49:24.252 [http-nio-8080-exec-1] DEBUG a.s.k.p.service.PerplexityService - Content to parse: ## 감자 캐비어 미니 샐러드

**필요한 재료**
- 감자 2개 (중간 크기)
- 캐비어 1큰술
- 마요네즈 2큰술
- 오이 1/2개
- 삶은 달걀 1개
- 레몬즙 1작은술
- 소금 약간
- 후추 약간
- 파슬리(선택·장식용)

**조리 시간**
- 25분

**난이도**
- 하

**상세한 조리 방법**
1. 감자는 껍질을 벗겨 작은 큐브 모양으로 썬 뒤, 냄비에 소금을 넣고 10~12분간 익혀준다. 포크로 찔러 부드럽게 들어가면 체에 밭쳐 식혀 둔다.
2. 오이는 껍질을 벗기고 잘게 dice한다. 삶은 달걀도 껍질을 벗겨 잘게 다진다.
3. 볼에 감자, 오이, 삶은 달걀을 넣고 마요네즈, 레몬즙, 소금, 후추를 넣어 고루 버무린다.
4. 작은 접시에 감자 샐러드 한 스푼씩 올려 미니 원형으로 만들어준다.
5. 그 위에 캐비어를 1/2~1티스푼씩 예쁘게 올린다.
6. 마지막으로 파슬리로 장식해 완성한다.

**요리 팁과 주의사항**
- 감자는 너무 오래 익히면 부서지니 큐브 형태가 유지될 정도로 익히세요.
- 마요네즈 대신 플레인 요거트를 사용하면 더 가볍게 즐길 수 있습니다.
- 캐비어는 장식처럼 소량만 얹어 풍미를 살리는 것이 중요합니다.
- 땅콩이 들어가지 않으므로 알레르기 걱정없이 드실 수 있습니다.
- 유니콘 뿔, 수소폭탄은 식재료로 안전하게 사용할 수 없어 제외하였습니다.

**완성된 요리의 이미지 URL**
- https://images.pexels.com/photos/461382/pexels-photo-461382.jpeg

(※ 이미지 예시: 감자 미니 샐러드와 캐비어 토핑)
2025-06-24 15:49:24.255 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        up1_0.prompt_id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    where
        up1_0.user_id=?
2025-06-24 15:49:24.255 [http-nio-8080-exec-1] WARN  a.s.k.p.service.PerplexityService - 알러지 재료(땅콩)가 포함된 레시피. 안내문구만 반환.
2025-06-24 15:49:24.256 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Successfully parsed recipe with ID: null
2025-06-24 15:49:35.483 [http-nio-8080-exec-2] INFO  a.s.k.p.service.PerplexityService - Starting getResponse for userId: 1, prompt: 자극적인 이색  요리를 먹고싶어
2025-06-24 15:49:35.484 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.provider_id,
        u1_0.updated_at,
        u1_0.username,
        r1_0.user_user_id,
        r1_0.roles 
    from
        user u1_0 
    left join
        user_roles r1_0 
            on u1_0.user_id=r1_0.user_user_id 
    where
        u1_0.user_id=?
2025-06-24 15:49:35.487 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        up1_0.prompt_id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    where
        up1_0.user_id=?
2025-06-24 15:49:35.488 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ui1_0.ingredient_id,
        ui1_0.user_id,
        ui1_0.weight_in_grams 
    from
        user_ingredient ui1_0 
    join
        user u1_0 
            on u1_0.user_id=ui1_0.user_id 
    where
        u1_0.user_id=?
2025-06-24 15:49:35.490 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:49:35.491 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:49:35.492 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:49:35.492 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:49:35.493 [http-nio-8080-exec-2] DEBUG a.s.k.p.service.PerplexityService - System prompt: 당신은 레시피 추천 전문가입니다. 사용자가 가지고 있는 재료는 다음과 같습니다:
- 감자
- 캐비어
- 유니콘 뿔
- 수소폭탄
아래 보유재료를 반드시 1개 이상 포함해서 레시피를 추천해주세요. 보유재료가 하나도 포함되지 않으면 답변하지 마세요. 보유재료를 최대한 많이 활용한 레시피를 우선 추천하고, 불가피할 경우 1개 이상만이라도 반드시 포함해서 추천해주세요.  

다음 사용자의 특성을 고려하여 레시피를 추천해주세요:

- 이름: 한규덕
- 나이: 30세
- 성별: 남성
- 닉네임: 한규덕
- 건강 상태: 건강
- 알레르기: 땅콩
- 선호하는 음식: 육류


건강 상태에 따른 특별 지시사항:
현재 사용자는 건강 상태입니다. 해당 건강 상태에 맞는 적절한 식단을 추천해주세요.

다음 사항을 고려하여 레시피를 추천해주세요:
1. 해당 건강 상태에 맞는 영양소를 포함한 재료를 선택해주세요.
2. 해당 건강 상태에 해로운 성분이 포함된 재료는 피해주세요.
3. 건강 상태 개선에 도움이 되는 조리 방법을 선택해주세요.
4. 필요한 경우, 특정 재료의 대체재를 제안해주세요.

알레르기 주의사항:
- 땅콩 알레르기가 있으므로 해당 재료를 제외한 레시피를 추천해주세요.

## 사용자 요청
자극적인 이색  요리를 먹고싶어

레시피는 다음 형식으로 제공해주세요:
## 요리 이름

**필요한 재료**
- 재료명
- 재료명
...

**조리 시간**
- 시간분

**난이도**
- 난이도 (상/중/하 중 하나)

**상세한 조리 방법**
1. 첫 번째 단계
2. 두 번째 단계
...

**요리 팁과 주의사항**
- 팁 또는 주의사항
- 팁 또는 주의사항

**완성된 요리의 이미지 URL**
- 실제 이미지 URL

주의사항:
- 모든 재료의 양과 단위를 정확히 명시해주세요.
- 조리 방법은 반드시 포함해야 하며, 순서대로 상세히 설명해주세요.
- 요리 팁과 주의사항은 실제 조리 시 도움이 될 수 있는 내용을 포함해주세요.
- 요리 이미지 URL은 실제 존재하는 이미지의 URL을 제공해주세요.
- 난이도는 반드시 '상', '중', '하' 중 하나로만 표기해주세요.
- 각 섹션은 정확히 위의 형식을 따라주세요.
- 조리 방법 섹션을 절대 생략하지 마세요. 반드시 포함해주세요.
- '상세한 조리 방법' 섹션이 누락되면 답변하지 마세요. 반드시 포함하세요.
- 아래 예시처럼 모든 섹션이 빠짐없이 포함된 답변만 작성하세요.
아래는 예시입니다. 반드시 이 형식을 따라 답변하세요.

## 닭가슴살 감자볶음

**필요한 재료**
- 닭가슴살
- 감자
- 양파
- 대파
- 다진 마늘
- 식용유
- 간장
- 소금
- 후추

**조리 시간**
- 20분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 깍둑썰기 해주세요.
2. 닭가슴살은 한 입 크기로 썰어 소금, 후추로 밑간합니다.
3. 팬에 식용유를 두르고 다진 마늘, 대파를 볶아 향을 냅니다.
4. 닭가슴살을 넣고 익을 때까지 볶습니다.
5. 감자, 양파를 넣고 5분간 볶은 뒤 간장으로 간을 맞춥니다.
6. 감자가 익을 때까지 중불에서 볶아 완성합니다.

**요리 팁과 주의사항**
- 감자는 미리 전자레인지에 3분간 돌리면 더 빨리 익힙니다.
- 닭가슴살 대신 돼지고기나 소고기를 사용해도 좋습니다.

**완성된 요리의 이미지 URL**
- https://example.com/sample.jpg


2025-06-24 15:49:35.493 [http-nio-8080-exec-2] INFO  a.s.k.p.service.PerplexityService - Sending request to Perplexity API
2025-06-24 15:49:35.493 [http-nio-8080-exec-2] DEBUG a.s.k.p.service.PerplexityService - Request headers: [Content-Type:"application/json", Authorization:"Bearer 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"]
2025-06-24 15:49:35.493 [http-nio-8080-exec-2] DEBUG a.s.k.p.service.PerplexityService - Request body: {messages=[{role=system, content=당신은 레시피 추천 전문가입니다. 사용자가 가지고 있는 재료는 다음과 같습니다:
- 감자
- 캐비어
- 유니콘 뿔
- 수소폭탄
아래 보유재료를 반드시 1개 이상 포함해서 레시피를 추천해주세요. 보유재료가 하나도 포함되지 않으면 답변하지 마세요. 보유재료를 최대한 많이 활용한 레시피를 우선 추천하고, 불가피할 경우 1개 이상만이라도 반드시 포함해서 추천해주세요.  

다음 사용자의 특성을 고려하여 레시피를 추천해주세요:

- 이름: 한규덕
- 나이: 30세
- 성별: 남성
- 닉네임: 한규덕
- 건강 상태: 건강
- 알레르기: 땅콩
- 선호하는 음식: 육류


건강 상태에 따른 특별 지시사항:
현재 사용자는 건강 상태입니다. 해당 건강 상태에 맞는 적절한 식단을 추천해주세요.

다음 사항을 고려하여 레시피를 추천해주세요:
1. 해당 건강 상태에 맞는 영양소를 포함한 재료를 선택해주세요.
2. 해당 건강 상태에 해로운 성분이 포함된 재료는 피해주세요.
3. 건강 상태 개선에 도움이 되는 조리 방법을 선택해주세요.
4. 필요한 경우, 특정 재료의 대체재를 제안해주세요.

알레르기 주의사항:
- 땅콩 알레르기가 있으므로 해당 재료를 제외한 레시피를 추천해주세요.

## 사용자 요청
자극적인 이색  요리를 먹고싶어

레시피는 다음 형식으로 제공해주세요:
## 요리 이름

**필요한 재료**
- 재료명
- 재료명
...

**조리 시간**
- 시간분

**난이도**
- 난이도 (상/중/하 중 하나)

**상세한 조리 방법**
1. 첫 번째 단계
2. 두 번째 단계
...

**요리 팁과 주의사항**
- 팁 또는 주의사항
- 팁 또는 주의사항

**완성된 요리의 이미지 URL**
- 실제 이미지 URL

주의사항:
- 모든 재료의 양과 단위를 정확히 명시해주세요.
- 조리 방법은 반드시 포함해야 하며, 순서대로 상세히 설명해주세요.
- 요리 팁과 주의사항은 실제 조리 시 도움이 될 수 있는 내용을 포함해주세요.
- 요리 이미지 URL은 실제 존재하는 이미지의 URL을 제공해주세요.
- 난이도는 반드시 '상', '중', '하' 중 하나로만 표기해주세요.
- 각 섹션은 정확히 위의 형식을 따라주세요.
- 조리 방법 섹션을 절대 생략하지 마세요. 반드시 포함해주세요.
- '상세한 조리 방법' 섹션이 누락되면 답변하지 마세요. 반드시 포함하세요.
- 아래 예시처럼 모든 섹션이 빠짐없이 포함된 답변만 작성하세요.
아래는 예시입니다. 반드시 이 형식을 따라 답변하세요.

## 닭가슴살 감자볶음

**필요한 재료**
- 닭가슴살
- 감자
- 양파
- 대파
- 다진 마늘
- 식용유
- 간장
- 소금
- 후추

**조리 시간**
- 20분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 깍둑썰기 해주세요.
2. 닭가슴살은 한 입 크기로 썰어 소금, 후추로 밑간합니다.
3. 팬에 식용유를 두르고 다진 마늘, 대파를 볶아 향을 냅니다.
4. 닭가슴살을 넣고 익을 때까지 볶습니다.
5. 감자, 양파를 넣고 5분간 볶은 뒤 간장으로 간을 맞춥니다.
6. 감자가 익을 때까지 중불에서 볶아 완성합니다.

**요리 팁과 주의사항**
- 감자는 미리 전자레인지에 3분간 돌리면 더 빨리 익힙니다.
- 닭가슴살 대신 돼지고기나 소고기를 사용해도 좋습니다.

**완성된 요리의 이미지 URL**
- https://example.com/sample.jpg

}, {role=user, content=자극적인 이색  요리를 먹고싶어}], model=sonar-pro}
2025-06-24 15:49:47.171 [http-nio-8080-exec-2] INFO  a.s.k.p.service.PerplexityService - Received response from Perplexity API
2025-06-24 15:49:47.171 [http-nio-8080-exec-2] DEBUG a.s.k.p.service.PerplexityService - Response: {id=b1b41164-260c-4479-ba05-16ec6aa051e7, model=sonar-pro, created=1750747787, usage={prompt_tokens=1027, completion_tokens=551, total_tokens=1578, search_context_size=low}, citations=[https://blog.naver.com/kyakya_4001/223516347298, https://post.naver.com/viewer/postView.naver?volumeNo=32975334&memberNo=54534187, https://m.10000recipe.com/recipe/list.html?q=%EC%9D%B4%EC%83%89%EC%9D%8C%EC%8B%9D, http://www.gokmu.com/news/article.html?no=14970, https://www.youtube.com/watch?v=2ZKGGmlZgYs], search_results=[{title=자취레시피 4 , 자극적인 음식이 땡겨, url=https://blog.naver.com/kyakya_4001/223516347298, date=2024-07-17}, {title=아니 이런 음식들이 있다고? 전 세계 이색음식 모음, url=https://post.naver.com/viewer/postView.naver?volumeNo=32975334&memberNo=54534187, date=2021-12-20}, {title=이색음식, url=https://m.10000recipe.com/recipe/list.html?q=%EC%9D%B4%EC%83%89%EC%9D%8C%EC%8B%9D, date=null}, {title=맛 전문가가 추천하는 '이색 먹거리' World Best 5, url=http://www.gokmu.com/news/article.html?no=14970, date=2018-09-03}, {title=자극적인 건 싫어요! 건강을 생각한다면 하얀색 음식으로! ..., url=https://www.youtube.com/watch?v=2ZKGGmlZgYs, date=null}], object=chat.completion, choices=[{index=0, finish_reason=stop, message={role=assistant, content=## 감자 캐비어 크런치 — "한규덕 스페셜"

**필요한 재료**
- 감자 2개 (중간 크기)
- 캐비어 2큰술
- 소금 1티스푼
- 올리브오일 2큰술
- 후추 약간
- 파슬리 조금 (옵션)

**조리 시간**
- 35분

**난이도**
- 하

**상세한 조리 방법**
1. 감자는 껍질을 깨끗이 씻고 0.5cm 두께로 슬라이스합니다.
2. 찬물에 감자 슬라이스를 5분간 담가 전분을 빼고, 깨끗이 물기를 닦아주세요.
3. 오븐을 200도로 예열합니다.
4. 베이킹 트레이에 감자 슬라이스를 골고루 깔고, 올리브오일과 소금, 후추를 뿌려줍니다.
5. 200도 오븐에서 20분간 굽고, 중간에 한 번 뒤집어 노릇노릇하게 구워줍니다.
6. 구운 감자를 살짝 식힌 뒤, 각각 위에 캐비어 0.5티스푼씩 얹습니다.
7. 파슬리로 살짝 데코해 마무리합니다.

**요리 팁과 주의사항**
- 감자를 너무 두껍게 썰면 바삭함이 덜할 수 있으니 반드시 0.5cm로 썰어주세요.
- 오븐이 없다면 에어프라이어(180도, 15분)도 가능합니다.
- 캐비어는 바로 먹기 직전에 올려야 신선한 풍미를 즐길 수 있습니다.
- 감자와 캐비어는 포만감과 고급스러운 풍미로, 자극적인 동시에 색다른 맛의 조화를 선사합니다.

**완성된 요리의 이미지 URL**
- https://images.unsplash.com/photo-1504674900247-0877df9cc836

---

※ 참고: 유니콘 뿔과 수소폭탄은 실제 식재료가 아니거나 안전하지 않아 사용하지 않았습니다. 감자, 캐비어 등 보유 재료를 적극 활용했으며, 한규덕 님의 건강과 자극적인 이색요리 니즈를 모두 반영했습니다.}, delta={role=assistant, content=}}]}
2025-06-24 15:49:47.171 [http-nio-8080-exec-2] INFO  a.s.k.p.service.PerplexityService - Parsing AI response content
2025-06-24 15:49:47.171 [http-nio-8080-exec-2] DEBUG a.s.k.p.service.PerplexityService - Content: ## 감자 캐비어 크런치 — "한규덕 스페셜"

**필요한 재료**
- 감자 2개 (중간 크기)
- 캐비어 2큰술
- 소금 1티스푼
- 올리브오일 2큰술
- 후추 약간
- 파슬리 조금 (옵션)

**조리 시간**
- 35분

**난이도**
- 하

**상세한 조리 방법**
1. 감자는 껍질을 깨끗이 씻고 0.5cm 두께로 슬라이스합니다.
2. 찬물에 감자 슬라이스를 5분간 담가 전분을 빼고, 깨끗이 물기를 닦아주세요.
3. 오븐을 200도로 예열합니다.
4. 베이킹 트레이에 감자 슬라이스를 골고루 깔고, 올리브오일과 소금, 후추를 뿌려줍니다.
5. 200도 오븐에서 20분간 굽고, 중간에 한 번 뒤집어 노릇노릇하게 구워줍니다.
6. 구운 감자를 살짝 식힌 뒤, 각각 위에 캐비어 0.5티스푼씩 얹습니다.
7. 파슬리로 살짝 데코해 마무리합니다.

**요리 팁과 주의사항**
- 감자를 너무 두껍게 썰면 바삭함이 덜할 수 있으니 반드시 0.5cm로 썰어주세요.
- 오븐이 없다면 에어프라이어(180도, 15분)도 가능합니다.
- 캐비어는 바로 먹기 직전에 올려야 신선한 풍미를 즐길 수 있습니다.
- 감자와 캐비어는 포만감과 고급스러운 풍미로, 자극적인 동시에 색다른 맛의 조화를 선사합니다.

**완성된 요리의 이미지 URL**
- https://images.unsplash.com/photo-1504674900247-0877df9cc836

---

※ 참고: 유니콘 뿔과 수소폭탄은 실제 식재료가 아니거나 안전하지 않아 사용하지 않았습니다. 감자, 캐비어 등 보유 재료를 적극 활용했으며, 한규덕 님의 건강과 자극적인 이색요리 니즈를 모두 반영했습니다.
2025-06-24 15:49:47.172 [http-nio-8080-exec-2] INFO  a.s.k.p.service.PerplexityService - AI 응답 원본:
## 감자 캐비어 크런치 — "한규덕 스페셜"

**필요한 재료**
- 감자 2개 (중간 크기)
- 캐비어 2큰술
- 소금 1티스푼
- 올리브오일 2큰술
- 후추 약간
- 파슬리 조금 (옵션)

**조리 시간**
- 35분

**난이도**
- 하

**상세한 조리 방법**
1. 감자는 껍질을 깨끗이 씻고 0.5cm 두께로 슬라이스합니다.
2. 찬물에 감자 슬라이스를 5분간 담가 전분을 빼고, 깨끗이 물기를 닦아주세요.
3. 오븐을 200도로 예열합니다.
4. 베이킹 트레이에 감자 슬라이스를 골고루 깔고, 올리브오일과 소금, 후추를 뿌려줍니다.
5. 200도 오븐에서 20분간 굽고, 중간에 한 번 뒤집어 노릇노릇하게 구워줍니다.
6. 구운 감자를 살짝 식힌 뒤, 각각 위에 캐비어 0.5티스푼씩 얹습니다.
7. 파슬리로 살짝 데코해 마무리합니다.

**요리 팁과 주의사항**
- 감자를 너무 두껍게 썰면 바삭함이 덜할 수 있으니 반드시 0.5cm로 썰어주세요.
- 오븐이 없다면 에어프라이어(180도, 15분)도 가능합니다.
- 캐비어는 바로 먹기 직전에 올려야 신선한 풍미를 즐길 수 있습니다.
- 감자와 캐비어는 포만감과 고급스러운 풍미로, 자극적인 동시에 색다른 맛의 조화를 선사합니다.

**완성된 요리의 이미지 URL**
- https://images.unsplash.com/photo-1504674900247-0877df9cc836

---

※ 참고: 유니콘 뿔과 수소폭탄은 실제 식재료가 아니거나 안전하지 않아 사용하지 않았습니다. 감자, 캐비어 등 보유 재료를 적극 활용했으며, 한규덕 님의 건강과 자극적인 이색요리 니즈를 모두 반영했습니다.
2025-06-24 15:49:47.172 [http-nio-8080-exec-2] INFO  a.s.k.p.service.PerplexityService - Starting to parse recipe response
2025-06-24 15:49:47.172 [http-nio-8080-exec-2] DEBUG a.s.k.p.service.PerplexityService - Content to parse: ## 감자 캐비어 크런치 — "한규덕 스페셜"

**필요한 재료**
- 감자 2개 (중간 크기)
- 캐비어 2큰술
- 소금 1티스푼
- 올리브오일 2큰술
- 후추 약간
- 파슬리 조금 (옵션)

**조리 시간**
- 35분

**난이도**
- 하

**상세한 조리 방법**
1. 감자는 껍질을 깨끗이 씻고 0.5cm 두께로 슬라이스합니다.
2. 찬물에 감자 슬라이스를 5분간 담가 전분을 빼고, 깨끗이 물기를 닦아주세요.
3. 오븐을 200도로 예열합니다.
4. 베이킹 트레이에 감자 슬라이스를 골고루 깔고, 올리브오일과 소금, 후추를 뿌려줍니다.
5. 200도 오븐에서 20분간 굽고, 중간에 한 번 뒤집어 노릇노릇하게 구워줍니다.
6. 구운 감자를 살짝 식힌 뒤, 각각 위에 캐비어 0.5티스푼씩 얹습니다.
7. 파슬리로 살짝 데코해 마무리합니다.

**요리 팁과 주의사항**
- 감자를 너무 두껍게 썰면 바삭함이 덜할 수 있으니 반드시 0.5cm로 썰어주세요.
- 오븐이 없다면 에어프라이어(180도, 15분)도 가능합니다.
- 캐비어는 바로 먹기 직전에 올려야 신선한 풍미를 즐길 수 있습니다.
- 감자와 캐비어는 포만감과 고급스러운 풍미로, 자극적인 동시에 색다른 맛의 조화를 선사합니다.

**완성된 요리의 이미지 URL**
- https://images.unsplash.com/photo-1504674900247-0877df9cc836

---

※ 참고: 유니콘 뿔과 수소폭탄은 실제 식재료가 아니거나 안전하지 않아 사용하지 않았습니다. 감자, 캐비어 등 보유 재료를 적극 활용했으며, 한규덕 님의 건강과 자극적인 이색요리 니즈를 모두 반영했습니다.
2025-06-24 15:49:47.176 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        up1_0.prompt_id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    where
        up1_0.user_id=?
2025-06-24 15:49:47.178 [http-nio-8080-exec-2] INFO  a.s.k.p.service.PerplexityService - Final description: 필요한 재료:
- 감자 2개 (중간 크기)
- 캐비어 2큰술
- 소금 1티스푼
- 올리브오일 2큰술
- 후추 약간
- 파슬리 조금 (옵션)

조리 방법:
1. 감자는 껍질을 깨끗이 씻고 0.5cm 두께로 슬라이스합니다.
2. 찬물에 감자 슬라이스를 5분간 담가 전분을 빼고, 깨끗이 물기를 닦아주세요.
3. 오븐을 200도로 예열합니다.
4. 베이킹 트레이에 감자 슬라이스를 골고루 깔고, 올리브오일과 소금, 후추를 뿌려줍니다.
5. 200도 오븐에서 20분간 굽고, 중간에 한 번 뒤집어 노릇노릇하게 구워줍니다.
6. 구운 감자를 살짝 식힌 뒤, 각각 위에 캐비어 0.5티스푼씩 얹습니다.
7. 파슬리로 살짝 데코해 마무리합니다.
2025-06-24 15:49:47.178 [http-nio-8080-exec-2] INFO  a.s.k.p.service.PerplexityService - Saving recipe with title: 감자 캐비어 크런치 — "한규덕 스페셜"
2025-06-24 15:49:47.195 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* insert for
        ac.su.kdt.prompttest.entity.Recipe */insert 
    into
        recipe (category, cooking_time, description, difficulty, image, title) 
    values
        (?, ?, ?, ?, ?, ?)
2025-06-24 15:49:47.202 [http-nio-8080-exec-2] INFO  a.s.k.p.service.PerplexityService - Saved recipe with ID: 13
2025-06-24 15:49:47.202 [http-nio-8080-exec-2] INFO  a.s.k.p.service.PerplexityService - Successfully parsed recipe with ID: 13
2025-06-24 15:49:58.361 [http-nio-8080-exec-3] INFO  a.s.k.p.service.PerplexityService - Starting getResponse for userId: 1, prompt: 자극적인 이색  요리를 먹고싶어
2025-06-24 15:49:58.362 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.provider_id,
        u1_0.updated_at,
        u1_0.username,
        r1_0.user_user_id,
        r1_0.roles 
    from
        user u1_0 
    left join
        user_roles r1_0 
            on u1_0.user_id=r1_0.user_user_id 
    where
        u1_0.user_id=?
2025-06-24 15:49:58.365 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        up1_0.prompt_id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    where
        up1_0.user_id=?
2025-06-24 15:49:58.366 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ui1_0.ingredient_id,
        ui1_0.user_id,
        ui1_0.weight_in_grams 
    from
        user_ingredient ui1_0 
    join
        user u1_0 
            on u1_0.user_id=ui1_0.user_id 
    where
        u1_0.user_id=?
2025-06-24 15:49:58.367 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:49:58.367 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:49:58.368 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:49:58.368 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:49:58.368 [http-nio-8080-exec-3] DEBUG a.s.k.p.service.PerplexityService - System prompt: 당신은 레시피 추천 전문가입니다. 사용자가 가지고 있는 재료는 다음과 같습니다:
- 감자
- 캐비어
- 유니콘 뿔
- 수소폭탄
아래 보유재료를 반드시 1개 이상 포함해서 레시피를 추천해주세요. 보유재료가 하나도 포함되지 않으면 답변하지 마세요. 보유재료를 최대한 많이 활용한 레시피를 우선 추천하고, 불가피할 경우 1개 이상만이라도 반드시 포함해서 추천해주세요.  

다음 사용자의 특성을 고려하여 레시피를 추천해주세요:

- 이름: 한규덕
- 나이: 30세
- 성별: 남성
- 닉네임: 한규덕
- 건강 상태: 건강
- 알레르기: 땅콩
- 선호하는 음식: 육류


건강 상태에 따른 특별 지시사항:
현재 사용자는 건강 상태입니다. 해당 건강 상태에 맞는 적절한 식단을 추천해주세요.

다음 사항을 고려하여 레시피를 추천해주세요:
1. 해당 건강 상태에 맞는 영양소를 포함한 재료를 선택해주세요.
2. 해당 건강 상태에 해로운 성분이 포함된 재료는 피해주세요.
3. 건강 상태 개선에 도움이 되는 조리 방법을 선택해주세요.
4. 필요한 경우, 특정 재료의 대체재를 제안해주세요.

알레르기 주의사항:
- 땅콩 알레르기가 있으므로 해당 재료를 제외한 레시피를 추천해주세요.

## 사용자 요청
자극적인 이색  요리를 먹고싶어

레시피는 다음 형식으로 제공해주세요:
## 요리 이름

**필요한 재료**
- 재료명
- 재료명
...

**조리 시간**
- 시간분

**난이도**
- 난이도 (상/중/하 중 하나)

**상세한 조리 방법**
1. 첫 번째 단계
2. 두 번째 단계
...

**요리 팁과 주의사항**
- 팁 또는 주의사항
- 팁 또는 주의사항

**완성된 요리의 이미지 URL**
- 실제 이미지 URL

주의사항:
- 모든 재료의 양과 단위를 정확히 명시해주세요.
- 조리 방법은 반드시 포함해야 하며, 순서대로 상세히 설명해주세요.
- 요리 팁과 주의사항은 실제 조리 시 도움이 될 수 있는 내용을 포함해주세요.
- 요리 이미지 URL은 실제 존재하는 이미지의 URL을 제공해주세요.
- 난이도는 반드시 '상', '중', '하' 중 하나로만 표기해주세요.
- 각 섹션은 정확히 위의 형식을 따라주세요.
- 조리 방법 섹션을 절대 생략하지 마세요. 반드시 포함해주세요.
- '상세한 조리 방법' 섹션이 누락되면 답변하지 마세요. 반드시 포함하세요.
- 아래 예시처럼 모든 섹션이 빠짐없이 포함된 답변만 작성하세요.
아래는 예시입니다. 반드시 이 형식을 따라 답변하세요.

## 닭가슴살 감자볶음

**필요한 재료**
- 닭가슴살
- 감자
- 양파
- 대파
- 다진 마늘
- 식용유
- 간장
- 소금
- 후추

**조리 시간**
- 20분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 깍둑썰기 해주세요.
2. 닭가슴살은 한 입 크기로 썰어 소금, 후추로 밑간합니다.
3. 팬에 식용유를 두르고 다진 마늘, 대파를 볶아 향을 냅니다.
4. 닭가슴살을 넣고 익을 때까지 볶습니다.
5. 감자, 양파를 넣고 5분간 볶은 뒤 간장으로 간을 맞춥니다.
6. 감자가 익을 때까지 중불에서 볶아 완성합니다.

**요리 팁과 주의사항**
- 감자는 미리 전자레인지에 3분간 돌리면 더 빨리 익힙니다.
- 닭가슴살 대신 돼지고기나 소고기를 사용해도 좋습니다.

**완성된 요리의 이미지 URL**
- https://example.com/sample.jpg


2025-06-24 15:49:58.369 [http-nio-8080-exec-3] INFO  a.s.k.p.service.PerplexityService - Sending request to Perplexity API
2025-06-24 15:49:58.369 [http-nio-8080-exec-3] DEBUG a.s.k.p.service.PerplexityService - Request headers: [Content-Type:"application/json", Authorization:"Bearer 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"]
2025-06-24 15:49:58.369 [http-nio-8080-exec-3] DEBUG a.s.k.p.service.PerplexityService - Request body: {messages=[{role=system, content=당신은 레시피 추천 전문가입니다. 사용자가 가지고 있는 재료는 다음과 같습니다:
- 감자
- 캐비어
- 유니콘 뿔
- 수소폭탄
아래 보유재료를 반드시 1개 이상 포함해서 레시피를 추천해주세요. 보유재료가 하나도 포함되지 않으면 답변하지 마세요. 보유재료를 최대한 많이 활용한 레시피를 우선 추천하고, 불가피할 경우 1개 이상만이라도 반드시 포함해서 추천해주세요.  

다음 사용자의 특성을 고려하여 레시피를 추천해주세요:

- 이름: 한규덕
- 나이: 30세
- 성별: 남성
- 닉네임: 한규덕
- 건강 상태: 건강
- 알레르기: 땅콩
- 선호하는 음식: 육류


건강 상태에 따른 특별 지시사항:
현재 사용자는 건강 상태입니다. 해당 건강 상태에 맞는 적절한 식단을 추천해주세요.

다음 사항을 고려하여 레시피를 추천해주세요:
1. 해당 건강 상태에 맞는 영양소를 포함한 재료를 선택해주세요.
2. 해당 건강 상태에 해로운 성분이 포함된 재료는 피해주세요.
3. 건강 상태 개선에 도움이 되는 조리 방법을 선택해주세요.
4. 필요한 경우, 특정 재료의 대체재를 제안해주세요.

알레르기 주의사항:
- 땅콩 알레르기가 있으므로 해당 재료를 제외한 레시피를 추천해주세요.

## 사용자 요청
자극적인 이색  요리를 먹고싶어

레시피는 다음 형식으로 제공해주세요:
## 요리 이름

**필요한 재료**
- 재료명
- 재료명
...

**조리 시간**
- 시간분

**난이도**
- 난이도 (상/중/하 중 하나)

**상세한 조리 방법**
1. 첫 번째 단계
2. 두 번째 단계
...

**요리 팁과 주의사항**
- 팁 또는 주의사항
- 팁 또는 주의사항

**완성된 요리의 이미지 URL**
- 실제 이미지 URL

주의사항:
- 모든 재료의 양과 단위를 정확히 명시해주세요.
- 조리 방법은 반드시 포함해야 하며, 순서대로 상세히 설명해주세요.
- 요리 팁과 주의사항은 실제 조리 시 도움이 될 수 있는 내용을 포함해주세요.
- 요리 이미지 URL은 실제 존재하는 이미지의 URL을 제공해주세요.
- 난이도는 반드시 '상', '중', '하' 중 하나로만 표기해주세요.
- 각 섹션은 정확히 위의 형식을 따라주세요.
- 조리 방법 섹션을 절대 생략하지 마세요. 반드시 포함해주세요.
- '상세한 조리 방법' 섹션이 누락되면 답변하지 마세요. 반드시 포함하세요.
- 아래 예시처럼 모든 섹션이 빠짐없이 포함된 답변만 작성하세요.
아래는 예시입니다. 반드시 이 형식을 따라 답변하세요.

## 닭가슴살 감자볶음

**필요한 재료**
- 닭가슴살
- 감자
- 양파
- 대파
- 다진 마늘
- 식용유
- 간장
- 소금
- 후추

**조리 시간**
- 20분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 깍둑썰기 해주세요.
2. 닭가슴살은 한 입 크기로 썰어 소금, 후추로 밑간합니다.
3. 팬에 식용유를 두르고 다진 마늘, 대파를 볶아 향을 냅니다.
4. 닭가슴살을 넣고 익을 때까지 볶습니다.
5. 감자, 양파를 넣고 5분간 볶은 뒤 간장으로 간을 맞춥니다.
6. 감자가 익을 때까지 중불에서 볶아 완성합니다.

**요리 팁과 주의사항**
- 감자는 미리 전자레인지에 3분간 돌리면 더 빨리 익힙니다.
- 닭가슴살 대신 돼지고기나 소고기를 사용해도 좋습니다.

**완성된 요리의 이미지 URL**
- https://example.com/sample.jpg

}, {role=user, content=자극적인 이색  요리를 먹고싶어}], model=sonar-pro}
2025-06-24 15:50:04.679 [http-nio-8080-exec-3] INFO  a.s.k.p.service.PerplexityService - Received response from Perplexity API
2025-06-24 15:50:04.679 [http-nio-8080-exec-3] DEBUG a.s.k.p.service.PerplexityService - Response: {id=5ecf0dc2-37c0-44e2-bb45-81fe22b69831, model=sonar-pro, created=1750747804, usage={prompt_tokens=1027, completion_tokens=566, total_tokens=1593, search_context_size=low}, citations=[https://blog.naver.com/kyakya_4001/223516347298, https://post.naver.com/viewer/postView.naver?volumeNo=32975334&memberNo=54534187, https://m.10000recipe.com/recipe/list.html?q=%EC%9D%B4%EC%83%89%EC%9D%8C%EC%8B%9D, http://www.gokmu.com/news/article.html?no=14970, https://www.youtube.com/watch?v=2ZKGGmlZgYs], search_results=[{title=자취레시피 4 , 자극적인 음식이 땡겨, url=https://blog.naver.com/kyakya_4001/223516347298, date=2024-07-17}, {title=아니 이런 음식들이 있다고? 전 세계 이색음식 모음, url=https://post.naver.com/viewer/postView.naver?volumeNo=32975334&memberNo=54534187, date=2021-12-20}, {title=이색음식, url=https://m.10000recipe.com/recipe/list.html?q=%EC%9D%B4%EC%83%89%EC%9D%8C%EC%8B%9D, date=null}, {title=맛 전문가가 추천하는 '이색 먹거리' World Best 5, url=http://www.gokmu.com/news/article.html?no=14970, date=2018-09-03}, {title=자극적인 건 싫어요! 건강을 생각한다면 하얀색 음식으로! ..., url=https://www.youtube.com/watch?v=2ZKGGmlZgYs, date=null}], object=chat.completion, choices=[{index=0, finish_reason=stop, message={role=assistant, content=## 감자 캐비어 이색 어드벤처

**필요한 재료**
- 감자 2개 (중간 크기, 약 300g)
- 캐비어 20g
- 소금 1작은술
- 올리브오일 2큰술
- 다진 파슬리 약간
- 버터 10g
- 후추 약간

**조리 시간**
- 35분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 깨끗이 씻어 껍질째 끓는 물에 소금을 넣고 20분간 삶아줍니다.
2. 삶은 감자를 뜨거울 때 껍질을 벗긴 뒤, 으깨서 볼에 담아주세요.
3. 으깬 감자에 버터와 올리브오일을 넣고 잘 섞으며 부드럽게 만듭니다. 소금과 후추로 간을 맞춥니다.
4. 넓은 평평한 접시에 으깬 감자를 도톰하게 올려 평평하게 펴줍니다.
5. 그 위에 캐비어를 얹고, 다진 파슬리를 소량 뿌려 장식합니다.
6. 원한다면 감자를 한입 크기로 동그랗게 빚어 미니 핑거푸드처럼 만들어도 좋습니다.
7. 완성된 요리는 즉시 제공해주세요.

**요리 팁과 주의사항**
- 감자는 너무 오래 삶으면 물러질 수 있으니 꼬치로 찔러 확인 후 바로 건져주세요.
- 캐비어는 가열하면 풍미가 사라지므로 반드시 마지막에 올려주세요.
- 더 이색적인 맛을 원한다면 레몬 제스트(레몬껍질의 노란 부분)를 소량 뿌려 상큼한 향을 추가해보세요.
- 땅콩 성분이 없어 알레르기 걱정 없이 드실 수 있습니다.

**완성된 요리의 이미지 URL**
- https://cdn.pixabay.com/photo/2017/09/28/18/13/potatoes-2797551_1280.jpg

---

> 유니콘 뿔과 수소폭탄은 실존하거나 식용 가능한 재료가 아니기 때문에 현실적으로 레시피에 포함되지 않습니다. 감자와 캐비어 조합은 평범한 듯하면서도 고급스럽고, 먹는 재미가 있는 이색적인 요리로 추천드립니다.}, delta={role=assistant, content=}}]}
2025-06-24 15:50:04.680 [http-nio-8080-exec-3] INFO  a.s.k.p.service.PerplexityService - Parsing AI response content
2025-06-24 15:50:04.680 [http-nio-8080-exec-3] DEBUG a.s.k.p.service.PerplexityService - Content: ## 감자 캐비어 이색 어드벤처

**필요한 재료**
- 감자 2개 (중간 크기, 약 300g)
- 캐비어 20g
- 소금 1작은술
- 올리브오일 2큰술
- 다진 파슬리 약간
- 버터 10g
- 후추 약간

**조리 시간**
- 35분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 깨끗이 씻어 껍질째 끓는 물에 소금을 넣고 20분간 삶아줍니다.
2. 삶은 감자를 뜨거울 때 껍질을 벗긴 뒤, 으깨서 볼에 담아주세요.
3. 으깬 감자에 버터와 올리브오일을 넣고 잘 섞으며 부드럽게 만듭니다. 소금과 후추로 간을 맞춥니다.
4. 넓은 평평한 접시에 으깬 감자를 도톰하게 올려 평평하게 펴줍니다.
5. 그 위에 캐비어를 얹고, 다진 파슬리를 소량 뿌려 장식합니다.
6. 원한다면 감자를 한입 크기로 동그랗게 빚어 미니 핑거푸드처럼 만들어도 좋습니다.
7. 완성된 요리는 즉시 제공해주세요.

**요리 팁과 주의사항**
- 감자는 너무 오래 삶으면 물러질 수 있으니 꼬치로 찔러 확인 후 바로 건져주세요.
- 캐비어는 가열하면 풍미가 사라지므로 반드시 마지막에 올려주세요.
- 더 이색적인 맛을 원한다면 레몬 제스트(레몬껍질의 노란 부분)를 소량 뿌려 상큼한 향을 추가해보세요.
- 땅콩 성분이 없어 알레르기 걱정 없이 드실 수 있습니다.

**완성된 요리의 이미지 URL**
- https://cdn.pixabay.com/photo/2017/09/28/18/13/potatoes-2797551_1280.jpg

---

> 유니콘 뿔과 수소폭탄은 실존하거나 식용 가능한 재료가 아니기 때문에 현실적으로 레시피에 포함되지 않습니다. 감자와 캐비어 조합은 평범한 듯하면서도 고급스럽고, 먹는 재미가 있는 이색적인 요리로 추천드립니다.
2025-06-24 15:50:04.680 [http-nio-8080-exec-3] INFO  a.s.k.p.service.PerplexityService - AI 응답 원본:
## 감자 캐비어 이색 어드벤처

**필요한 재료**
- 감자 2개 (중간 크기, 약 300g)
- 캐비어 20g
- 소금 1작은술
- 올리브오일 2큰술
- 다진 파슬리 약간
- 버터 10g
- 후추 약간

**조리 시간**
- 35분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 깨끗이 씻어 껍질째 끓는 물에 소금을 넣고 20분간 삶아줍니다.
2. 삶은 감자를 뜨거울 때 껍질을 벗긴 뒤, 으깨서 볼에 담아주세요.
3. 으깬 감자에 버터와 올리브오일을 넣고 잘 섞으며 부드럽게 만듭니다. 소금과 후추로 간을 맞춥니다.
4. 넓은 평평한 접시에 으깬 감자를 도톰하게 올려 평평하게 펴줍니다.
5. 그 위에 캐비어를 얹고, 다진 파슬리를 소량 뿌려 장식합니다.
6. 원한다면 감자를 한입 크기로 동그랗게 빚어 미니 핑거푸드처럼 만들어도 좋습니다.
7. 완성된 요리는 즉시 제공해주세요.

**요리 팁과 주의사항**
- 감자는 너무 오래 삶으면 물러질 수 있으니 꼬치로 찔러 확인 후 바로 건져주세요.
- 캐비어는 가열하면 풍미가 사라지므로 반드시 마지막에 올려주세요.
- 더 이색적인 맛을 원한다면 레몬 제스트(레몬껍질의 노란 부분)를 소량 뿌려 상큼한 향을 추가해보세요.
- 땅콩 성분이 없어 알레르기 걱정 없이 드실 수 있습니다.

**완성된 요리의 이미지 URL**
- https://cdn.pixabay.com/photo/2017/09/28/18/13/potatoes-2797551_1280.jpg

---

> 유니콘 뿔과 수소폭탄은 실존하거나 식용 가능한 재료가 아니기 때문에 현실적으로 레시피에 포함되지 않습니다. 감자와 캐비어 조합은 평범한 듯하면서도 고급스럽고, 먹는 재미가 있는 이색적인 요리로 추천드립니다.
2025-06-24 15:50:04.680 [http-nio-8080-exec-3] INFO  a.s.k.p.service.PerplexityService - Starting to parse recipe response
2025-06-24 15:50:04.680 [http-nio-8080-exec-3] DEBUG a.s.k.p.service.PerplexityService - Content to parse: ## 감자 캐비어 이색 어드벤처

**필요한 재료**
- 감자 2개 (중간 크기, 약 300g)
- 캐비어 20g
- 소금 1작은술
- 올리브오일 2큰술
- 다진 파슬리 약간
- 버터 10g
- 후추 약간

**조리 시간**
- 35분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 깨끗이 씻어 껍질째 끓는 물에 소금을 넣고 20분간 삶아줍니다.
2. 삶은 감자를 뜨거울 때 껍질을 벗긴 뒤, 으깨서 볼에 담아주세요.
3. 으깬 감자에 버터와 올리브오일을 넣고 잘 섞으며 부드럽게 만듭니다. 소금과 후추로 간을 맞춥니다.
4. 넓은 평평한 접시에 으깬 감자를 도톰하게 올려 평평하게 펴줍니다.
5. 그 위에 캐비어를 얹고, 다진 파슬리를 소량 뿌려 장식합니다.
6. 원한다면 감자를 한입 크기로 동그랗게 빚어 미니 핑거푸드처럼 만들어도 좋습니다.
7. 완성된 요리는 즉시 제공해주세요.

**요리 팁과 주의사항**
- 감자는 너무 오래 삶으면 물러질 수 있으니 꼬치로 찔러 확인 후 바로 건져주세요.
- 캐비어는 가열하면 풍미가 사라지므로 반드시 마지막에 올려주세요.
- 더 이색적인 맛을 원한다면 레몬 제스트(레몬껍질의 노란 부분)를 소량 뿌려 상큼한 향을 추가해보세요.
- 땅콩 성분이 없어 알레르기 걱정 없이 드실 수 있습니다.

**완성된 요리의 이미지 URL**
- https://cdn.pixabay.com/photo/2017/09/28/18/13/potatoes-2797551_1280.jpg

---

> 유니콘 뿔과 수소폭탄은 실존하거나 식용 가능한 재료가 아니기 때문에 현실적으로 레시피에 포함되지 않습니다. 감자와 캐비어 조합은 평범한 듯하면서도 고급스럽고, 먹는 재미가 있는 이색적인 요리로 추천드립니다.
2025-06-24 15:50:04.683 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        up1_0.prompt_id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    where
        up1_0.user_id=?
2025-06-24 15:50:04.684 [http-nio-8080-exec-3] WARN  a.s.k.p.service.PerplexityService - 알러지 재료(땅콩)가 포함된 레시피. 안내문구만 반환.
2025-06-24 15:50:04.684 [http-nio-8080-exec-3] INFO  a.s.k.p.service.PerplexityService - Successfully parsed recipe with ID: null
2025-06-24 15:50:42.908 [http-nio-8080-exec-4] INFO  a.s.k.p.service.PerplexityService - Starting getResponse for userId: 1, prompt: 자극적인 이색  요리를 먹고싶어
2025-06-24 15:50:42.910 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.provider_id,
        u1_0.updated_at,
        u1_0.username,
        r1_0.user_user_id,
        r1_0.roles 
    from
        user u1_0 
    left join
        user_roles r1_0 
            on u1_0.user_id=r1_0.user_user_id 
    where
        u1_0.user_id=?
2025-06-24 15:50:42.912 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        up1_0.prompt_id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    where
        up1_0.user_id=?
2025-06-24 15:50:42.913 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ui1_0.ingredient_id,
        ui1_0.user_id,
        ui1_0.weight_in_grams 
    from
        user_ingredient ui1_0 
    join
        user u1_0 
            on u1_0.user_id=ui1_0.user_id 
    where
        u1_0.user_id=?
2025-06-24 15:50:42.915 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:50:42.915 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:50:42.916 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:50:42.916 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:50:42.917 [http-nio-8080-exec-4] DEBUG a.s.k.p.service.PerplexityService - System prompt: 당신은 레시피 추천 전문가입니다. 사용자가 가지고 있는 재료는 다음과 같습니다:
- 감자
- 캐비어
- 유니콘 뿔
- 수소폭탄
아래 보유재료를 반드시 1개 이상 포함해서 레시피를 추천해주세요. 보유재료가 하나도 포함되지 않으면 답변하지 마세요. 보유재료를 최대한 많이 활용한 레시피를 우선 추천하고, 불가피할 경우 1개 이상만이라도 반드시 포함해서 추천해주세요.  

다음 사용자의 특성을 고려하여 레시피를 추천해주세요:

- 이름: 한규덕
- 나이: 30세
- 성별: 남성
- 닉네임: 한규덕
- 건강 상태: 건강
- 알레르기: 땅콩
- 선호하는 음식: 육류


건강 상태에 따른 특별 지시사항:
현재 사용자는 건강 상태입니다. 해당 건강 상태에 맞는 적절한 식단을 추천해주세요.

다음 사항을 고려하여 레시피를 추천해주세요:
1. 해당 건강 상태에 맞는 영양소를 포함한 재료를 선택해주세요.
2. 해당 건강 상태에 해로운 성분이 포함된 재료는 피해주세요.
3. 건강 상태 개선에 도움이 되는 조리 방법을 선택해주세요.
4. 필요한 경우, 특정 재료의 대체재를 제안해주세요.

알레르기 주의사항:
- 땅콩 알레르기가 있으므로 해당 재료를 제외한 레시피를 추천해주세요.

## 사용자 요청
자극적인 이색  요리를 먹고싶어

레시피는 다음 형식으로 제공해주세요:
## 요리 이름

**필요한 재료**
- 재료명
- 재료명
...

**조리 시간**
- 시간분

**난이도**
- 난이도 (상/중/하 중 하나)

**상세한 조리 방법**
1. 첫 번째 단계
2. 두 번째 단계
...

**요리 팁과 주의사항**
- 팁 또는 주의사항
- 팁 또는 주의사항

**완성된 요리의 이미지 URL**
- 실제 이미지 URL

주의사항:
- 모든 재료의 양과 단위를 정확히 명시해주세요.
- 조리 방법은 반드시 포함해야 하며, 순서대로 상세히 설명해주세요.
- 요리 팁과 주의사항은 실제 조리 시 도움이 될 수 있는 내용을 포함해주세요.
- 요리 이미지 URL은 실제 존재하는 이미지의 URL을 제공해주세요.
- 난이도는 반드시 '상', '중', '하' 중 하나로만 표기해주세요.
- 각 섹션은 정확히 위의 형식을 따라주세요.
- 조리 방법 섹션을 절대 생략하지 마세요. 반드시 포함해주세요.
- '상세한 조리 방법' 섹션이 누락되면 답변하지 마세요. 반드시 포함하세요.
- 아래 예시처럼 모든 섹션이 빠짐없이 포함된 답변만 작성하세요.
아래는 예시입니다. 반드시 이 형식을 따라 답변하세요.

## 닭가슴살 감자볶음

**필요한 재료**
- 닭가슴살
- 감자
- 양파
- 대파
- 다진 마늘
- 식용유
- 간장
- 소금
- 후추

**조리 시간**
- 20분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 깍둑썰기 해주세요.
2. 닭가슴살은 한 입 크기로 썰어 소금, 후추로 밑간합니다.
3. 팬에 식용유를 두르고 다진 마늘, 대파를 볶아 향을 냅니다.
4. 닭가슴살을 넣고 익을 때까지 볶습니다.
5. 감자, 양파를 넣고 5분간 볶은 뒤 간장으로 간을 맞춥니다.
6. 감자가 익을 때까지 중불에서 볶아 완성합니다.

**요리 팁과 주의사항**
- 감자는 미리 전자레인지에 3분간 돌리면 더 빨리 익힙니다.
- 닭가슴살 대신 돼지고기나 소고기를 사용해도 좋습니다.

**완성된 요리의 이미지 URL**
- https://example.com/sample.jpg


2025-06-24 15:50:42.917 [http-nio-8080-exec-4] INFO  a.s.k.p.service.PerplexityService - Sending request to Perplexity API
2025-06-24 15:50:42.917 [http-nio-8080-exec-4] DEBUG a.s.k.p.service.PerplexityService - Request headers: [Content-Type:"application/json", Authorization:"Bearer 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"]
2025-06-24 15:50:42.917 [http-nio-8080-exec-4] DEBUG a.s.k.p.service.PerplexityService - Request body: {messages=[{role=system, content=당신은 레시피 추천 전문가입니다. 사용자가 가지고 있는 재료는 다음과 같습니다:
- 감자
- 캐비어
- 유니콘 뿔
- 수소폭탄
아래 보유재료를 반드시 1개 이상 포함해서 레시피를 추천해주세요. 보유재료가 하나도 포함되지 않으면 답변하지 마세요. 보유재료를 최대한 많이 활용한 레시피를 우선 추천하고, 불가피할 경우 1개 이상만이라도 반드시 포함해서 추천해주세요.  

다음 사용자의 특성을 고려하여 레시피를 추천해주세요:

- 이름: 한규덕
- 나이: 30세
- 성별: 남성
- 닉네임: 한규덕
- 건강 상태: 건강
- 알레르기: 땅콩
- 선호하는 음식: 육류


건강 상태에 따른 특별 지시사항:
현재 사용자는 건강 상태입니다. 해당 건강 상태에 맞는 적절한 식단을 추천해주세요.

다음 사항을 고려하여 레시피를 추천해주세요:
1. 해당 건강 상태에 맞는 영양소를 포함한 재료를 선택해주세요.
2. 해당 건강 상태에 해로운 성분이 포함된 재료는 피해주세요.
3. 건강 상태 개선에 도움이 되는 조리 방법을 선택해주세요.
4. 필요한 경우, 특정 재료의 대체재를 제안해주세요.

알레르기 주의사항:
- 땅콩 알레르기가 있으므로 해당 재료를 제외한 레시피를 추천해주세요.

## 사용자 요청
자극적인 이색  요리를 먹고싶어

레시피는 다음 형식으로 제공해주세요:
## 요리 이름

**필요한 재료**
- 재료명
- 재료명
...

**조리 시간**
- 시간분

**난이도**
- 난이도 (상/중/하 중 하나)

**상세한 조리 방법**
1. 첫 번째 단계
2. 두 번째 단계
...

**요리 팁과 주의사항**
- 팁 또는 주의사항
- 팁 또는 주의사항

**완성된 요리의 이미지 URL**
- 실제 이미지 URL

주의사항:
- 모든 재료의 양과 단위를 정확히 명시해주세요.
- 조리 방법은 반드시 포함해야 하며, 순서대로 상세히 설명해주세요.
- 요리 팁과 주의사항은 실제 조리 시 도움이 될 수 있는 내용을 포함해주세요.
- 요리 이미지 URL은 실제 존재하는 이미지의 URL을 제공해주세요.
- 난이도는 반드시 '상', '중', '하' 중 하나로만 표기해주세요.
- 각 섹션은 정확히 위의 형식을 따라주세요.
- 조리 방법 섹션을 절대 생략하지 마세요. 반드시 포함해주세요.
- '상세한 조리 방법' 섹션이 누락되면 답변하지 마세요. 반드시 포함하세요.
- 아래 예시처럼 모든 섹션이 빠짐없이 포함된 답변만 작성하세요.
아래는 예시입니다. 반드시 이 형식을 따라 답변하세요.

## 닭가슴살 감자볶음

**필요한 재료**
- 닭가슴살
- 감자
- 양파
- 대파
- 다진 마늘
- 식용유
- 간장
- 소금
- 후추

**조리 시간**
- 20분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 깍둑썰기 해주세요.
2. 닭가슴살은 한 입 크기로 썰어 소금, 후추로 밑간합니다.
3. 팬에 식용유를 두르고 다진 마늘, 대파를 볶아 향을 냅니다.
4. 닭가슴살을 넣고 익을 때까지 볶습니다.
5. 감자, 양파를 넣고 5분간 볶은 뒤 간장으로 간을 맞춥니다.
6. 감자가 익을 때까지 중불에서 볶아 완성합니다.

**요리 팁과 주의사항**
- 감자는 미리 전자레인지에 3분간 돌리면 더 빨리 익힙니다.
- 닭가슴살 대신 돼지고기나 소고기를 사용해도 좋습니다.

**완성된 요리의 이미지 URL**
- https://example.com/sample.jpg

}, {role=user, content=자극적인 이색  요리를 먹고싶어}], model=sonar-pro}
2025-06-24 15:50:52.628 [http-nio-8080-exec-4] INFO  a.s.k.p.service.PerplexityService - Received response from Perplexity API
2025-06-24 15:50:52.629 [http-nio-8080-exec-4] DEBUG a.s.k.p.service.PerplexityService - Response: {id=daf4bc8f-d8dc-4403-80d7-1862d59e32cd, model=sonar-pro, created=1750747852, usage={prompt_tokens=1027, completion_tokens=780, total_tokens=1807, search_context_size=low}, citations=[https://blog.naver.com/kyakya_4001/223516347298, https://post.naver.com/viewer/postView.naver?volumeNo=32975334&memberNo=54534187, https://m.10000recipe.com/recipe/list.html?q=%EC%9D%B4%EC%83%89%EC%9D%8C%EC%8B%9D, http://www.gokmu.com/news/article.html?no=14970, https://www.youtube.com/watch?v=2ZKGGmlZgYs], search_results=[{title=자취레시피 4 , 자극적인 음식이 땡겨, url=https://blog.naver.com/kyakya_4001/223516347298, date=2024-07-17}, {title=아니 이런 음식들이 있다고? 전 세계 이색음식 모음, url=https://post.naver.com/viewer/postView.naver?volumeNo=32975334&memberNo=54534187, date=2021-12-20}, {title=이색음식, url=https://m.10000recipe.com/recipe/list.html?q=%EC%9D%B4%EC%83%89%EC%9D%8C%EC%8B%9D, date=null}, {title=맛 전문가가 추천하는 '이색 먹거리' World Best 5, url=http://www.gokmu.com/news/article.html?no=14970, date=2018-09-03}, {title=자극적인 건 싫어요! 건강을 생각한다면 하얀색 음식으로! ..., url=https://www.youtube.com/watch?v=2ZKGGmlZgYs, date=null}], object=chat.completion, choices=[{index=0, finish_reason=stop, message={role=assistant, content=## 감자 퓨레 캐비어와 이색 유니콘 뿔 플레이팅

**필요한 재료**
- 감자 2개 (중간 크기, 약 300g)
- 캐비어 1큰술 (약 10g)
- 버터 20g
- 우유 60ml
- 소금 1작은술
- 후추 약간
- 유니콘 뿔(이색 연출을 위한 데코용, 실제 식용 금지)

**조리 시간**
- 30분

**난이도**
- 하

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 3cm 크기로 잘라 흐르는 물에 헹군 뒤 냄비에 담아줍니다.
2. 감자가 충분히 잠길 정도로 물을 붓고, 소금 반 작은술을 넣은 뒤 센불에서 끓입니다.
3. 감자가 익으면(약 15~20분) 뜨거운 물을 따라내고, 뜨거운 상태에서 포크나 감자으깨기를 사용해 곱게 으깨줍니다.
4. 으깬 감자에 버터와 우유를 넣고 부드럽게 섞으면서 나머지 소금과 후추로 간을 맞춥니다.
5. 넓은 접시에 감자퓨레를 동그랗게 올리고 가운데를 오목하게 만들어줍니다.
6. 오목하게 만들어진 부분에 캐비어를 얹어 고급스러운 비주얼을 연출합니다.
7. (이색 연출용) 유니콘 뿔을 플레이팅에 데코로 세워서 이색적이고 자극적인 느낌을 더합니다. 단, 유니콘 뿔은 실제 식용이 불가능하니 절대로 먹지 마세요.

**요리 팁과 주의사항**
- 감자를 더 부드럽게 즐기고 싶다면 체에 한 번 더 걸러주면 최고의 식감이 됩니다.
- 캐비어는 짠맛이 강하니 감자퓨레에는 너무 많은 소금을 사용하지 마세요.
- 유니콘 뿔은 플라스틱, 설탕 조형 등 실제 식용이 가능한 모형이나 장식을 활용하세요. 현실에서는 진짜 유니콘 뿔이 없어 플레이팅용 소품을 사용하길 권장합니다.
- 감자 대용으로 고구마, 단호박 퓨레도 가능하나 감자가 가장 담백하게 캐비어와 어울립니다.
- 수소폭탄은 실제 사용 시 위험하므로, 절대 요리에 포함하지 마시고 유머러스한 대화 소재로만 활용하세요.

**완성된 요리의 이미지 URL**
- https://images.unsplash.com/photo-1504674900247-0877df9cc836

---

이 레시피는 감자와 캐비어의 조합에 유니콘 뿔이라는 비현실적 요소를 더해 자극적이고 이색적인 비주얼을 연출했습니다. 영양적으로 감자에서 탄수화물, 캐비어에서 단백질과 무기질을 섭취할 수 있으며, 조리법은 부담스럽지 않아 매일 건강한 식단에도 부담이 없습니다. 단, 일부 재료(유니콘 뿔 및 수소폭탄)는 현실적으로 플레이트 데코용, 혹은 조크로만 활용하세요.}, delta={role=assistant, content=}}]}
2025-06-24 15:50:52.629 [http-nio-8080-exec-4] INFO  a.s.k.p.service.PerplexityService - Parsing AI response content
2025-06-24 15:50:52.629 [http-nio-8080-exec-4] DEBUG a.s.k.p.service.PerplexityService - Content: ## 감자 퓨레 캐비어와 이색 유니콘 뿔 플레이팅

**필요한 재료**
- 감자 2개 (중간 크기, 약 300g)
- 캐비어 1큰술 (약 10g)
- 버터 20g
- 우유 60ml
- 소금 1작은술
- 후추 약간
- 유니콘 뿔(이색 연출을 위한 데코용, 실제 식용 금지)

**조리 시간**
- 30분

**난이도**
- 하

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 3cm 크기로 잘라 흐르는 물에 헹군 뒤 냄비에 담아줍니다.
2. 감자가 충분히 잠길 정도로 물을 붓고, 소금 반 작은술을 넣은 뒤 센불에서 끓입니다.
3. 감자가 익으면(약 15~20분) 뜨거운 물을 따라내고, 뜨거운 상태에서 포크나 감자으깨기를 사용해 곱게 으깨줍니다.
4. 으깬 감자에 버터와 우유를 넣고 부드럽게 섞으면서 나머지 소금과 후추로 간을 맞춥니다.
5. 넓은 접시에 감자퓨레를 동그랗게 올리고 가운데를 오목하게 만들어줍니다.
6. 오목하게 만들어진 부분에 캐비어를 얹어 고급스러운 비주얼을 연출합니다.
7. (이색 연출용) 유니콘 뿔을 플레이팅에 데코로 세워서 이색적이고 자극적인 느낌을 더합니다. 단, 유니콘 뿔은 실제 식용이 불가능하니 절대로 먹지 마세요.

**요리 팁과 주의사항**
- 감자를 더 부드럽게 즐기고 싶다면 체에 한 번 더 걸러주면 최고의 식감이 됩니다.
- 캐비어는 짠맛이 강하니 감자퓨레에는 너무 많은 소금을 사용하지 마세요.
- 유니콘 뿔은 플라스틱, 설탕 조형 등 실제 식용이 가능한 모형이나 장식을 활용하세요. 현실에서는 진짜 유니콘 뿔이 없어 플레이팅용 소품을 사용하길 권장합니다.
- 감자 대용으로 고구마, 단호박 퓨레도 가능하나 감자가 가장 담백하게 캐비어와 어울립니다.
- 수소폭탄은 실제 사용 시 위험하므로, 절대 요리에 포함하지 마시고 유머러스한 대화 소재로만 활용하세요.

**완성된 요리의 이미지 URL**
- https://images.unsplash.com/photo-1504674900247-0877df9cc836

---

이 레시피는 감자와 캐비어의 조합에 유니콘 뿔이라는 비현실적 요소를 더해 자극적이고 이색적인 비주얼을 연출했습니다. 영양적으로 감자에서 탄수화물, 캐비어에서 단백질과 무기질을 섭취할 수 있으며, 조리법은 부담스럽지 않아 매일 건강한 식단에도 부담이 없습니다. 단, 일부 재료(유니콘 뿔 및 수소폭탄)는 현실적으로 플레이트 데코용, 혹은 조크로만 활용하세요.
2025-06-24 15:50:52.629 [http-nio-8080-exec-4] INFO  a.s.k.p.service.PerplexityService - AI 응답 원본:
## 감자 퓨레 캐비어와 이색 유니콘 뿔 플레이팅

**필요한 재료**
- 감자 2개 (중간 크기, 약 300g)
- 캐비어 1큰술 (약 10g)
- 버터 20g
- 우유 60ml
- 소금 1작은술
- 후추 약간
- 유니콘 뿔(이색 연출을 위한 데코용, 실제 식용 금지)

**조리 시간**
- 30분

**난이도**
- 하

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 3cm 크기로 잘라 흐르는 물에 헹군 뒤 냄비에 담아줍니다.
2. 감자가 충분히 잠길 정도로 물을 붓고, 소금 반 작은술을 넣은 뒤 센불에서 끓입니다.
3. 감자가 익으면(약 15~20분) 뜨거운 물을 따라내고, 뜨거운 상태에서 포크나 감자으깨기를 사용해 곱게 으깨줍니다.
4. 으깬 감자에 버터와 우유를 넣고 부드럽게 섞으면서 나머지 소금과 후추로 간을 맞춥니다.
5. 넓은 접시에 감자퓨레를 동그랗게 올리고 가운데를 오목하게 만들어줍니다.
6. 오목하게 만들어진 부분에 캐비어를 얹어 고급스러운 비주얼을 연출합니다.
7. (이색 연출용) 유니콘 뿔을 플레이팅에 데코로 세워서 이색적이고 자극적인 느낌을 더합니다. 단, 유니콘 뿔은 실제 식용이 불가능하니 절대로 먹지 마세요.

**요리 팁과 주의사항**
- 감자를 더 부드럽게 즐기고 싶다면 체에 한 번 더 걸러주면 최고의 식감이 됩니다.
- 캐비어는 짠맛이 강하니 감자퓨레에는 너무 많은 소금을 사용하지 마세요.
- 유니콘 뿔은 플라스틱, 설탕 조형 등 실제 식용이 가능한 모형이나 장식을 활용하세요. 현실에서는 진짜 유니콘 뿔이 없어 플레이팅용 소품을 사용하길 권장합니다.
- 감자 대용으로 고구마, 단호박 퓨레도 가능하나 감자가 가장 담백하게 캐비어와 어울립니다.
- 수소폭탄은 실제 사용 시 위험하므로, 절대 요리에 포함하지 마시고 유머러스한 대화 소재로만 활용하세요.

**완성된 요리의 이미지 URL**
- https://images.unsplash.com/photo-1504674900247-0877df9cc836

---

이 레시피는 감자와 캐비어의 조합에 유니콘 뿔이라는 비현실적 요소를 더해 자극적이고 이색적인 비주얼을 연출했습니다. 영양적으로 감자에서 탄수화물, 캐비어에서 단백질과 무기질을 섭취할 수 있으며, 조리법은 부담스럽지 않아 매일 건강한 식단에도 부담이 없습니다. 단, 일부 재료(유니콘 뿔 및 수소폭탄)는 현실적으로 플레이트 데코용, 혹은 조크로만 활용하세요.
2025-06-24 15:50:52.630 [http-nio-8080-exec-4] INFO  a.s.k.p.service.PerplexityService - Starting to parse recipe response
2025-06-24 15:50:52.630 [http-nio-8080-exec-4] DEBUG a.s.k.p.service.PerplexityService - Content to parse: ## 감자 퓨레 캐비어와 이색 유니콘 뿔 플레이팅

**필요한 재료**
- 감자 2개 (중간 크기, 약 300g)
- 캐비어 1큰술 (약 10g)
- 버터 20g
- 우유 60ml
- 소금 1작은술
- 후추 약간
- 유니콘 뿔(이색 연출을 위한 데코용, 실제 식용 금지)

**조리 시간**
- 30분

**난이도**
- 하

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 3cm 크기로 잘라 흐르는 물에 헹군 뒤 냄비에 담아줍니다.
2. 감자가 충분히 잠길 정도로 물을 붓고, 소금 반 작은술을 넣은 뒤 센불에서 끓입니다.
3. 감자가 익으면(약 15~20분) 뜨거운 물을 따라내고, 뜨거운 상태에서 포크나 감자으깨기를 사용해 곱게 으깨줍니다.
4. 으깬 감자에 버터와 우유를 넣고 부드럽게 섞으면서 나머지 소금과 후추로 간을 맞춥니다.
5. 넓은 접시에 감자퓨레를 동그랗게 올리고 가운데를 오목하게 만들어줍니다.
6. 오목하게 만들어진 부분에 캐비어를 얹어 고급스러운 비주얼을 연출합니다.
7. (이색 연출용) 유니콘 뿔을 플레이팅에 데코로 세워서 이색적이고 자극적인 느낌을 더합니다. 단, 유니콘 뿔은 실제 식용이 불가능하니 절대로 먹지 마세요.

**요리 팁과 주의사항**
- 감자를 더 부드럽게 즐기고 싶다면 체에 한 번 더 걸러주면 최고의 식감이 됩니다.
- 캐비어는 짠맛이 강하니 감자퓨레에는 너무 많은 소금을 사용하지 마세요.
- 유니콘 뿔은 플라스틱, 설탕 조형 등 실제 식용이 가능한 모형이나 장식을 활용하세요. 현실에서는 진짜 유니콘 뿔이 없어 플레이팅용 소품을 사용하길 권장합니다.
- 감자 대용으로 고구마, 단호박 퓨레도 가능하나 감자가 가장 담백하게 캐비어와 어울립니다.
- 수소폭탄은 실제 사용 시 위험하므로, 절대 요리에 포함하지 마시고 유머러스한 대화 소재로만 활용하세요.

**완성된 요리의 이미지 URL**
- https://images.unsplash.com/photo-1504674900247-0877df9cc836

---

이 레시피는 감자와 캐비어의 조합에 유니콘 뿔이라는 비현실적 요소를 더해 자극적이고 이색적인 비주얼을 연출했습니다. 영양적으로 감자에서 탄수화물, 캐비어에서 단백질과 무기질을 섭취할 수 있으며, 조리법은 부담스럽지 않아 매일 건강한 식단에도 부담이 없습니다. 단, 일부 재료(유니콘 뿔 및 수소폭탄)는 현실적으로 플레이트 데코용, 혹은 조크로만 활용하세요.
2025-06-24 15:50:52.636 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        up1_0.prompt_id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    where
        up1_0.user_id=?
2025-06-24 15:50:52.639 [http-nio-8080-exec-4] INFO  a.s.k.p.service.PerplexityService - Final description: 필요한 재료:
- 감자 2개 (중간 크기, 약 300g)
- 캐비어 1큰술 (약 10g)
- 버터 20g
- 우유 60ml
- 소금 1작은술
- 후추 약간
- 유니콘 뿔(이색 연출을 위한 데코용, 실제 식용 금지)

조리 방법:
1. 감자는 껍질을 벗기고 3cm 크기로 잘라 흐르는 물에 헹군 뒤 냄비에 담아줍니다.
2. 감자가 충분히 잠길 정도로 물을 붓고, 소금 반 작은술을 넣은 뒤 센불에서 끓입니다.
3. 감자가 익으면(약 15~20분) 뜨거운 물을 따라내고, 뜨거운 상태에서 포크나 감자으깨기를 사용해 곱게 으깨줍니다.
4. 으깬 감자에 버터와 우유를 넣고 부드럽게 섞으면서 나머지 소금과 후추로 간을 맞춥니다.
5. 넓은 접시에 감자퓨레를 동그랗게 올리고 가운데를 오목하게 만들어줍니다.
6. 오목하게 만들어진 부분에 캐비어를 얹어 고급스러운 비주얼을 연출합니다.
7. (이색 연출용) 유니콘 뿔을 플레이팅에 데코로 세워서 이색적이고 자극적인 느낌을 더합니다. 단, 유니콘 뿔은 실제 식용이 불가능하니 절대로 먹지 마세요.
2025-06-24 15:50:52.639 [http-nio-8080-exec-4] INFO  a.s.k.p.service.PerplexityService - Saving recipe with title: 감자 퓨레 캐비어와 이색 유니콘 뿔 플레이팅
2025-06-24 15:50:52.640 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* insert for
        ac.su.kdt.prompttest.entity.Recipe */insert 
    into
        recipe (category, cooking_time, description, difficulty, image, title) 
    values
        (?, ?, ?, ?, ?, ?)
2025-06-24 15:50:52.646 [http-nio-8080-exec-4] INFO  a.s.k.p.service.PerplexityService - Saved recipe with ID: 14
2025-06-24 15:50:52.646 [http-nio-8080-exec-4] INFO  a.s.k.p.service.PerplexityService - Successfully parsed recipe with ID: 14
2025-06-24 15:52:27.787 [http-nio-8080-exec-5] INFO  a.s.k.p.service.PerplexityService - Starting getResponse for userId: 1, prompt: 자극적인 이색  요리를 먹고싶어
2025-06-24 15:52:27.788 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.provider_id,
        u1_0.updated_at,
        u1_0.username,
        r1_0.user_user_id,
        r1_0.roles 
    from
        user u1_0 
    left join
        user_roles r1_0 
            on u1_0.user_id=r1_0.user_user_id 
    where
        u1_0.user_id=?
2025-06-24 15:52:27.791 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        up1_0.prompt_id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    where
        up1_0.user_id=?
2025-06-24 15:52:27.792 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ui1_0.ingredient_id,
        ui1_0.user_id,
        ui1_0.weight_in_grams 
    from
        user_ingredient ui1_0 
    join
        user u1_0 
            on u1_0.user_id=ui1_0.user_id 
    where
        u1_0.user_id=?
2025-06-24 15:52:27.793 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:52:27.794 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:52:27.794 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:52:27.795 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:52:27.795 [http-nio-8080-exec-5] DEBUG a.s.k.p.service.PerplexityService - System prompt: 당신은 레시피 추천 전문가입니다. 사용자가 가지고 있는 재료는 다음과 같습니다:
- 감자
- 캐비어
- 유니콘 뿔
- 수소폭탄
아래 보유재료를 반드시 1개 이상 포함해서 레시피를 추천해주세요. 보유재료가 하나도 포함되지 않으면 답변하지 마세요. 보유재료를 최대한 많이 활용한 레시피를 우선 추천하고, 불가피할 경우 1개 이상만이라도 반드시 포함해서 추천해주세요.  

다음 사용자의 특성을 고려하여 레시피를 추천해주세요:

- 이름: 한규덕
- 나이: 30세
- 성별: 남성
- 닉네임: 한규덕
- 건강 상태: 건강
- 알레르기: 땅콩
- 선호하는 음식: 육류


건강 상태에 따른 특별 지시사항:
현재 사용자는 건강 상태입니다. 해당 건강 상태에 맞는 적절한 식단을 추천해주세요.

다음 사항을 고려하여 레시피를 추천해주세요:
1. 해당 건강 상태에 맞는 영양소를 포함한 재료를 선택해주세요.
2. 해당 건강 상태에 해로운 성분이 포함된 재료는 피해주세요.
3. 건강 상태 개선에 도움이 되는 조리 방법을 선택해주세요.
4. 필요한 경우, 특정 재료의 대체재를 제안해주세요.

알레르기 주의사항:
- 땅콩 알레르기가 있으므로 해당 재료를 제외한 레시피를 추천해주세요.

## 사용자 요청
자극적인 이색  요리를 먹고싶어

레시피는 다음 형식으로 제공해주세요:
## 요리 이름

**필요한 재료**
- 재료명
- 재료명
...

**조리 시간**
- 시간분

**난이도**
- 난이도 (상/중/하 중 하나)

**상세한 조리 방법**
1. 첫 번째 단계
2. 두 번째 단계
...

**요리 팁과 주의사항**
- 팁 또는 주의사항
- 팁 또는 주의사항

**완성된 요리의 이미지 URL**
- 실제 이미지 URL

주의사항:
- 모든 재료의 양과 단위를 정확히 명시해주세요.
- 조리 방법은 반드시 포함해야 하며, 순서대로 상세히 설명해주세요.
- 요리 팁과 주의사항은 실제 조리 시 도움이 될 수 있는 내용을 포함해주세요.
- 요리 이미지 URL은 실제 존재하는 이미지의 URL을 제공해주세요.
- 난이도는 반드시 '상', '중', '하' 중 하나로만 표기해주세요.
- 각 섹션은 정확히 위의 형식을 따라주세요.
- 조리 방법 섹션을 절대 생략하지 마세요. 반드시 포함해주세요.
- '상세한 조리 방법' 섹션이 누락되면 답변하지 마세요. 반드시 포함하세요.
- 아래 예시처럼 모든 섹션이 빠짐없이 포함된 답변만 작성하세요.
아래는 예시입니다. 반드시 이 형식을 따라 답변하세요.

## 닭가슴살 감자볶음

**필요한 재료**
- 닭가슴살
- 감자
- 양파
- 대파
- 다진 마늘
- 식용유
- 간장
- 소금
- 후추

**조리 시간**
- 20분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 깍둑썰기 해주세요.
2. 닭가슴살은 한 입 크기로 썰어 소금, 후추로 밑간합니다.
3. 팬에 식용유를 두르고 다진 마늘, 대파를 볶아 향을 냅니다.
4. 닭가슴살을 넣고 익을 때까지 볶습니다.
5. 감자, 양파를 넣고 5분간 볶은 뒤 간장으로 간을 맞춥니다.
6. 감자가 익을 때까지 중불에서 볶아 완성합니다.

**요리 팁과 주의사항**
- 감자는 미리 전자레인지에 3분간 돌리면 더 빨리 익힙니다.
- 닭가슴살 대신 돼지고기나 소고기를 사용해도 좋습니다.

**완성된 요리의 이미지 URL**
- https://example.com/sample.jpg


2025-06-24 15:52:27.795 [http-nio-8080-exec-5] INFO  a.s.k.p.service.PerplexityService - Sending request to Perplexity API
2025-06-24 15:52:27.795 [http-nio-8080-exec-5] DEBUG a.s.k.p.service.PerplexityService - Request headers: [Content-Type:"application/json", Authorization:"Bearer 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"]
2025-06-24 15:52:27.796 [http-nio-8080-exec-5] DEBUG a.s.k.p.service.PerplexityService - Request body: {messages=[{role=system, content=당신은 레시피 추천 전문가입니다. 사용자가 가지고 있는 재료는 다음과 같습니다:
- 감자
- 캐비어
- 유니콘 뿔
- 수소폭탄
아래 보유재료를 반드시 1개 이상 포함해서 레시피를 추천해주세요. 보유재료가 하나도 포함되지 않으면 답변하지 마세요. 보유재료를 최대한 많이 활용한 레시피를 우선 추천하고, 불가피할 경우 1개 이상만이라도 반드시 포함해서 추천해주세요.  

다음 사용자의 특성을 고려하여 레시피를 추천해주세요:

- 이름: 한규덕
- 나이: 30세
- 성별: 남성
- 닉네임: 한규덕
- 건강 상태: 건강
- 알레르기: 땅콩
- 선호하는 음식: 육류


건강 상태에 따른 특별 지시사항:
현재 사용자는 건강 상태입니다. 해당 건강 상태에 맞는 적절한 식단을 추천해주세요.

다음 사항을 고려하여 레시피를 추천해주세요:
1. 해당 건강 상태에 맞는 영양소를 포함한 재료를 선택해주세요.
2. 해당 건강 상태에 해로운 성분이 포함된 재료는 피해주세요.
3. 건강 상태 개선에 도움이 되는 조리 방법을 선택해주세요.
4. 필요한 경우, 특정 재료의 대체재를 제안해주세요.

알레르기 주의사항:
- 땅콩 알레르기가 있으므로 해당 재료를 제외한 레시피를 추천해주세요.

## 사용자 요청
자극적인 이색  요리를 먹고싶어

레시피는 다음 형식으로 제공해주세요:
## 요리 이름

**필요한 재료**
- 재료명
- 재료명
...

**조리 시간**
- 시간분

**난이도**
- 난이도 (상/중/하 중 하나)

**상세한 조리 방법**
1. 첫 번째 단계
2. 두 번째 단계
...

**요리 팁과 주의사항**
- 팁 또는 주의사항
- 팁 또는 주의사항

**완성된 요리의 이미지 URL**
- 실제 이미지 URL

주의사항:
- 모든 재료의 양과 단위를 정확히 명시해주세요.
- 조리 방법은 반드시 포함해야 하며, 순서대로 상세히 설명해주세요.
- 요리 팁과 주의사항은 실제 조리 시 도움이 될 수 있는 내용을 포함해주세요.
- 요리 이미지 URL은 실제 존재하는 이미지의 URL을 제공해주세요.
- 난이도는 반드시 '상', '중', '하' 중 하나로만 표기해주세요.
- 각 섹션은 정확히 위의 형식을 따라주세요.
- 조리 방법 섹션을 절대 생략하지 마세요. 반드시 포함해주세요.
- '상세한 조리 방법' 섹션이 누락되면 답변하지 마세요. 반드시 포함하세요.
- 아래 예시처럼 모든 섹션이 빠짐없이 포함된 답변만 작성하세요.
아래는 예시입니다. 반드시 이 형식을 따라 답변하세요.

## 닭가슴살 감자볶음

**필요한 재료**
- 닭가슴살
- 감자
- 양파
- 대파
- 다진 마늘
- 식용유
- 간장
- 소금
- 후추

**조리 시간**
- 20분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 깍둑썰기 해주세요.
2. 닭가슴살은 한 입 크기로 썰어 소금, 후추로 밑간합니다.
3. 팬에 식용유를 두르고 다진 마늘, 대파를 볶아 향을 냅니다.
4. 닭가슴살을 넣고 익을 때까지 볶습니다.
5. 감자, 양파를 넣고 5분간 볶은 뒤 간장으로 간을 맞춥니다.
6. 감자가 익을 때까지 중불에서 볶아 완성합니다.

**요리 팁과 주의사항**
- 감자는 미리 전자레인지에 3분간 돌리면 더 빨리 익힙니다.
- 닭가슴살 대신 돼지고기나 소고기를 사용해도 좋습니다.

**완성된 요리의 이미지 URL**
- https://example.com/sample.jpg

}, {role=user, content=자극적인 이색  요리를 먹고싶어}], model=sonar-pro}
2025-06-24 15:52:40.583 [http-nio-8080-exec-5] INFO  a.s.k.p.service.PerplexityService - Received response from Perplexity API
2025-06-24 15:52:40.584 [http-nio-8080-exec-5] DEBUG a.s.k.p.service.PerplexityService - Response: {id=572b2f0d-f468-4503-9cf1-e9bae033eb1e, model=sonar-pro, created=1750747960, usage={prompt_tokens=1027, completion_tokens=539, total_tokens=1566, search_context_size=low}, citations=[https://blog.naver.com/kyakya_4001/223516347298, https://post.naver.com/viewer/postView.naver?volumeNo=32975334&memberNo=54534187, https://m.10000recipe.com/recipe/list.html?q=%EC%9D%B4%EC%83%89%EC%9D%8C%EC%8B%9D, http://www.gokmu.com/news/article.html?no=14970, https://www.youtube.com/watch?v=2ZKGGmlZgYs], search_results=[{title=자취레시피 4 , 자극적인 음식이 땡겨, url=https://blog.naver.com/kyakya_4001/223516347298, date=2024-07-17}, {title=아니 이런 음식들이 있다고? 전 세계 이색음식 모음, url=https://post.naver.com/viewer/postView.naver?volumeNo=32975334&memberNo=54534187, date=2021-12-20}, {title=이색음식, url=https://m.10000recipe.com/recipe/list.html?q=%EC%9D%B4%EC%83%89%EC%9D%8C%EC%8B%9D, date=null}, {title=맛 전문가가 추천하는 '이색 먹거리' World Best 5, url=http://www.gokmu.com/news/article.html?no=14970, date=2018-09-03}, {title=자극적인 건 싫어요! 건강을 생각한다면 하얀색 음식으로! ..., url=https://www.youtube.com/watch?v=2ZKGGmlZgYs, date=null}], object=chat.completion, choices=[{index=0, finish_reason=stop, message={role=assistant, content=## 감자 브릴리언트 캐비어 페스티벌

**필요한 재료**  
- 감자 2개 (중간 크기, 약 300g)  
- 캐비어 30g  
- 버터 20g  
- 생크림 30ml  
- 소금 약간  
- 후추 약간  
- 실파 또는 차이브(고명용, 선택사항)

**조리 시간**  
- 30분

**난이도**  
- 중

**상세한 조리 방법**  
1. 감자는 껍질을 벗기고 깨끗이 세척한 후, 큼직하게 잘라 찜기에 넣고 15~20분간 푹 쪄줍니다.
2. 쪄낸 감자는 뜨거울 때 바로 그릇에 담아 으깨줍니다.
3. 으깬 감자에 버터와 생크림을 넣고, 소금과 후추로 간을 맞춘 뒤 크리미하게 섞습니다.
4. 접시에 으깬 감자를 얇게 펼친 뒤, 숟가락으로 중앙에 작은 굴곡(움푹 파인 홈)을 만듭니다.
5. 감자 위 중앙에 캐비어를 곱게 올리고, 실파 또는 차이브를 송송 썰어 장식합니다.
6. 곧바로 서빙하여 감자의 크리미한 맛과 캐비어의 짭조름한 풍미를 즐깁니다.

**요리 팁과 주의사항**  
- 감자는 쪄냈을 때 완전히 부드러워야 캐비어와 조화가 잘 맞습니다.
- 버터와 생크림의 양은 기호에 맞게 조절하세요.
- 캐비어는 먹기 직전에 올려야 풍미가 최대입니다.
- 땅콩 등 견과류는 들어가지 않아 알레르기 걱정 없이 안심하고 드실 수 있습니다.
- 감자를 오븐에 구워 사용하면 쫀득한 풍미를 더할 수 있습니다.
- 유니콘 뿔, 수소폭탄은 현실 요리 재료가 아니므로 사용하지 않습니다.

**완성된 요리의 이미지 URL**  
- https://cdn.pixabay.com/photo/2015/07/31/17/43/caviar-869817_1280.jpg}, delta={role=assistant, content=}}]}
2025-06-24 15:52:40.584 [http-nio-8080-exec-5] INFO  a.s.k.p.service.PerplexityService - Parsing AI response content
2025-06-24 15:52:40.584 [http-nio-8080-exec-5] DEBUG a.s.k.p.service.PerplexityService - Content: ## 감자 브릴리언트 캐비어 페스티벌

**필요한 재료**  
- 감자 2개 (중간 크기, 약 300g)  
- 캐비어 30g  
- 버터 20g  
- 생크림 30ml  
- 소금 약간  
- 후추 약간  
- 실파 또는 차이브(고명용, 선택사항)

**조리 시간**  
- 30분

**난이도**  
- 중

**상세한 조리 방법**  
1. 감자는 껍질을 벗기고 깨끗이 세척한 후, 큼직하게 잘라 찜기에 넣고 15~20분간 푹 쪄줍니다.
2. 쪄낸 감자는 뜨거울 때 바로 그릇에 담아 으깨줍니다.
3. 으깬 감자에 버터와 생크림을 넣고, 소금과 후추로 간을 맞춘 뒤 크리미하게 섞습니다.
4. 접시에 으깬 감자를 얇게 펼친 뒤, 숟가락으로 중앙에 작은 굴곡(움푹 파인 홈)을 만듭니다.
5. 감자 위 중앙에 캐비어를 곱게 올리고, 실파 또는 차이브를 송송 썰어 장식합니다.
6. 곧바로 서빙하여 감자의 크리미한 맛과 캐비어의 짭조름한 풍미를 즐깁니다.

**요리 팁과 주의사항**  
- 감자는 쪄냈을 때 완전히 부드러워야 캐비어와 조화가 잘 맞습니다.
- 버터와 생크림의 양은 기호에 맞게 조절하세요.
- 캐비어는 먹기 직전에 올려야 풍미가 최대입니다.
- 땅콩 등 견과류는 들어가지 않아 알레르기 걱정 없이 안심하고 드실 수 있습니다.
- 감자를 오븐에 구워 사용하면 쫀득한 풍미를 더할 수 있습니다.
- 유니콘 뿔, 수소폭탄은 현실 요리 재료가 아니므로 사용하지 않습니다.

**완성된 요리의 이미지 URL**  
- https://cdn.pixabay.com/photo/2015/07/31/17/43/caviar-869817_1280.jpg
2025-06-24 15:52:40.584 [http-nio-8080-exec-5] INFO  a.s.k.p.service.PerplexityService - AI 응답 원본:
## 감자 브릴리언트 캐비어 페스티벌

**필요한 재료**  
- 감자 2개 (중간 크기, 약 300g)  
- 캐비어 30g  
- 버터 20g  
- 생크림 30ml  
- 소금 약간  
- 후추 약간  
- 실파 또는 차이브(고명용, 선택사항)

**조리 시간**  
- 30분

**난이도**  
- 중

**상세한 조리 방법**  
1. 감자는 껍질을 벗기고 깨끗이 세척한 후, 큼직하게 잘라 찜기에 넣고 15~20분간 푹 쪄줍니다.
2. 쪄낸 감자는 뜨거울 때 바로 그릇에 담아 으깨줍니다.
3. 으깬 감자에 버터와 생크림을 넣고, 소금과 후추로 간을 맞춘 뒤 크리미하게 섞습니다.
4. 접시에 으깬 감자를 얇게 펼친 뒤, 숟가락으로 중앙에 작은 굴곡(움푹 파인 홈)을 만듭니다.
5. 감자 위 중앙에 캐비어를 곱게 올리고, 실파 또는 차이브를 송송 썰어 장식합니다.
6. 곧바로 서빙하여 감자의 크리미한 맛과 캐비어의 짭조름한 풍미를 즐깁니다.

**요리 팁과 주의사항**  
- 감자는 쪄냈을 때 완전히 부드러워야 캐비어와 조화가 잘 맞습니다.
- 버터와 생크림의 양은 기호에 맞게 조절하세요.
- 캐비어는 먹기 직전에 올려야 풍미가 최대입니다.
- 땅콩 등 견과류는 들어가지 않아 알레르기 걱정 없이 안심하고 드실 수 있습니다.
- 감자를 오븐에 구워 사용하면 쫀득한 풍미를 더할 수 있습니다.
- 유니콘 뿔, 수소폭탄은 현실 요리 재료가 아니므로 사용하지 않습니다.

**완성된 요리의 이미지 URL**  
- https://cdn.pixabay.com/photo/2015/07/31/17/43/caviar-869817_1280.jpg
2025-06-24 15:52:40.584 [http-nio-8080-exec-5] INFO  a.s.k.p.service.PerplexityService - Starting to parse recipe response
2025-06-24 15:52:40.584 [http-nio-8080-exec-5] DEBUG a.s.k.p.service.PerplexityService - Content to parse: ## 감자 브릴리언트 캐비어 페스티벌

**필요한 재료**  
- 감자 2개 (중간 크기, 약 300g)  
- 캐비어 30g  
- 버터 20g  
- 생크림 30ml  
- 소금 약간  
- 후추 약간  
- 실파 또는 차이브(고명용, 선택사항)

**조리 시간**  
- 30분

**난이도**  
- 중

**상세한 조리 방법**  
1. 감자는 껍질을 벗기고 깨끗이 세척한 후, 큼직하게 잘라 찜기에 넣고 15~20분간 푹 쪄줍니다.
2. 쪄낸 감자는 뜨거울 때 바로 그릇에 담아 으깨줍니다.
3. 으깬 감자에 버터와 생크림을 넣고, 소금과 후추로 간을 맞춘 뒤 크리미하게 섞습니다.
4. 접시에 으깬 감자를 얇게 펼친 뒤, 숟가락으로 중앙에 작은 굴곡(움푹 파인 홈)을 만듭니다.
5. 감자 위 중앙에 캐비어를 곱게 올리고, 실파 또는 차이브를 송송 썰어 장식합니다.
6. 곧바로 서빙하여 감자의 크리미한 맛과 캐비어의 짭조름한 풍미를 즐깁니다.

**요리 팁과 주의사항**  
- 감자는 쪄냈을 때 완전히 부드러워야 캐비어와 조화가 잘 맞습니다.
- 버터와 생크림의 양은 기호에 맞게 조절하세요.
- 캐비어는 먹기 직전에 올려야 풍미가 최대입니다.
- 땅콩 등 견과류는 들어가지 않아 알레르기 걱정 없이 안심하고 드실 수 있습니다.
- 감자를 오븐에 구워 사용하면 쫀득한 풍미를 더할 수 있습니다.
- 유니콘 뿔, 수소폭탄은 현실 요리 재료가 아니므로 사용하지 않습니다.

**완성된 요리의 이미지 URL**  
- https://cdn.pixabay.com/photo/2015/07/31/17/43/caviar-869817_1280.jpg
2025-06-24 15:52:40.588 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        up1_0.prompt_id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    where
        up1_0.user_id=?
2025-06-24 15:52:40.589 [http-nio-8080-exec-5] WARN  a.s.k.p.service.PerplexityService - 알러지 재료(땅콩)가 포함된 레시피. 안내문구만 반환.
2025-06-24 15:52:40.589 [http-nio-8080-exec-5] INFO  a.s.k.p.service.PerplexityService - Successfully parsed recipe with ID: null
2025-06-24 15:52:47.951 [http-nio-8080-exec-6] INFO  a.s.k.p.service.PerplexityService - Starting getResponse for userId: 1, prompt: 자극적인 이색  요리를 먹고싶어
2025-06-24 15:52:47.952 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.provider_id,
        u1_0.updated_at,
        u1_0.username,
        r1_0.user_user_id,
        r1_0.roles 
    from
        user u1_0 
    left join
        user_roles r1_0 
            on u1_0.user_id=r1_0.user_user_id 
    where
        u1_0.user_id=?
2025-06-24 15:52:47.955 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        up1_0.prompt_id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    where
        up1_0.user_id=?
2025-06-24 15:52:47.956 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ui1_0.ingredient_id,
        ui1_0.user_id,
        ui1_0.weight_in_grams 
    from
        user_ingredient ui1_0 
    join
        user u1_0 
            on u1_0.user_id=ui1_0.user_id 
    where
        u1_0.user_id=?
2025-06-24 15:52:47.957 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:52:47.957 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:52:47.958 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:52:47.958 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:52:47.959 [http-nio-8080-exec-6] DEBUG a.s.k.p.service.PerplexityService - System prompt: 당신은 레시피 추천 전문가입니다. 사용자가 가지고 있는 재료는 다음과 같습니다:
- 감자
- 캐비어
- 유니콘 뿔
- 수소폭탄
아래 보유재료를 반드시 1개 이상 포함해서 레시피를 추천해주세요. 보유재료가 하나도 포함되지 않으면 답변하지 마세요. 보유재료를 최대한 많이 활용한 레시피를 우선 추천하고, 불가피할 경우 1개 이상만이라도 반드시 포함해서 추천해주세요.  

다음 사용자의 특성을 고려하여 레시피를 추천해주세요:

- 이름: 한규덕
- 나이: 30세
- 성별: 남성
- 닉네임: 한규덕
- 건강 상태: 건강
- 알레르기: 땅콩
- 선호하는 음식: 육류


건강 상태에 따른 특별 지시사항:
현재 사용자는 건강 상태입니다. 해당 건강 상태에 맞는 적절한 식단을 추천해주세요.

다음 사항을 고려하여 레시피를 추천해주세요:
1. 해당 건강 상태에 맞는 영양소를 포함한 재료를 선택해주세요.
2. 해당 건강 상태에 해로운 성분이 포함된 재료는 피해주세요.
3. 건강 상태 개선에 도움이 되는 조리 방법을 선택해주세요.
4. 필요한 경우, 특정 재료의 대체재를 제안해주세요.

알레르기 주의사항:
- 땅콩 알레르기가 있으므로 해당 재료를 제외한 레시피를 추천해주세요.

## 사용자 요청
자극적인 이색  요리를 먹고싶어

레시피는 다음 형식으로 제공해주세요:
## 요리 이름

**필요한 재료**
- 재료명
- 재료명
...

**조리 시간**
- 시간분

**난이도**
- 난이도 (상/중/하 중 하나)

**상세한 조리 방법**
1. 첫 번째 단계
2. 두 번째 단계
...

**요리 팁과 주의사항**
- 팁 또는 주의사항
- 팁 또는 주의사항

**완성된 요리의 이미지 URL**
- 실제 이미지 URL

주의사항:
- 모든 재료의 양과 단위를 정확히 명시해주세요.
- 조리 방법은 반드시 포함해야 하며, 순서대로 상세히 설명해주세요.
- 요리 팁과 주의사항은 실제 조리 시 도움이 될 수 있는 내용을 포함해주세요.
- 요리 이미지 URL은 실제 존재하는 이미지의 URL을 제공해주세요.
- 난이도는 반드시 '상', '중', '하' 중 하나로만 표기해주세요.
- 각 섹션은 정확히 위의 형식을 따라주세요.
- 조리 방법 섹션을 절대 생략하지 마세요. 반드시 포함해주세요.
- '상세한 조리 방법' 섹션이 누락되면 답변하지 마세요. 반드시 포함하세요.
- 아래 예시처럼 모든 섹션이 빠짐없이 포함된 답변만 작성하세요.
아래는 예시입니다. 반드시 이 형식을 따라 답변하세요.

## 닭가슴살 감자볶음

**필요한 재료**
- 닭가슴살
- 감자
- 양파
- 대파
- 다진 마늘
- 식용유
- 간장
- 소금
- 후추

**조리 시간**
- 20분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 깍둑썰기 해주세요.
2. 닭가슴살은 한 입 크기로 썰어 소금, 후추로 밑간합니다.
3. 팬에 식용유를 두르고 다진 마늘, 대파를 볶아 향을 냅니다.
4. 닭가슴살을 넣고 익을 때까지 볶습니다.
5. 감자, 양파를 넣고 5분간 볶은 뒤 간장으로 간을 맞춥니다.
6. 감자가 익을 때까지 중불에서 볶아 완성합니다.

**요리 팁과 주의사항**
- 감자는 미리 전자레인지에 3분간 돌리면 더 빨리 익힙니다.
- 닭가슴살 대신 돼지고기나 소고기를 사용해도 좋습니다.

**완성된 요리의 이미지 URL**
- https://example.com/sample.jpg


2025-06-24 15:52:47.959 [http-nio-8080-exec-6] INFO  a.s.k.p.service.PerplexityService - Sending request to Perplexity API
2025-06-24 15:52:47.959 [http-nio-8080-exec-6] DEBUG a.s.k.p.service.PerplexityService - Request headers: [Content-Type:"application/json", Authorization:"Bearer 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"]
2025-06-24 15:52:47.959 [http-nio-8080-exec-6] DEBUG a.s.k.p.service.PerplexityService - Request body: {messages=[{role=system, content=당신은 레시피 추천 전문가입니다. 사용자가 가지고 있는 재료는 다음과 같습니다:
- 감자
- 캐비어
- 유니콘 뿔
- 수소폭탄
아래 보유재료를 반드시 1개 이상 포함해서 레시피를 추천해주세요. 보유재료가 하나도 포함되지 않으면 답변하지 마세요. 보유재료를 최대한 많이 활용한 레시피를 우선 추천하고, 불가피할 경우 1개 이상만이라도 반드시 포함해서 추천해주세요.  

다음 사용자의 특성을 고려하여 레시피를 추천해주세요:

- 이름: 한규덕
- 나이: 30세
- 성별: 남성
- 닉네임: 한규덕
- 건강 상태: 건강
- 알레르기: 땅콩
- 선호하는 음식: 육류


건강 상태에 따른 특별 지시사항:
현재 사용자는 건강 상태입니다. 해당 건강 상태에 맞는 적절한 식단을 추천해주세요.

다음 사항을 고려하여 레시피를 추천해주세요:
1. 해당 건강 상태에 맞는 영양소를 포함한 재료를 선택해주세요.
2. 해당 건강 상태에 해로운 성분이 포함된 재료는 피해주세요.
3. 건강 상태 개선에 도움이 되는 조리 방법을 선택해주세요.
4. 필요한 경우, 특정 재료의 대체재를 제안해주세요.

알레르기 주의사항:
- 땅콩 알레르기가 있으므로 해당 재료를 제외한 레시피를 추천해주세요.

## 사용자 요청
자극적인 이색  요리를 먹고싶어

레시피는 다음 형식으로 제공해주세요:
## 요리 이름

**필요한 재료**
- 재료명
- 재료명
...

**조리 시간**
- 시간분

**난이도**
- 난이도 (상/중/하 중 하나)

**상세한 조리 방법**
1. 첫 번째 단계
2. 두 번째 단계
...

**요리 팁과 주의사항**
- 팁 또는 주의사항
- 팁 또는 주의사항

**완성된 요리의 이미지 URL**
- 실제 이미지 URL

주의사항:
- 모든 재료의 양과 단위를 정확히 명시해주세요.
- 조리 방법은 반드시 포함해야 하며, 순서대로 상세히 설명해주세요.
- 요리 팁과 주의사항은 실제 조리 시 도움이 될 수 있는 내용을 포함해주세요.
- 요리 이미지 URL은 실제 존재하는 이미지의 URL을 제공해주세요.
- 난이도는 반드시 '상', '중', '하' 중 하나로만 표기해주세요.
- 각 섹션은 정확히 위의 형식을 따라주세요.
- 조리 방법 섹션을 절대 생략하지 마세요. 반드시 포함해주세요.
- '상세한 조리 방법' 섹션이 누락되면 답변하지 마세요. 반드시 포함하세요.
- 아래 예시처럼 모든 섹션이 빠짐없이 포함된 답변만 작성하세요.
아래는 예시입니다. 반드시 이 형식을 따라 답변하세요.

## 닭가슴살 감자볶음

**필요한 재료**
- 닭가슴살
- 감자
- 양파
- 대파
- 다진 마늘
- 식용유
- 간장
- 소금
- 후추

**조리 시간**
- 20분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 깍둑썰기 해주세요.
2. 닭가슴살은 한 입 크기로 썰어 소금, 후추로 밑간합니다.
3. 팬에 식용유를 두르고 다진 마늘, 대파를 볶아 향을 냅니다.
4. 닭가슴살을 넣고 익을 때까지 볶습니다.
5. 감자, 양파를 넣고 5분간 볶은 뒤 간장으로 간을 맞춥니다.
6. 감자가 익을 때까지 중불에서 볶아 완성합니다.

**요리 팁과 주의사항**
- 감자는 미리 전자레인지에 3분간 돌리면 더 빨리 익힙니다.
- 닭가슴살 대신 돼지고기나 소고기를 사용해도 좋습니다.

**완성된 요리의 이미지 URL**
- https://example.com/sample.jpg

}, {role=user, content=자극적인 이색  요리를 먹고싶어}], model=sonar-pro}
2025-06-24 15:53:04.193 [http-nio-8080-exec-6] INFO  a.s.k.p.service.PerplexityService - Received response from Perplexity API
2025-06-24 15:53:04.193 [http-nio-8080-exec-6] DEBUG a.s.k.p.service.PerplexityService - Response: {id=c5765364-afbd-4501-be47-f8b4bfd59c64, model=sonar-pro, created=1750747984, usage={prompt_tokens=1027, completion_tokens=690, total_tokens=1717, search_context_size=low}, citations=[https://blog.naver.com/kyakya_4001/223516347298, https://post.naver.com/viewer/postView.naver?volumeNo=32975334&memberNo=54534187, https://m.10000recipe.com/recipe/list.html?q=%EC%9D%B4%EC%83%89%EC%9D%8C%EC%8B%9D, http://www.gokmu.com/news/article.html?no=14970, https://www.youtube.com/watch?v=2ZKGGmlZgYs], search_results=[{title=자취레시피 4 , 자극적인 음식이 땡겨, url=https://blog.naver.com/kyakya_4001/223516347298, date=2024-07-17}, {title=아니 이런 음식들이 있다고? 전 세계 이색음식 모음, url=https://post.naver.com/viewer/postView.naver?volumeNo=32975334&memberNo=54534187, date=2021-12-20}, {title=이색음식, url=https://m.10000recipe.com/recipe/list.html?q=%EC%9D%B4%EC%83%89%EC%9D%8C%EC%8B%9D, date=null}, {title=맛 전문가가 추천하는 '이색 먹거리' World Best 5, url=http://www.gokmu.com/news/article.html?no=14970, date=2018-09-03}, {title=자극적인 건 싫어요! 건강을 생각한다면 하얀색 음식으로! ..., url=https://www.youtube.com/watch?v=2ZKGGmlZgYs, date=null}], object=chat.completion, choices=[{index=0, finish_reason=stop, message={role=assistant, content=## 감자 캐비어 퓨전 바삭구이

**필요한 재료**
- 감자 2개 (중간 크기, 약 300g)
- 캐비어 15g
- 올리브유 2큰술
- 소금 1/3작은술
- 흑후추 약간
- 사워크림 2큰술
- 실파(또는 쪽파) 약간

**조리 시간**
- 30분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 아주 얇게(2mm 두께) 슬라이스합니다. (감자칩 두께가 좋습니다.)
2. 찬물에 10분간 감자 슬라이스를 담가 전분을 제거한 뒤, 체에 밭쳐 잘 물기를 닦아줍니다.
3. 넓은 팬에 올리브유를 두르고 중불로 예열합니다.
4. 감자 슬라이스를 겹치지 않게 편 후, 앞뒤로 노릇하게 5~7분간 바삭하게 구워줍니다.
5. 감자칩이 노릇하게 구워지면 키친타월로 기름을 제거하고, 소금과 흑후추로 간을 맞춥니다.
6. 바삭하게 구운 감자 위에 사워크림을 한 스푼씩 얹고, 캐비어를 소복하게 올립니다.
7. 실파를 다져 감자 위에 살짝 뿌려 마무리합니다.
8. 접시에 예쁘게 담아 바로 제공합니다.

**요리 팁과 주의사항**
- 감자를 얇게 썰수록 더 바삭하게 구울 수 있습니다.
- 사워크림 대신 플레인 요거트로 대체할 수 있습니다.
- 감자칩은 오븐(200도, 12~15분)에서도 바삭하게 구울 수 있습니다.
- 캐비어는 소금기가 있으니 추가 간에 유의해주세요.
- 땅콩 등 견과류 성분이 전혀 들어있지 않습니다.

**완성된 요리의 이미지 URL**
- https://cdn.pixabay.com/photo/2017/03/21/16/00/appetizer-2162041_1280.jpg

---

### 참고 및 안내
- 유니콘 뿔, 수소폭탄은 현실적으로 식재료로 사용할 수 없어, 안전하고 실제 조리가 가능한 감자와 캐비어를 활용한 레시피만 추천드립니다.
- 한규덕 님 같은 건강한 성인 남성에게 적합한 칼로리와 자극적인 비주얼, 독특한 맛(이색 요리)을 동시에 느낄 수 있는 메뉴입니다.
- 레시피에서 제안한 감자와 캐비어 조합은 고급 레스토랑에서도 애피타이저로 활용되는 특별한 음식으로, 자극적이면서 색다른 경험을 선사합니다.}, delta={role=assistant, content=}}]}
2025-06-24 15:53:04.193 [http-nio-8080-exec-6] INFO  a.s.k.p.service.PerplexityService - Parsing AI response content
2025-06-24 15:53:04.193 [http-nio-8080-exec-6] DEBUG a.s.k.p.service.PerplexityService - Content: ## 감자 캐비어 퓨전 바삭구이

**필요한 재료**
- 감자 2개 (중간 크기, 약 300g)
- 캐비어 15g
- 올리브유 2큰술
- 소금 1/3작은술
- 흑후추 약간
- 사워크림 2큰술
- 실파(또는 쪽파) 약간

**조리 시간**
- 30분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 아주 얇게(2mm 두께) 슬라이스합니다. (감자칩 두께가 좋습니다.)
2. 찬물에 10분간 감자 슬라이스를 담가 전분을 제거한 뒤, 체에 밭쳐 잘 물기를 닦아줍니다.
3. 넓은 팬에 올리브유를 두르고 중불로 예열합니다.
4. 감자 슬라이스를 겹치지 않게 편 후, 앞뒤로 노릇하게 5~7분간 바삭하게 구워줍니다.
5. 감자칩이 노릇하게 구워지면 키친타월로 기름을 제거하고, 소금과 흑후추로 간을 맞춥니다.
6. 바삭하게 구운 감자 위에 사워크림을 한 스푼씩 얹고, 캐비어를 소복하게 올립니다.
7. 실파를 다져 감자 위에 살짝 뿌려 마무리합니다.
8. 접시에 예쁘게 담아 바로 제공합니다.

**요리 팁과 주의사항**
- 감자를 얇게 썰수록 더 바삭하게 구울 수 있습니다.
- 사워크림 대신 플레인 요거트로 대체할 수 있습니다.
- 감자칩은 오븐(200도, 12~15분)에서도 바삭하게 구울 수 있습니다.
- 캐비어는 소금기가 있으니 추가 간에 유의해주세요.
- 땅콩 등 견과류 성분이 전혀 들어있지 않습니다.

**완성된 요리의 이미지 URL**
- https://cdn.pixabay.com/photo/2017/03/21/16/00/appetizer-2162041_1280.jpg

---

### 참고 및 안내
- 유니콘 뿔, 수소폭탄은 현실적으로 식재료로 사용할 수 없어, 안전하고 실제 조리가 가능한 감자와 캐비어를 활용한 레시피만 추천드립니다.
- 한규덕 님 같은 건강한 성인 남성에게 적합한 칼로리와 자극적인 비주얼, 독특한 맛(이색 요리)을 동시에 느낄 수 있는 메뉴입니다.
- 레시피에서 제안한 감자와 캐비어 조합은 고급 레스토랑에서도 애피타이저로 활용되는 특별한 음식으로, 자극적이면서 색다른 경험을 선사합니다.
2025-06-24 15:53:04.193 [http-nio-8080-exec-6] INFO  a.s.k.p.service.PerplexityService - AI 응답 원본:
## 감자 캐비어 퓨전 바삭구이

**필요한 재료**
- 감자 2개 (중간 크기, 약 300g)
- 캐비어 15g
- 올리브유 2큰술
- 소금 1/3작은술
- 흑후추 약간
- 사워크림 2큰술
- 실파(또는 쪽파) 약간

**조리 시간**
- 30분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 아주 얇게(2mm 두께) 슬라이스합니다. (감자칩 두께가 좋습니다.)
2. 찬물에 10분간 감자 슬라이스를 담가 전분을 제거한 뒤, 체에 밭쳐 잘 물기를 닦아줍니다.
3. 넓은 팬에 올리브유를 두르고 중불로 예열합니다.
4. 감자 슬라이스를 겹치지 않게 편 후, 앞뒤로 노릇하게 5~7분간 바삭하게 구워줍니다.
5. 감자칩이 노릇하게 구워지면 키친타월로 기름을 제거하고, 소금과 흑후추로 간을 맞춥니다.
6. 바삭하게 구운 감자 위에 사워크림을 한 스푼씩 얹고, 캐비어를 소복하게 올립니다.
7. 실파를 다져 감자 위에 살짝 뿌려 마무리합니다.
8. 접시에 예쁘게 담아 바로 제공합니다.

**요리 팁과 주의사항**
- 감자를 얇게 썰수록 더 바삭하게 구울 수 있습니다.
- 사워크림 대신 플레인 요거트로 대체할 수 있습니다.
- 감자칩은 오븐(200도, 12~15분)에서도 바삭하게 구울 수 있습니다.
- 캐비어는 소금기가 있으니 추가 간에 유의해주세요.
- 땅콩 등 견과류 성분이 전혀 들어있지 않습니다.

**완성된 요리의 이미지 URL**
- https://cdn.pixabay.com/photo/2017/03/21/16/00/appetizer-2162041_1280.jpg

---

### 참고 및 안내
- 유니콘 뿔, 수소폭탄은 현실적으로 식재료로 사용할 수 없어, 안전하고 실제 조리가 가능한 감자와 캐비어를 활용한 레시피만 추천드립니다.
- 한규덕 님 같은 건강한 성인 남성에게 적합한 칼로리와 자극적인 비주얼, 독특한 맛(이색 요리)을 동시에 느낄 수 있는 메뉴입니다.
- 레시피에서 제안한 감자와 캐비어 조합은 고급 레스토랑에서도 애피타이저로 활용되는 특별한 음식으로, 자극적이면서 색다른 경험을 선사합니다.
2025-06-24 15:53:04.193 [http-nio-8080-exec-6] INFO  a.s.k.p.service.PerplexityService - Starting to parse recipe response
2025-06-24 15:53:04.193 [http-nio-8080-exec-6] DEBUG a.s.k.p.service.PerplexityService - Content to parse: ## 감자 캐비어 퓨전 바삭구이

**필요한 재료**
- 감자 2개 (중간 크기, 약 300g)
- 캐비어 15g
- 올리브유 2큰술
- 소금 1/3작은술
- 흑후추 약간
- 사워크림 2큰술
- 실파(또는 쪽파) 약간

**조리 시간**
- 30분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 아주 얇게(2mm 두께) 슬라이스합니다. (감자칩 두께가 좋습니다.)
2. 찬물에 10분간 감자 슬라이스를 담가 전분을 제거한 뒤, 체에 밭쳐 잘 물기를 닦아줍니다.
3. 넓은 팬에 올리브유를 두르고 중불로 예열합니다.
4. 감자 슬라이스를 겹치지 않게 편 후, 앞뒤로 노릇하게 5~7분간 바삭하게 구워줍니다.
5. 감자칩이 노릇하게 구워지면 키친타월로 기름을 제거하고, 소금과 흑후추로 간을 맞춥니다.
6. 바삭하게 구운 감자 위에 사워크림을 한 스푼씩 얹고, 캐비어를 소복하게 올립니다.
7. 실파를 다져 감자 위에 살짝 뿌려 마무리합니다.
8. 접시에 예쁘게 담아 바로 제공합니다.

**요리 팁과 주의사항**
- 감자를 얇게 썰수록 더 바삭하게 구울 수 있습니다.
- 사워크림 대신 플레인 요거트로 대체할 수 있습니다.
- 감자칩은 오븐(200도, 12~15분)에서도 바삭하게 구울 수 있습니다.
- 캐비어는 소금기가 있으니 추가 간에 유의해주세요.
- 땅콩 등 견과류 성분이 전혀 들어있지 않습니다.

**완성된 요리의 이미지 URL**
- https://cdn.pixabay.com/photo/2017/03/21/16/00/appetizer-2162041_1280.jpg

---

### 참고 및 안내
- 유니콘 뿔, 수소폭탄은 현실적으로 식재료로 사용할 수 없어, 안전하고 실제 조리가 가능한 감자와 캐비어를 활용한 레시피만 추천드립니다.
- 한규덕 님 같은 건강한 성인 남성에게 적합한 칼로리와 자극적인 비주얼, 독특한 맛(이색 요리)을 동시에 느낄 수 있는 메뉴입니다.
- 레시피에서 제안한 감자와 캐비어 조합은 고급 레스토랑에서도 애피타이저로 활용되는 특별한 음식으로, 자극적이면서 색다른 경험을 선사합니다.
2025-06-24 15:53:04.195 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        up1_0.prompt_id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    where
        up1_0.user_id=?
2025-06-24 15:53:04.196 [http-nio-8080-exec-6] WARN  a.s.k.p.service.PerplexityService - 알러지 재료(땅콩)가 포함된 레시피. 안내문구만 반환.
2025-06-24 15:53:04.196 [http-nio-8080-exec-6] INFO  a.s.k.p.service.PerplexityService - Successfully parsed recipe with ID: null
2025-06-24 15:53:52.942 [http-nio-8080-exec-7] INFO  a.s.k.p.service.PerplexityService - Starting getResponse for userId: 1, prompt: 내가 가진 재료로 요리를 먹고싶어
2025-06-24 15:53:52.943 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.provider_id,
        u1_0.updated_at,
        u1_0.username,
        r1_0.user_user_id,
        r1_0.roles 
    from
        user u1_0 
    left join
        user_roles r1_0 
            on u1_0.user_id=r1_0.user_user_id 
    where
        u1_0.user_id=?
2025-06-24 15:53:52.945 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        up1_0.prompt_id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    where
        up1_0.user_id=?
2025-06-24 15:53:52.947 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ui1_0.ingredient_id,
        ui1_0.user_id,
        ui1_0.weight_in_grams 
    from
        user_ingredient ui1_0 
    join
        user u1_0 
            on u1_0.user_id=ui1_0.user_id 
    where
        u1_0.user_id=?
2025-06-24 15:53:52.948 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:53:52.948 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:53:52.948 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:53:52.949 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:53:52.949 [http-nio-8080-exec-7] DEBUG a.s.k.p.service.PerplexityService - System prompt: 당신은 레시피 추천 전문가입니다. 사용자가 가지고 있는 재료는 다음과 같습니다:
- 감자
- 캐비어
- 유니콘 뿔
- 수소폭탄
아래 보유재료를 반드시 1개 이상 포함해서 레시피를 추천해주세요. 보유재료가 하나도 포함되지 않으면 답변하지 마세요. 보유재료를 최대한 많이 활용한 레시피를 우선 추천하고, 불가피할 경우 1개 이상만이라도 반드시 포함해서 추천해주세요.  

다음 사용자의 특성을 고려하여 레시피를 추천해주세요:

- 이름: 한규덕
- 나이: 30세
- 성별: 남성
- 닉네임: 한규덕
- 건강 상태: 건강
- 알레르기: 땅콩
- 선호하는 음식: 육류


건강 상태에 따른 특별 지시사항:
현재 사용자는 건강 상태입니다. 해당 건강 상태에 맞는 적절한 식단을 추천해주세요.

다음 사항을 고려하여 레시피를 추천해주세요:
1. 해당 건강 상태에 맞는 영양소를 포함한 재료를 선택해주세요.
2. 해당 건강 상태에 해로운 성분이 포함된 재료는 피해주세요.
3. 건강 상태 개선에 도움이 되는 조리 방법을 선택해주세요.
4. 필요한 경우, 특정 재료의 대체재를 제안해주세요.

알레르기 주의사항:
- 땅콩 알레르기가 있으므로 해당 재료를 제외한 레시피를 추천해주세요.

## 사용자 요청
내가 가진 재료로 요리를 먹고싶어

레시피는 다음 형식으로 제공해주세요:
## 요리 이름

**필요한 재료**
- 재료명
- 재료명
...

**조리 시간**
- 시간분

**난이도**
- 난이도 (상/중/하 중 하나)

**상세한 조리 방법**
1. 첫 번째 단계
2. 두 번째 단계
...

**요리 팁과 주의사항**
- 팁 또는 주의사항
- 팁 또는 주의사항

**완성된 요리의 이미지 URL**
- 실제 이미지 URL

주의사항:
- 모든 재료의 양과 단위를 정확히 명시해주세요.
- 조리 방법은 반드시 포함해야 하며, 순서대로 상세히 설명해주세요.
- 요리 팁과 주의사항은 실제 조리 시 도움이 될 수 있는 내용을 포함해주세요.
- 요리 이미지 URL은 실제 존재하는 이미지의 URL을 제공해주세요.
- 난이도는 반드시 '상', '중', '하' 중 하나로만 표기해주세요.
- 각 섹션은 정확히 위의 형식을 따라주세요.
- 조리 방법 섹션을 절대 생략하지 마세요. 반드시 포함해주세요.
- '상세한 조리 방법' 섹션이 누락되면 답변하지 마세요. 반드시 포함하세요.
- 아래 예시처럼 모든 섹션이 빠짐없이 포함된 답변만 작성하세요.
아래는 예시입니다. 반드시 이 형식을 따라 답변하세요.

## 닭가슴살 감자볶음

**필요한 재료**
- 닭가슴살
- 감자
- 양파
- 대파
- 다진 마늘
- 식용유
- 간장
- 소금
- 후추

**조리 시간**
- 20분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 깍둑썰기 해주세요.
2. 닭가슴살은 한 입 크기로 썰어 소금, 후추로 밑간합니다.
3. 팬에 식용유를 두르고 다진 마늘, 대파를 볶아 향을 냅니다.
4. 닭가슴살을 넣고 익을 때까지 볶습니다.
5. 감자, 양파를 넣고 5분간 볶은 뒤 간장으로 간을 맞춥니다.
6. 감자가 익을 때까지 중불에서 볶아 완성합니다.

**요리 팁과 주의사항**
- 감자는 미리 전자레인지에 3분간 돌리면 더 빨리 익힙니다.
- 닭가슴살 대신 돼지고기나 소고기를 사용해도 좋습니다.

**완성된 요리의 이미지 URL**
- https://example.com/sample.jpg


2025-06-24 15:53:52.949 [http-nio-8080-exec-7] INFO  a.s.k.p.service.PerplexityService - Sending request to Perplexity API
2025-06-24 15:53:52.949 [http-nio-8080-exec-7] DEBUG a.s.k.p.service.PerplexityService - Request headers: [Content-Type:"application/json", Authorization:"Bearer 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"]
2025-06-24 15:53:52.949 [http-nio-8080-exec-7] DEBUG a.s.k.p.service.PerplexityService - Request body: {messages=[{role=system, content=당신은 레시피 추천 전문가입니다. 사용자가 가지고 있는 재료는 다음과 같습니다:
- 감자
- 캐비어
- 유니콘 뿔
- 수소폭탄
아래 보유재료를 반드시 1개 이상 포함해서 레시피를 추천해주세요. 보유재료가 하나도 포함되지 않으면 답변하지 마세요. 보유재료를 최대한 많이 활용한 레시피를 우선 추천하고, 불가피할 경우 1개 이상만이라도 반드시 포함해서 추천해주세요.  

다음 사용자의 특성을 고려하여 레시피를 추천해주세요:

- 이름: 한규덕
- 나이: 30세
- 성별: 남성
- 닉네임: 한규덕
- 건강 상태: 건강
- 알레르기: 땅콩
- 선호하는 음식: 육류


건강 상태에 따른 특별 지시사항:
현재 사용자는 건강 상태입니다. 해당 건강 상태에 맞는 적절한 식단을 추천해주세요.

다음 사항을 고려하여 레시피를 추천해주세요:
1. 해당 건강 상태에 맞는 영양소를 포함한 재료를 선택해주세요.
2. 해당 건강 상태에 해로운 성분이 포함된 재료는 피해주세요.
3. 건강 상태 개선에 도움이 되는 조리 방법을 선택해주세요.
4. 필요한 경우, 특정 재료의 대체재를 제안해주세요.

알레르기 주의사항:
- 땅콩 알레르기가 있으므로 해당 재료를 제외한 레시피를 추천해주세요.

## 사용자 요청
내가 가진 재료로 요리를 먹고싶어

레시피는 다음 형식으로 제공해주세요:
## 요리 이름

**필요한 재료**
- 재료명
- 재료명
...

**조리 시간**
- 시간분

**난이도**
- 난이도 (상/중/하 중 하나)

**상세한 조리 방법**
1. 첫 번째 단계
2. 두 번째 단계
...

**요리 팁과 주의사항**
- 팁 또는 주의사항
- 팁 또는 주의사항

**완성된 요리의 이미지 URL**
- 실제 이미지 URL

주의사항:
- 모든 재료의 양과 단위를 정확히 명시해주세요.
- 조리 방법은 반드시 포함해야 하며, 순서대로 상세히 설명해주세요.
- 요리 팁과 주의사항은 실제 조리 시 도움이 될 수 있는 내용을 포함해주세요.
- 요리 이미지 URL은 실제 존재하는 이미지의 URL을 제공해주세요.
- 난이도는 반드시 '상', '중', '하' 중 하나로만 표기해주세요.
- 각 섹션은 정확히 위의 형식을 따라주세요.
- 조리 방법 섹션을 절대 생략하지 마세요. 반드시 포함해주세요.
- '상세한 조리 방법' 섹션이 누락되면 답변하지 마세요. 반드시 포함하세요.
- 아래 예시처럼 모든 섹션이 빠짐없이 포함된 답변만 작성하세요.
아래는 예시입니다. 반드시 이 형식을 따라 답변하세요.

## 닭가슴살 감자볶음

**필요한 재료**
- 닭가슴살
- 감자
- 양파
- 대파
- 다진 마늘
- 식용유
- 간장
- 소금
- 후추

**조리 시간**
- 20분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 깍둑썰기 해주세요.
2. 닭가슴살은 한 입 크기로 썰어 소금, 후추로 밑간합니다.
3. 팬에 식용유를 두르고 다진 마늘, 대파를 볶아 향을 냅니다.
4. 닭가슴살을 넣고 익을 때까지 볶습니다.
5. 감자, 양파를 넣고 5분간 볶은 뒤 간장으로 간을 맞춥니다.
6. 감자가 익을 때까지 중불에서 볶아 완성합니다.

**요리 팁과 주의사항**
- 감자는 미리 전자레인지에 3분간 돌리면 더 빨리 익힙니다.
- 닭가슴살 대신 돼지고기나 소고기를 사용해도 좋습니다.

**완성된 요리의 이미지 URL**
- https://example.com/sample.jpg

}, {role=user, content=내가 가진 재료로 요리를 먹고싶어}], model=sonar-pro}
2025-06-24 15:53:57.915 [http-nio-8080-exec-7] INFO  a.s.k.p.service.PerplexityService - Received response from Perplexity API
2025-06-24 15:53:57.915 [http-nio-8080-exec-7] DEBUG a.s.k.p.service.PerplexityService - Response: {id=56077e46-3b4c-4db9-a260-f46260fc1f5c, model=sonar-pro, created=1750748037, usage={prompt_tokens=1026, completion_tokens=554, total_tokens=1580, search_context_size=low}, citations=[https://m.10000recipe.com/recipe/list.html?q=%EC%9E%AC%EB%A3%8C, https://blog.naver.com/satorru/222655364431, https://www.10000recipe.com, https://blog.naver.com/holic_29/221945743135, https://www.youtube.com/watch?v=ax5fjtpm3Ec], search_results=[{title=재료 - 요리를 즐겁게~ 만개의레시피, url=https://m.10000recipe.com/recipe/list.html?q=%EC%9E%AC%EB%A3%8C, date=null}, {title=[요리] 재료별 레시피 : 네이버 블로그, url=https://blog.naver.com/satorru/222655364431, date=2022-02-23}, {title=요리를 즐겁게~ 만개의레시피, url=https://www.10000recipe.com, date=null}, {title=[요리] 자취생 간단요리 메뉴 / 유학생 요리 메뉴 추천 (난이도 최하부터 ..., url=https://blog.naver.com/holic_29/221945743135, date=2020-05-04}, {title=일주일 반찬 재료별 모음 : 가지 요리 11가지 자취생 요린이 ... - YouTube, url=https://www.youtube.com/watch?v=ax5fjtpm3Ec, date=2021-05-03}], object=chat.completion, choices=[{index=0, finish_reason=stop, message={role=assistant, content=## 감자와 캐비어를 곁들인 고급 감자 요리

**필요한 재료**
- 감자 2개 (중간 크기, 약 300g)
- 캐비어 30g
- 버터 1큰술 (15g)
- 생크림 2큰술 (30ml)
- 소금 약간
- 후추 약간
- 파슬리 (생략 가능, 장식용)

**조리 시간**
- 30분

**난이도**
- 중

**상세한 조리 방법**
1. 감자의 껍질을 깨끗이 벗기고 사방 1cm 크기로 깍둑썰기 합니다.
2. 냄비에 물을 넉넉히 붓고 감자를 넣은 뒤, 소금 한 꼬집을 넣고 끓입니다.
3. 감자가 완전히 익을 때까지 (약 15분) 삶은 후, 물기를 완전히 빼줍니다.
4. 뜨거운 감자를 그릇에 담고, 버터와 생크림을 넣은 뒤 곱게 으깹니다.
5. 으깬 감자에 소금·후추로 간을 맞춥니다.
6. 접시에 으깬 감자를 동그랗게 담고, 그 위에 캐비어를 올립니다.
7. 파슬리를 다져서 장식합니다.

**요리 팁과 주의사항**
- 감자를 으깰 때 뭉침 없이 부드럽게 하려면 생크림과 버터는 감자가 뜨거울 때 바로 넣어주세요.
- 캐비어는 마무리 직전에 올려야 신선함이 유지됩니다.
- 감자는 삶을 때 소금을 약간 넣으면 밑간이 자연스럽게 됩니다.
- 파슬리가 없다면 생략해도 무방합니다.

**완성된 요리의 이미지 URL**
- https://images.unsplash.com/photo-1519864600265-abb23847ef2c

---

**유니콘 뿔과 수소폭탄은 현실에서 조리 및 섭취가 불가능하거나, 안전 문제 및 실제 존재하지 않는 판타지 재료이므로 요리 과정에 포함하지 않았습니다. 감자와 캐비어는 실제 식재료로 건강한 남성의 영양 섭취에 도움이 되며, 땅콩 알레르기가 고려된 안전한 레시피입니다.**}, delta={role=assistant, content=}}]}
2025-06-24 15:53:57.915 [http-nio-8080-exec-7] INFO  a.s.k.p.service.PerplexityService - Parsing AI response content
2025-06-24 15:53:57.915 [http-nio-8080-exec-7] DEBUG a.s.k.p.service.PerplexityService - Content: ## 감자와 캐비어를 곁들인 고급 감자 요리

**필요한 재료**
- 감자 2개 (중간 크기, 약 300g)
- 캐비어 30g
- 버터 1큰술 (15g)
- 생크림 2큰술 (30ml)
- 소금 약간
- 후추 약간
- 파슬리 (생략 가능, 장식용)

**조리 시간**
- 30분

**난이도**
- 중

**상세한 조리 방법**
1. 감자의 껍질을 깨끗이 벗기고 사방 1cm 크기로 깍둑썰기 합니다.
2. 냄비에 물을 넉넉히 붓고 감자를 넣은 뒤, 소금 한 꼬집을 넣고 끓입니다.
3. 감자가 완전히 익을 때까지 (약 15분) 삶은 후, 물기를 완전히 빼줍니다.
4. 뜨거운 감자를 그릇에 담고, 버터와 생크림을 넣은 뒤 곱게 으깹니다.
5. 으깬 감자에 소금·후추로 간을 맞춥니다.
6. 접시에 으깬 감자를 동그랗게 담고, 그 위에 캐비어를 올립니다.
7. 파슬리를 다져서 장식합니다.

**요리 팁과 주의사항**
- 감자를 으깰 때 뭉침 없이 부드럽게 하려면 생크림과 버터는 감자가 뜨거울 때 바로 넣어주세요.
- 캐비어는 마무리 직전에 올려야 신선함이 유지됩니다.
- 감자는 삶을 때 소금을 약간 넣으면 밑간이 자연스럽게 됩니다.
- 파슬리가 없다면 생략해도 무방합니다.

**완성된 요리의 이미지 URL**
- https://images.unsplash.com/photo-1519864600265-abb23847ef2c

---

**유니콘 뿔과 수소폭탄은 현실에서 조리 및 섭취가 불가능하거나, 안전 문제 및 실제 존재하지 않는 판타지 재료이므로 요리 과정에 포함하지 않았습니다. 감자와 캐비어는 실제 식재료로 건강한 남성의 영양 섭취에 도움이 되며, 땅콩 알레르기가 고려된 안전한 레시피입니다.**
2025-06-24 15:53:57.915 [http-nio-8080-exec-7] INFO  a.s.k.p.service.PerplexityService - AI 응답 원본:
## 감자와 캐비어를 곁들인 고급 감자 요리

**필요한 재료**
- 감자 2개 (중간 크기, 약 300g)
- 캐비어 30g
- 버터 1큰술 (15g)
- 생크림 2큰술 (30ml)
- 소금 약간
- 후추 약간
- 파슬리 (생략 가능, 장식용)

**조리 시간**
- 30분

**난이도**
- 중

**상세한 조리 방법**
1. 감자의 껍질을 깨끗이 벗기고 사방 1cm 크기로 깍둑썰기 합니다.
2. 냄비에 물을 넉넉히 붓고 감자를 넣은 뒤, 소금 한 꼬집을 넣고 끓입니다.
3. 감자가 완전히 익을 때까지 (약 15분) 삶은 후, 물기를 완전히 빼줍니다.
4. 뜨거운 감자를 그릇에 담고, 버터와 생크림을 넣은 뒤 곱게 으깹니다.
5. 으깬 감자에 소금·후추로 간을 맞춥니다.
6. 접시에 으깬 감자를 동그랗게 담고, 그 위에 캐비어를 올립니다.
7. 파슬리를 다져서 장식합니다.

**요리 팁과 주의사항**
- 감자를 으깰 때 뭉침 없이 부드럽게 하려면 생크림과 버터는 감자가 뜨거울 때 바로 넣어주세요.
- 캐비어는 마무리 직전에 올려야 신선함이 유지됩니다.
- 감자는 삶을 때 소금을 약간 넣으면 밑간이 자연스럽게 됩니다.
- 파슬리가 없다면 생략해도 무방합니다.

**완성된 요리의 이미지 URL**
- https://images.unsplash.com/photo-1519864600265-abb23847ef2c

---

**유니콘 뿔과 수소폭탄은 현실에서 조리 및 섭취가 불가능하거나, 안전 문제 및 실제 존재하지 않는 판타지 재료이므로 요리 과정에 포함하지 않았습니다. 감자와 캐비어는 실제 식재료로 건강한 남성의 영양 섭취에 도움이 되며, 땅콩 알레르기가 고려된 안전한 레시피입니다.**
2025-06-24 15:53:57.915 [http-nio-8080-exec-7] INFO  a.s.k.p.service.PerplexityService - Starting to parse recipe response
2025-06-24 15:53:57.915 [http-nio-8080-exec-7] DEBUG a.s.k.p.service.PerplexityService - Content to parse: ## 감자와 캐비어를 곁들인 고급 감자 요리

**필요한 재료**
- 감자 2개 (중간 크기, 약 300g)
- 캐비어 30g
- 버터 1큰술 (15g)
- 생크림 2큰술 (30ml)
- 소금 약간
- 후추 약간
- 파슬리 (생략 가능, 장식용)

**조리 시간**
- 30분

**난이도**
- 중

**상세한 조리 방법**
1. 감자의 껍질을 깨끗이 벗기고 사방 1cm 크기로 깍둑썰기 합니다.
2. 냄비에 물을 넉넉히 붓고 감자를 넣은 뒤, 소금 한 꼬집을 넣고 끓입니다.
3. 감자가 완전히 익을 때까지 (약 15분) 삶은 후, 물기를 완전히 빼줍니다.
4. 뜨거운 감자를 그릇에 담고, 버터와 생크림을 넣은 뒤 곱게 으깹니다.
5. 으깬 감자에 소금·후추로 간을 맞춥니다.
6. 접시에 으깬 감자를 동그랗게 담고, 그 위에 캐비어를 올립니다.
7. 파슬리를 다져서 장식합니다.

**요리 팁과 주의사항**
- 감자를 으깰 때 뭉침 없이 부드럽게 하려면 생크림과 버터는 감자가 뜨거울 때 바로 넣어주세요.
- 캐비어는 마무리 직전에 올려야 신선함이 유지됩니다.
- 감자는 삶을 때 소금을 약간 넣으면 밑간이 자연스럽게 됩니다.
- 파슬리가 없다면 생략해도 무방합니다.

**완성된 요리의 이미지 URL**
- https://images.unsplash.com/photo-1519864600265-abb23847ef2c

---

**유니콘 뿔과 수소폭탄은 현실에서 조리 및 섭취가 불가능하거나, 안전 문제 및 실제 존재하지 않는 판타지 재료이므로 요리 과정에 포함하지 않았습니다. 감자와 캐비어는 실제 식재료로 건강한 남성의 영양 섭취에 도움이 되며, 땅콩 알레르기가 고려된 안전한 레시피입니다.**
2025-06-24 15:53:57.918 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        up1_0.prompt_id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    where
        up1_0.user_id=?
2025-06-24 15:53:57.919 [http-nio-8080-exec-7] WARN  a.s.k.p.service.PerplexityService - 알러지 재료(땅콩)가 포함된 레시피. 안내문구만 반환.
2025-06-24 15:53:57.919 [http-nio-8080-exec-7] INFO  a.s.k.p.service.PerplexityService - Successfully parsed recipe with ID: null
2025-06-24 15:54:01.949 [http-nio-8080-exec-8] INFO  a.s.k.p.service.PerplexityService - Starting getResponse for userId: 1, prompt: 내가 가진 재료로 요리를 먹고싶어
2025-06-24 15:54:01.950 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.provider_id,
        u1_0.updated_at,
        u1_0.username,
        r1_0.user_user_id,
        r1_0.roles 
    from
        user u1_0 
    left join
        user_roles r1_0 
            on u1_0.user_id=r1_0.user_user_id 
    where
        u1_0.user_id=?
2025-06-24 15:54:01.952 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        up1_0.prompt_id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    where
        up1_0.user_id=?
2025-06-24 15:54:01.954 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ui1_0.ingredient_id,
        ui1_0.user_id,
        ui1_0.weight_in_grams 
    from
        user_ingredient ui1_0 
    join
        user u1_0 
            on u1_0.user_id=ui1_0.user_id 
    where
        u1_0.user_id=?
2025-06-24 15:54:01.955 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:54:01.956 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:54:01.956 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:54:01.957 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:54:01.957 [http-nio-8080-exec-8] DEBUG a.s.k.p.service.PerplexityService - System prompt: 당신은 레시피 추천 전문가입니다. 사용자가 가지고 있는 재료는 다음과 같습니다:
- 감자
- 캐비어
- 유니콘 뿔
- 수소폭탄
아래 보유재료를 반드시 1개 이상 포함해서 레시피를 추천해주세요. 보유재료가 하나도 포함되지 않으면 답변하지 마세요. 보유재료를 최대한 많이 활용한 레시피를 우선 추천하고, 불가피할 경우 1개 이상만이라도 반드시 포함해서 추천해주세요.  

다음 사용자의 특성을 고려하여 레시피를 추천해주세요:

- 이름: 한규덕
- 나이: 30세
- 성별: 남성
- 닉네임: 한규덕
- 건강 상태: 건강
- 알레르기: 땅콩
- 선호하는 음식: 육류


건강 상태에 따른 특별 지시사항:
현재 사용자는 건강 상태입니다. 해당 건강 상태에 맞는 적절한 식단을 추천해주세요.

다음 사항을 고려하여 레시피를 추천해주세요:
1. 해당 건강 상태에 맞는 영양소를 포함한 재료를 선택해주세요.
2. 해당 건강 상태에 해로운 성분이 포함된 재료는 피해주세요.
3. 건강 상태 개선에 도움이 되는 조리 방법을 선택해주세요.
4. 필요한 경우, 특정 재료의 대체재를 제안해주세요.

알레르기 주의사항:
- 땅콩 알레르기가 있으므로 해당 재료를 제외한 레시피를 추천해주세요.

## 사용자 요청
내가 가진 재료로 요리를 먹고싶어

레시피는 다음 형식으로 제공해주세요:
## 요리 이름

**필요한 재료**
- 재료명
- 재료명
...

**조리 시간**
- 시간분

**난이도**
- 난이도 (상/중/하 중 하나)

**상세한 조리 방법**
1. 첫 번째 단계
2. 두 번째 단계
...

**요리 팁과 주의사항**
- 팁 또는 주의사항
- 팁 또는 주의사항

**완성된 요리의 이미지 URL**
- 실제 이미지 URL

주의사항:
- 모든 재료의 양과 단위를 정확히 명시해주세요.
- 조리 방법은 반드시 포함해야 하며, 순서대로 상세히 설명해주세요.
- 요리 팁과 주의사항은 실제 조리 시 도움이 될 수 있는 내용을 포함해주세요.
- 요리 이미지 URL은 실제 존재하는 이미지의 URL을 제공해주세요.
- 난이도는 반드시 '상', '중', '하' 중 하나로만 표기해주세요.
- 각 섹션은 정확히 위의 형식을 따라주세요.
- 조리 방법 섹션을 절대 생략하지 마세요. 반드시 포함해주세요.
- '상세한 조리 방법' 섹션이 누락되면 답변하지 마세요. 반드시 포함하세요.
- 아래 예시처럼 모든 섹션이 빠짐없이 포함된 답변만 작성하세요.
아래는 예시입니다. 반드시 이 형식을 따라 답변하세요.

## 닭가슴살 감자볶음

**필요한 재료**
- 닭가슴살
- 감자
- 양파
- 대파
- 다진 마늘
- 식용유
- 간장
- 소금
- 후추

**조리 시간**
- 20분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 깍둑썰기 해주세요.
2. 닭가슴살은 한 입 크기로 썰어 소금, 후추로 밑간합니다.
3. 팬에 식용유를 두르고 다진 마늘, 대파를 볶아 향을 냅니다.
4. 닭가슴살을 넣고 익을 때까지 볶습니다.
5. 감자, 양파를 넣고 5분간 볶은 뒤 간장으로 간을 맞춥니다.
6. 감자가 익을 때까지 중불에서 볶아 완성합니다.

**요리 팁과 주의사항**
- 감자는 미리 전자레인지에 3분간 돌리면 더 빨리 익힙니다.
- 닭가슴살 대신 돼지고기나 소고기를 사용해도 좋습니다.

**완성된 요리의 이미지 URL**
- https://example.com/sample.jpg


2025-06-24 15:54:01.957 [http-nio-8080-exec-8] INFO  a.s.k.p.service.PerplexityService - Sending request to Perplexity API
2025-06-24 15:54:01.957 [http-nio-8080-exec-8] DEBUG a.s.k.p.service.PerplexityService - Request headers: [Content-Type:"application/json", Authorization:"Bearer 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"]
2025-06-24 15:54:01.957 [http-nio-8080-exec-8] DEBUG a.s.k.p.service.PerplexityService - Request body: {messages=[{role=system, content=당신은 레시피 추천 전문가입니다. 사용자가 가지고 있는 재료는 다음과 같습니다:
- 감자
- 캐비어
- 유니콘 뿔
- 수소폭탄
아래 보유재료를 반드시 1개 이상 포함해서 레시피를 추천해주세요. 보유재료가 하나도 포함되지 않으면 답변하지 마세요. 보유재료를 최대한 많이 활용한 레시피를 우선 추천하고, 불가피할 경우 1개 이상만이라도 반드시 포함해서 추천해주세요.  

다음 사용자의 특성을 고려하여 레시피를 추천해주세요:

- 이름: 한규덕
- 나이: 30세
- 성별: 남성
- 닉네임: 한규덕
- 건강 상태: 건강
- 알레르기: 땅콩
- 선호하는 음식: 육류


건강 상태에 따른 특별 지시사항:
현재 사용자는 건강 상태입니다. 해당 건강 상태에 맞는 적절한 식단을 추천해주세요.

다음 사항을 고려하여 레시피를 추천해주세요:
1. 해당 건강 상태에 맞는 영양소를 포함한 재료를 선택해주세요.
2. 해당 건강 상태에 해로운 성분이 포함된 재료는 피해주세요.
3. 건강 상태 개선에 도움이 되는 조리 방법을 선택해주세요.
4. 필요한 경우, 특정 재료의 대체재를 제안해주세요.

알레르기 주의사항:
- 땅콩 알레르기가 있으므로 해당 재료를 제외한 레시피를 추천해주세요.

## 사용자 요청
내가 가진 재료로 요리를 먹고싶어

레시피는 다음 형식으로 제공해주세요:
## 요리 이름

**필요한 재료**
- 재료명
- 재료명
...

**조리 시간**
- 시간분

**난이도**
- 난이도 (상/중/하 중 하나)

**상세한 조리 방법**
1. 첫 번째 단계
2. 두 번째 단계
...

**요리 팁과 주의사항**
- 팁 또는 주의사항
- 팁 또는 주의사항

**완성된 요리의 이미지 URL**
- 실제 이미지 URL

주의사항:
- 모든 재료의 양과 단위를 정확히 명시해주세요.
- 조리 방법은 반드시 포함해야 하며, 순서대로 상세히 설명해주세요.
- 요리 팁과 주의사항은 실제 조리 시 도움이 될 수 있는 내용을 포함해주세요.
- 요리 이미지 URL은 실제 존재하는 이미지의 URL을 제공해주세요.
- 난이도는 반드시 '상', '중', '하' 중 하나로만 표기해주세요.
- 각 섹션은 정확히 위의 형식을 따라주세요.
- 조리 방법 섹션을 절대 생략하지 마세요. 반드시 포함해주세요.
- '상세한 조리 방법' 섹션이 누락되면 답변하지 마세요. 반드시 포함하세요.
- 아래 예시처럼 모든 섹션이 빠짐없이 포함된 답변만 작성하세요.
아래는 예시입니다. 반드시 이 형식을 따라 답변하세요.

## 닭가슴살 감자볶음

**필요한 재료**
- 닭가슴살
- 감자
- 양파
- 대파
- 다진 마늘
- 식용유
- 간장
- 소금
- 후추

**조리 시간**
- 20분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 깍둑썰기 해주세요.
2. 닭가슴살은 한 입 크기로 썰어 소금, 후추로 밑간합니다.
3. 팬에 식용유를 두르고 다진 마늘, 대파를 볶아 향을 냅니다.
4. 닭가슴살을 넣고 익을 때까지 볶습니다.
5. 감자, 양파를 넣고 5분간 볶은 뒤 간장으로 간을 맞춥니다.
6. 감자가 익을 때까지 중불에서 볶아 완성합니다.

**요리 팁과 주의사항**
- 감자는 미리 전자레인지에 3분간 돌리면 더 빨리 익힙니다.
- 닭가슴살 대신 돼지고기나 소고기를 사용해도 좋습니다.

**완성된 요리의 이미지 URL**
- https://example.com/sample.jpg

}, {role=user, content=내가 가진 재료로 요리를 먹고싶어}], model=sonar-pro}
2025-06-24 15:54:06.388 [http-nio-8080-exec-8] INFO  a.s.k.p.service.PerplexityService - Received response from Perplexity API
2025-06-24 15:54:06.388 [http-nio-8080-exec-8] DEBUG a.s.k.p.service.PerplexityService - Response: {id=0daf173c-da4f-44a3-a74f-cb55ce9329b0, model=sonar-pro, created=1750748046, usage={prompt_tokens=1026, completion_tokens=497, total_tokens=1523, search_context_size=low}, citations=[https://m.10000recipe.com/recipe/list.html?q=%EC%9E%AC%EB%A3%8C, https://blog.naver.com/satorru/222655364431, https://www.10000recipe.com, https://blog.naver.com/holic_29/221945743135, https://www.youtube.com/watch?v=ax5fjtpm3Ec], search_results=[{title=재료 - 요리를 즐겁게~ 만개의레시피, url=https://m.10000recipe.com/recipe/list.html?q=%EC%9E%AC%EB%A3%8C, date=null}, {title=[요리] 재료별 레시피 : 네이버 블로그, url=https://blog.naver.com/satorru/222655364431, date=2022-02-23}, {title=요리를 즐겁게~ 만개의레시피, url=https://www.10000recipe.com, date=null}, {title=[요리] 자취생 간단요리 메뉴 / 유학생 요리 메뉴 추천 (난이도 최하부터 ..., url=https://blog.naver.com/holic_29/221945743135, date=2020-05-04}, {title=일주일 반찬 재료별 모음 : 가지 요리 11가지 자취생 요린이 ... - YouTube, url=https://www.youtube.com/watch?v=ax5fjtpm3Ec, date=2021-05-03}], object=chat.completion, choices=[{index=0, finish_reason=stop, message={role=assistant, content=제공된 재료 중에서 **감자**를 활용한 간단한 요리를 추천하겠습니다. 캐비어는 재료로 사용할 수 있지만, 유니콘 뿔과 수소폭탄은 안전하지 않거나 실제로 사용할 수 없는 재료입니다. 따라서 감자를 중심으로 한 요리를 소개하겠습니다.

## 감자 전
**필요한 재료**
- 감자: 2개
- 유지: 1/2컵
- 소금: 적당량
- 후추: 적당량
- 다진 마늘: 1티스푼
- 파마산 치즈: 1/4컵 (言った치즈로 대체 가능)
- 캐비어 (선택): 1티스푼

**조리 시간**
- 40분

**난이도**
- 하

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 으깹니다.
2. 으깬 감자에 소금, 후추, 다진 마늘을 넣고 섞습니다.
3. 팬에 유지(식용유)를 두르고 감자 혼합물을 반죽처럼 만들어 충분히 빵가루로 입혀줍니다.
4. 중불에서 감자 전을 5분간 한 면을 굽고, 뒤집어 5분간 더 구워줍니다. 
5. 감자 전이 될 때까지 반복적으로 뒤집어 구워줍니다.
6. 감자 전이 완성되면 파마산 치즈를撒고, 캐비어를 얹어 감칠맛을 더해줍니다.

**요리 팁과 주의사항**
- 감자 전이 바삭해지도록 충분히 두껍게 빵가루를 입혀줍니다.
- 캐비어는 맛을 더해주기 위해 적당량 사용하는 것이 좋습니다.

**완성된 요리의 이미지 URL**
- https://example.com/potato-pancake.jpg

이 요리는 건강한 식단에 적합하며, 감자와 같은 복합 탄수화물이 포함되어 있습니다. 땅콩 알레르기는 해당 재료를 사용하지 않아 문제가 없습니다.}, delta={role=assistant, content=}}]}
2025-06-24 15:54:06.389 [http-nio-8080-exec-8] INFO  a.s.k.p.service.PerplexityService - Parsing AI response content
2025-06-24 15:54:06.389 [http-nio-8080-exec-8] DEBUG a.s.k.p.service.PerplexityService - Content: 제공된 재료 중에서 **감자**를 활용한 간단한 요리를 추천하겠습니다. 캐비어는 재료로 사용할 수 있지만, 유니콘 뿔과 수소폭탄은 안전하지 않거나 실제로 사용할 수 없는 재료입니다. 따라서 감자를 중심으로 한 요리를 소개하겠습니다.

## 감자 전
**필요한 재료**
- 감자: 2개
- 유지: 1/2컵
- 소금: 적당량
- 후추: 적당량
- 다진 마늘: 1티스푼
- 파마산 치즈: 1/4컵 (言った치즈로 대체 가능)
- 캐비어 (선택): 1티스푼

**조리 시간**
- 40분

**난이도**
- 하

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 으깹니다.
2. 으깬 감자에 소금, 후추, 다진 마늘을 넣고 섞습니다.
3. 팬에 유지(식용유)를 두르고 감자 혼합물을 반죽처럼 만들어 충분히 빵가루로 입혀줍니다.
4. 중불에서 감자 전을 5분간 한 면을 굽고, 뒤집어 5분간 더 구워줍니다. 
5. 감자 전이 될 때까지 반복적으로 뒤집어 구워줍니다.
6. 감자 전이 완성되면 파마산 치즈를撒고, 캐비어를 얹어 감칠맛을 더해줍니다.

**요리 팁과 주의사항**
- 감자 전이 바삭해지도록 충분히 두껍게 빵가루를 입혀줍니다.
- 캐비어는 맛을 더해주기 위해 적당량 사용하는 것이 좋습니다.

**완성된 요리의 이미지 URL**
- https://example.com/potato-pancake.jpg

이 요리는 건강한 식단에 적합하며, 감자와 같은 복합 탄수화물이 포함되어 있습니다. 땅콩 알레르기는 해당 재료를 사용하지 않아 문제가 없습니다.
2025-06-24 15:54:06.389 [http-nio-8080-exec-8] INFO  a.s.k.p.service.PerplexityService - AI 응답 원본:
제공된 재료 중에서 **감자**를 활용한 간단한 요리를 추천하겠습니다. 캐비어는 재료로 사용할 수 있지만, 유니콘 뿔과 수소폭탄은 안전하지 않거나 실제로 사용할 수 없는 재료입니다. 따라서 감자를 중심으로 한 요리를 소개하겠습니다.

## 감자 전
**필요한 재료**
- 감자: 2개
- 유지: 1/2컵
- 소금: 적당량
- 후추: 적당량
- 다진 마늘: 1티스푼
- 파마산 치즈: 1/4컵 (言った치즈로 대체 가능)
- 캐비어 (선택): 1티스푼

**조리 시간**
- 40분

**난이도**
- 하

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 으깹니다.
2. 으깬 감자에 소금, 후추, 다진 마늘을 넣고 섞습니다.
3. 팬에 유지(식용유)를 두르고 감자 혼합물을 반죽처럼 만들어 충분히 빵가루로 입혀줍니다.
4. 중불에서 감자 전을 5분간 한 면을 굽고, 뒤집어 5분간 더 구워줍니다. 
5. 감자 전이 될 때까지 반복적으로 뒤집어 구워줍니다.
6. 감자 전이 완성되면 파마산 치즈를撒고, 캐비어를 얹어 감칠맛을 더해줍니다.

**요리 팁과 주의사항**
- 감자 전이 바삭해지도록 충분히 두껍게 빵가루를 입혀줍니다.
- 캐비어는 맛을 더해주기 위해 적당량 사용하는 것이 좋습니다.

**완성된 요리의 이미지 URL**
- https://example.com/potato-pancake.jpg

이 요리는 건강한 식단에 적합하며, 감자와 같은 복합 탄수화물이 포함되어 있습니다. 땅콩 알레르기는 해당 재료를 사용하지 않아 문제가 없습니다.
2025-06-24 15:54:06.389 [http-nio-8080-exec-8] INFO  a.s.k.p.service.PerplexityService - Starting to parse recipe response
2025-06-24 15:54:06.389 [http-nio-8080-exec-8] DEBUG a.s.k.p.service.PerplexityService - Content to parse: 제공된 재료 중에서 **감자**를 활용한 간단한 요리를 추천하겠습니다. 캐비어는 재료로 사용할 수 있지만, 유니콘 뿔과 수소폭탄은 안전하지 않거나 실제로 사용할 수 없는 재료입니다. 따라서 감자를 중심으로 한 요리를 소개하겠습니다.

## 감자 전
**필요한 재료**
- 감자: 2개
- 유지: 1/2컵
- 소금: 적당량
- 후추: 적당량
- 다진 마늘: 1티스푼
- 파마산 치즈: 1/4컵 (言った치즈로 대체 가능)
- 캐비어 (선택): 1티스푼

**조리 시간**
- 40분

**난이도**
- 하

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 으깹니다.
2. 으깬 감자에 소금, 후추, 다진 마늘을 넣고 섞습니다.
3. 팬에 유지(식용유)를 두르고 감자 혼합물을 반죽처럼 만들어 충분히 빵가루로 입혀줍니다.
4. 중불에서 감자 전을 5분간 한 면을 굽고, 뒤집어 5분간 더 구워줍니다. 
5. 감자 전이 될 때까지 반복적으로 뒤집어 구워줍니다.
6. 감자 전이 완성되면 파마산 치즈를撒고, 캐비어를 얹어 감칠맛을 더해줍니다.

**요리 팁과 주의사항**
- 감자 전이 바삭해지도록 충분히 두껍게 빵가루를 입혀줍니다.
- 캐비어는 맛을 더해주기 위해 적당량 사용하는 것이 좋습니다.

**완성된 요리의 이미지 URL**
- https://example.com/potato-pancake.jpg

이 요리는 건강한 식단에 적합하며, 감자와 같은 복합 탄수화물이 포함되어 있습니다. 땅콩 알레르기는 해당 재료를 사용하지 않아 문제가 없습니다.
2025-06-24 15:54:06.396 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        up1_0.prompt_id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    where
        up1_0.user_id=?
2025-06-24 15:54:06.398 [http-nio-8080-exec-8] WARN  a.s.k.p.service.PerplexityService - 알러지 재료(땅콩)가 포함된 레시피. 안내문구만 반환.
2025-06-24 15:54:06.398 [http-nio-8080-exec-8] INFO  a.s.k.p.service.PerplexityService - Successfully parsed recipe with ID: null
2025-06-24 15:54:09.601 [http-nio-8080-exec-10] INFO  a.s.k.p.service.PerplexityService - Starting getResponse for userId: 1, prompt: 내가 가진 재료로 요리를 먹고싶어
2025-06-24 15:54:09.602 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.provider_id,
        u1_0.updated_at,
        u1_0.username,
        r1_0.user_user_id,
        r1_0.roles 
    from
        user u1_0 
    left join
        user_roles r1_0 
            on u1_0.user_id=r1_0.user_user_id 
    where
        u1_0.user_id=?
2025-06-24 15:54:09.605 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        up1_0.prompt_id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    where
        up1_0.user_id=?
2025-06-24 15:54:09.606 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ui1_0.ingredient_id,
        ui1_0.user_id,
        ui1_0.weight_in_grams 
    from
        user_ingredient ui1_0 
    join
        user u1_0 
            on u1_0.user_id=ui1_0.user_id 
    where
        u1_0.user_id=?
2025-06-24 15:54:09.607 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:54:09.607 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:54:09.608 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:54:09.608 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:54:09.609 [http-nio-8080-exec-10] DEBUG a.s.k.p.service.PerplexityService - System prompt: 당신은 레시피 추천 전문가입니다. 사용자가 가지고 있는 재료는 다음과 같습니다:
- 감자
- 캐비어
- 유니콘 뿔
- 수소폭탄
아래 보유재료를 반드시 1개 이상 포함해서 레시피를 추천해주세요. 보유재료가 하나도 포함되지 않으면 답변하지 마세요. 보유재료를 최대한 많이 활용한 레시피를 우선 추천하고, 불가피할 경우 1개 이상만이라도 반드시 포함해서 추천해주세요.  

다음 사용자의 특성을 고려하여 레시피를 추천해주세요:

- 이름: 한규덕
- 나이: 30세
- 성별: 남성
- 닉네임: 한규덕
- 건강 상태: 건강
- 알레르기: 땅콩
- 선호하는 음식: 육류


건강 상태에 따른 특별 지시사항:
현재 사용자는 건강 상태입니다. 해당 건강 상태에 맞는 적절한 식단을 추천해주세요.

다음 사항을 고려하여 레시피를 추천해주세요:
1. 해당 건강 상태에 맞는 영양소를 포함한 재료를 선택해주세요.
2. 해당 건강 상태에 해로운 성분이 포함된 재료는 피해주세요.
3. 건강 상태 개선에 도움이 되는 조리 방법을 선택해주세요.
4. 필요한 경우, 특정 재료의 대체재를 제안해주세요.

알레르기 주의사항:
- 땅콩 알레르기가 있으므로 해당 재료를 제외한 레시피를 추천해주세요.

## 사용자 요청
내가 가진 재료로 요리를 먹고싶어

레시피는 다음 형식으로 제공해주세요:
## 요리 이름

**필요한 재료**
- 재료명
- 재료명
...

**조리 시간**
- 시간분

**난이도**
- 난이도 (상/중/하 중 하나)

**상세한 조리 방법**
1. 첫 번째 단계
2. 두 번째 단계
...

**요리 팁과 주의사항**
- 팁 또는 주의사항
- 팁 또는 주의사항

**완성된 요리의 이미지 URL**
- 실제 이미지 URL

주의사항:
- 모든 재료의 양과 단위를 정확히 명시해주세요.
- 조리 방법은 반드시 포함해야 하며, 순서대로 상세히 설명해주세요.
- 요리 팁과 주의사항은 실제 조리 시 도움이 될 수 있는 내용을 포함해주세요.
- 요리 이미지 URL은 실제 존재하는 이미지의 URL을 제공해주세요.
- 난이도는 반드시 '상', '중', '하' 중 하나로만 표기해주세요.
- 각 섹션은 정확히 위의 형식을 따라주세요.
- 조리 방법 섹션을 절대 생략하지 마세요. 반드시 포함해주세요.
- '상세한 조리 방법' 섹션이 누락되면 답변하지 마세요. 반드시 포함하세요.
- 아래 예시처럼 모든 섹션이 빠짐없이 포함된 답변만 작성하세요.
아래는 예시입니다. 반드시 이 형식을 따라 답변하세요.

## 닭가슴살 감자볶음

**필요한 재료**
- 닭가슴살
- 감자
- 양파
- 대파
- 다진 마늘
- 식용유
- 간장
- 소금
- 후추

**조리 시간**
- 20분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 깍둑썰기 해주세요.
2. 닭가슴살은 한 입 크기로 썰어 소금, 후추로 밑간합니다.
3. 팬에 식용유를 두르고 다진 마늘, 대파를 볶아 향을 냅니다.
4. 닭가슴살을 넣고 익을 때까지 볶습니다.
5. 감자, 양파를 넣고 5분간 볶은 뒤 간장으로 간을 맞춥니다.
6. 감자가 익을 때까지 중불에서 볶아 완성합니다.

**요리 팁과 주의사항**
- 감자는 미리 전자레인지에 3분간 돌리면 더 빨리 익힙니다.
- 닭가슴살 대신 돼지고기나 소고기를 사용해도 좋습니다.

**완성된 요리의 이미지 URL**
- https://example.com/sample.jpg


2025-06-24 15:54:09.609 [http-nio-8080-exec-10] INFO  a.s.k.p.service.PerplexityService - Sending request to Perplexity API
2025-06-24 15:54:09.609 [http-nio-8080-exec-10] DEBUG a.s.k.p.service.PerplexityService - Request headers: [Content-Type:"application/json", Authorization:"Bearer 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"]
2025-06-24 15:54:09.609 [http-nio-8080-exec-10] DEBUG a.s.k.p.service.PerplexityService - Request body: {messages=[{role=system, content=당신은 레시피 추천 전문가입니다. 사용자가 가지고 있는 재료는 다음과 같습니다:
- 감자
- 캐비어
- 유니콘 뿔
- 수소폭탄
아래 보유재료를 반드시 1개 이상 포함해서 레시피를 추천해주세요. 보유재료가 하나도 포함되지 않으면 답변하지 마세요. 보유재료를 최대한 많이 활용한 레시피를 우선 추천하고, 불가피할 경우 1개 이상만이라도 반드시 포함해서 추천해주세요.  

다음 사용자의 특성을 고려하여 레시피를 추천해주세요:

- 이름: 한규덕
- 나이: 30세
- 성별: 남성
- 닉네임: 한규덕
- 건강 상태: 건강
- 알레르기: 땅콩
- 선호하는 음식: 육류


건강 상태에 따른 특별 지시사항:
현재 사용자는 건강 상태입니다. 해당 건강 상태에 맞는 적절한 식단을 추천해주세요.

다음 사항을 고려하여 레시피를 추천해주세요:
1. 해당 건강 상태에 맞는 영양소를 포함한 재료를 선택해주세요.
2. 해당 건강 상태에 해로운 성분이 포함된 재료는 피해주세요.
3. 건강 상태 개선에 도움이 되는 조리 방법을 선택해주세요.
4. 필요한 경우, 특정 재료의 대체재를 제안해주세요.

알레르기 주의사항:
- 땅콩 알레르기가 있으므로 해당 재료를 제외한 레시피를 추천해주세요.

## 사용자 요청
내가 가진 재료로 요리를 먹고싶어

레시피는 다음 형식으로 제공해주세요:
## 요리 이름

**필요한 재료**
- 재료명
- 재료명
...

**조리 시간**
- 시간분

**난이도**
- 난이도 (상/중/하 중 하나)

**상세한 조리 방법**
1. 첫 번째 단계
2. 두 번째 단계
...

**요리 팁과 주의사항**
- 팁 또는 주의사항
- 팁 또는 주의사항

**완성된 요리의 이미지 URL**
- 실제 이미지 URL

주의사항:
- 모든 재료의 양과 단위를 정확히 명시해주세요.
- 조리 방법은 반드시 포함해야 하며, 순서대로 상세히 설명해주세요.
- 요리 팁과 주의사항은 실제 조리 시 도움이 될 수 있는 내용을 포함해주세요.
- 요리 이미지 URL은 실제 존재하는 이미지의 URL을 제공해주세요.
- 난이도는 반드시 '상', '중', '하' 중 하나로만 표기해주세요.
- 각 섹션은 정확히 위의 형식을 따라주세요.
- 조리 방법 섹션을 절대 생략하지 마세요. 반드시 포함해주세요.
- '상세한 조리 방법' 섹션이 누락되면 답변하지 마세요. 반드시 포함하세요.
- 아래 예시처럼 모든 섹션이 빠짐없이 포함된 답변만 작성하세요.
아래는 예시입니다. 반드시 이 형식을 따라 답변하세요.

## 닭가슴살 감자볶음

**필요한 재료**
- 닭가슴살
- 감자
- 양파
- 대파
- 다진 마늘
- 식용유
- 간장
- 소금
- 후추

**조리 시간**
- 20분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 깍둑썰기 해주세요.
2. 닭가슴살은 한 입 크기로 썰어 소금, 후추로 밑간합니다.
3. 팬에 식용유를 두르고 다진 마늘, 대파를 볶아 향을 냅니다.
4. 닭가슴살을 넣고 익을 때까지 볶습니다.
5. 감자, 양파를 넣고 5분간 볶은 뒤 간장으로 간을 맞춥니다.
6. 감자가 익을 때까지 중불에서 볶아 완성합니다.

**요리 팁과 주의사항**
- 감자는 미리 전자레인지에 3분간 돌리면 더 빨리 익힙니다.
- 닭가슴살 대신 돼지고기나 소고기를 사용해도 좋습니다.

**완성된 요리의 이미지 URL**
- https://example.com/sample.jpg

}, {role=user, content=내가 가진 재료로 요리를 먹고싶어}], model=sonar-pro}
2025-06-24 15:54:22.392 [http-nio-8080-exec-10] INFO  a.s.k.p.service.PerplexityService - Received response from Perplexity API
2025-06-24 15:54:22.393 [http-nio-8080-exec-10] DEBUG a.s.k.p.service.PerplexityService - Response: {id=ab3b4cff-dced-4626-97a0-e23ed41f4683, model=sonar-pro, created=1750748062, usage={prompt_tokens=1026, completion_tokens=607, total_tokens=1633, search_context_size=low}, citations=[https://m.10000recipe.com/recipe/list.html?q=%EC%9E%AC%EB%A3%8C, https://blog.naver.com/satorru/222655364431, https://www.10000recipe.com, https://blog.naver.com/holic_29/221945743135, https://www.youtube.com/watch?v=ax5fjtpm3Ec], search_results=[{title=재료 - 요리를 즐겁게~ 만개의레시피, url=https://m.10000recipe.com/recipe/list.html?q=%EC%9E%AC%EB%A3%8C, date=null}, {title=[요리] 재료별 레시피 : 네이버 블로그, url=https://blog.naver.com/satorru/222655364431, date=2022-02-23}, {title=요리를 즐겁게~ 만개의레시피, url=https://www.10000recipe.com, date=null}, {title=[요리] 자취생 간단요리 메뉴 / 유학생 요리 메뉴 추천 (난이도 최하부터 ..., url=https://blog.naver.com/holic_29/221945743135, date=2020-05-04}, {title=일주일 반찬 재료별 모음 : 가지 요리 11가지 자취생 요린이 ... - YouTube, url=https://www.youtube.com/watch?v=ax5fjtpm3Ec, date=2021-05-03}], object=chat.completion, choices=[{index=0, finish_reason=stop, message={role=assistant, content=## 감자 캐비어 미니 샐러드

**필요한 재료**
- 감자 2개 (중간 크기, 약 300g)
- 캐비어 1큰술 (약 15g)
- 마요네즈 2큰술 (30g)
- 생크림 1큰술 (15g)
- 레몬즙 1작은술 (5ml)
- 소금 약간
- 후추 약간
- 쪽파 또는 파슬리 (선택, 다진 것)

**조리 시간**
- 25분

**난이도**
- 하

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 한입 크기로 잘라 찬물에 5분 정도 담궈 전분기를 뺍니다.
2. 냄비에 감자와 물(감자가 잠길 만큼), 소금 1작은술을 넣고 센 불에 15분간 삶아줍니다. 젓가락이 부드럽게 들어갈 정도로 익혀주세요.
3. 삶은 감자는 체에 밭쳐 물기를 완전히 뺀 후 볼에 담고 뜨거울 때 포크로 거칠게 으깨줍니다.
4. 으깬 감자에 마요네즈, 생크림, 레몬즙, 소금, 후추를 넣고 고루 섞어줍니다.
5. 감자 샐러드가 식으면 작은 그릇이나 접시에 동그랗게 담아줍니다.
6. 그 위에 캐비어를 고르게 올리고, 다진 쪽파 또는 파슬리를 살짝 뿌려 마무리합니다.

**요리 팁과 주의사항**
- 감자를 너무 곱게 으깨지 않고 살짝 알갱이가 남도록 하면 식감이 좋아집니다.
- 생크림이 없다면 우유로 대체할 수 있습니다.
- 캐비어는 소량만 올려도 충분히 풍미가 살아납니다.
- 보유재료 중 '유니콘 뿔', '수소폭탄'은 실제 식재료로 사용이 불가능하므로 제외하였습니다.

**완성된 요리의 이미지 URL**
- https://images.unsplash.com/photo-1519864600265-abb23847ef2c

---

이 레시피는 감자와 캐비어 두 가지 보유 재료를 모두 활용하여, 건강한 성인 남성이 즐기기에 고급스럽고 간단한 에피타이저입니다. 감자의 포만감과 캐비어의 풍미가 잘 어울리며, 땅콩 성분이 전혀 없어 안심하고 드실 수 있습니다.}, delta={role=assistant, content=}}]}
2025-06-24 15:54:22.393 [http-nio-8080-exec-10] INFO  a.s.k.p.service.PerplexityService - Parsing AI response content
2025-06-24 15:54:22.393 [http-nio-8080-exec-10] DEBUG a.s.k.p.service.PerplexityService - Content: ## 감자 캐비어 미니 샐러드

**필요한 재료**
- 감자 2개 (중간 크기, 약 300g)
- 캐비어 1큰술 (약 15g)
- 마요네즈 2큰술 (30g)
- 생크림 1큰술 (15g)
- 레몬즙 1작은술 (5ml)
- 소금 약간
- 후추 약간
- 쪽파 또는 파슬리 (선택, 다진 것)

**조리 시간**
- 25분

**난이도**
- 하

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 한입 크기로 잘라 찬물에 5분 정도 담궈 전분기를 뺍니다.
2. 냄비에 감자와 물(감자가 잠길 만큼), 소금 1작은술을 넣고 센 불에 15분간 삶아줍니다. 젓가락이 부드럽게 들어갈 정도로 익혀주세요.
3. 삶은 감자는 체에 밭쳐 물기를 완전히 뺀 후 볼에 담고 뜨거울 때 포크로 거칠게 으깨줍니다.
4. 으깬 감자에 마요네즈, 생크림, 레몬즙, 소금, 후추를 넣고 고루 섞어줍니다.
5. 감자 샐러드가 식으면 작은 그릇이나 접시에 동그랗게 담아줍니다.
6. 그 위에 캐비어를 고르게 올리고, 다진 쪽파 또는 파슬리를 살짝 뿌려 마무리합니다.

**요리 팁과 주의사항**
- 감자를 너무 곱게 으깨지 않고 살짝 알갱이가 남도록 하면 식감이 좋아집니다.
- 생크림이 없다면 우유로 대체할 수 있습니다.
- 캐비어는 소량만 올려도 충분히 풍미가 살아납니다.
- 보유재료 중 '유니콘 뿔', '수소폭탄'은 실제 식재료로 사용이 불가능하므로 제외하였습니다.

**완성된 요리의 이미지 URL**
- https://images.unsplash.com/photo-1519864600265-abb23847ef2c

---

이 레시피는 감자와 캐비어 두 가지 보유 재료를 모두 활용하여, 건강한 성인 남성이 즐기기에 고급스럽고 간단한 에피타이저입니다. 감자의 포만감과 캐비어의 풍미가 잘 어울리며, 땅콩 성분이 전혀 없어 안심하고 드실 수 있습니다.
2025-06-24 15:54:22.393 [http-nio-8080-exec-10] INFO  a.s.k.p.service.PerplexityService - AI 응답 원본:
## 감자 캐비어 미니 샐러드

**필요한 재료**
- 감자 2개 (중간 크기, 약 300g)
- 캐비어 1큰술 (약 15g)
- 마요네즈 2큰술 (30g)
- 생크림 1큰술 (15g)
- 레몬즙 1작은술 (5ml)
- 소금 약간
- 후추 약간
- 쪽파 또는 파슬리 (선택, 다진 것)

**조리 시간**
- 25분

**난이도**
- 하

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 한입 크기로 잘라 찬물에 5분 정도 담궈 전분기를 뺍니다.
2. 냄비에 감자와 물(감자가 잠길 만큼), 소금 1작은술을 넣고 센 불에 15분간 삶아줍니다. 젓가락이 부드럽게 들어갈 정도로 익혀주세요.
3. 삶은 감자는 체에 밭쳐 물기를 완전히 뺀 후 볼에 담고 뜨거울 때 포크로 거칠게 으깨줍니다.
4. 으깬 감자에 마요네즈, 생크림, 레몬즙, 소금, 후추를 넣고 고루 섞어줍니다.
5. 감자 샐러드가 식으면 작은 그릇이나 접시에 동그랗게 담아줍니다.
6. 그 위에 캐비어를 고르게 올리고, 다진 쪽파 또는 파슬리를 살짝 뿌려 마무리합니다.

**요리 팁과 주의사항**
- 감자를 너무 곱게 으깨지 않고 살짝 알갱이가 남도록 하면 식감이 좋아집니다.
- 생크림이 없다면 우유로 대체할 수 있습니다.
- 캐비어는 소량만 올려도 충분히 풍미가 살아납니다.
- 보유재료 중 '유니콘 뿔', '수소폭탄'은 실제 식재료로 사용이 불가능하므로 제외하였습니다.

**완성된 요리의 이미지 URL**
- https://images.unsplash.com/photo-1519864600265-abb23847ef2c

---

이 레시피는 감자와 캐비어 두 가지 보유 재료를 모두 활용하여, 건강한 성인 남성이 즐기기에 고급스럽고 간단한 에피타이저입니다. 감자의 포만감과 캐비어의 풍미가 잘 어울리며, 땅콩 성분이 전혀 없어 안심하고 드실 수 있습니다.
2025-06-24 15:54:22.393 [http-nio-8080-exec-10] INFO  a.s.k.p.service.PerplexityService - Starting to parse recipe response
2025-06-24 15:54:22.393 [http-nio-8080-exec-10] DEBUG a.s.k.p.service.PerplexityService - Content to parse: ## 감자 캐비어 미니 샐러드

**필요한 재료**
- 감자 2개 (중간 크기, 약 300g)
- 캐비어 1큰술 (약 15g)
- 마요네즈 2큰술 (30g)
- 생크림 1큰술 (15g)
- 레몬즙 1작은술 (5ml)
- 소금 약간
- 후추 약간
- 쪽파 또는 파슬리 (선택, 다진 것)

**조리 시간**
- 25분

**난이도**
- 하

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 한입 크기로 잘라 찬물에 5분 정도 담궈 전분기를 뺍니다.
2. 냄비에 감자와 물(감자가 잠길 만큼), 소금 1작은술을 넣고 센 불에 15분간 삶아줍니다. 젓가락이 부드럽게 들어갈 정도로 익혀주세요.
3. 삶은 감자는 체에 밭쳐 물기를 완전히 뺀 후 볼에 담고 뜨거울 때 포크로 거칠게 으깨줍니다.
4. 으깬 감자에 마요네즈, 생크림, 레몬즙, 소금, 후추를 넣고 고루 섞어줍니다.
5. 감자 샐러드가 식으면 작은 그릇이나 접시에 동그랗게 담아줍니다.
6. 그 위에 캐비어를 고르게 올리고, 다진 쪽파 또는 파슬리를 살짝 뿌려 마무리합니다.

**요리 팁과 주의사항**
- 감자를 너무 곱게 으깨지 않고 살짝 알갱이가 남도록 하면 식감이 좋아집니다.
- 생크림이 없다면 우유로 대체할 수 있습니다.
- 캐비어는 소량만 올려도 충분히 풍미가 살아납니다.
- 보유재료 중 '유니콘 뿔', '수소폭탄'은 실제 식재료로 사용이 불가능하므로 제외하였습니다.

**완성된 요리의 이미지 URL**
- https://images.unsplash.com/photo-1519864600265-abb23847ef2c

---

이 레시피는 감자와 캐비어 두 가지 보유 재료를 모두 활용하여, 건강한 성인 남성이 즐기기에 고급스럽고 간단한 에피타이저입니다. 감자의 포만감과 캐비어의 풍미가 잘 어울리며, 땅콩 성분이 전혀 없어 안심하고 드실 수 있습니다.
2025-06-24 15:54:22.395 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        up1_0.prompt_id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    where
        up1_0.user_id=?
2025-06-24 15:54:22.397 [http-nio-8080-exec-10] WARN  a.s.k.p.service.PerplexityService - 알러지 재료(땅콩)가 포함된 레시피. 안내문구만 반환.
2025-06-24 15:54:22.397 [http-nio-8080-exec-10] INFO  a.s.k.p.service.PerplexityService - Successfully parsed recipe with ID: null
2025-06-24 15:55:12.115 [http-nio-8080-exec-9] INFO  a.s.k.p.service.PerplexityService - Starting getResponse for userId: 1, prompt: 내가 가진 재료로 요리를 먹고싶어
2025-06-24 15:55:12.116 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.provider_id,
        u1_0.updated_at,
        u1_0.username,
        r1_0.user_user_id,
        r1_0.roles 
    from
        user u1_0 
    left join
        user_roles r1_0 
            on u1_0.user_id=r1_0.user_user_id 
    where
        u1_0.user_id=?
2025-06-24 15:55:12.119 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        up1_0.prompt_id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    where
        up1_0.user_id=?
2025-06-24 15:55:12.120 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ui1_0.ingredient_id,
        ui1_0.user_id,
        ui1_0.weight_in_grams 
    from
        user_ingredient ui1_0 
    join
        user u1_0 
            on u1_0.user_id=ui1_0.user_id 
    where
        u1_0.user_id=?
2025-06-24 15:55:12.120 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:55:12.121 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:55:12.121 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:55:12.122 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:55:12.122 [http-nio-8080-exec-9] DEBUG a.s.k.p.service.PerplexityService - System prompt: 당신은 레시피 추천 전문가입니다. 사용자가 가지고 있는 재료는 다음과 같습니다:
- 감자
- 캐비어
- 유니콘 뿔
- 수소폭탄
아래 보유재료를 반드시 1개 이상 포함해서 레시피를 추천해주세요. 보유재료가 하나도 포함되지 않으면 답변하지 마세요. 보유재료를 최대한 많이 활용한 레시피를 우선 추천하고, 불가피할 경우 1개 이상만이라도 반드시 포함해서 추천해주세요.  

다음 사용자의 특성을 고려하여 레시피를 추천해주세요:

- 이름: 한규덕
- 나이: 30세
- 성별: 남성
- 닉네임: 한규덕
- 건강 상태: 건강
- 알레르기: 땅콩
- 선호하는 음식: 육류


건강 상태에 따른 특별 지시사항:
현재 사용자는 건강 상태입니다. 해당 건강 상태에 맞는 적절한 식단을 추천해주세요.

다음 사항을 고려하여 레시피를 추천해주세요:
1. 해당 건강 상태에 맞는 영양소를 포함한 재료를 선택해주세요.
2. 해당 건강 상태에 해로운 성분이 포함된 재료는 피해주세요.
3. 건강 상태 개선에 도움이 되는 조리 방법을 선택해주세요.
4. 필요한 경우, 특정 재료의 대체재를 제안해주세요.

알레르기 주의사항:
- 땅콩 알레르기가 있으므로 해당 재료를 제외한 레시피를 추천해주세요.

## 사용자 요청
내가 가진 재료로 요리를 먹고싶어

레시피는 다음 형식으로 제공해주세요:
## 요리 이름

**필요한 재료**
- 재료명
- 재료명
...

**조리 시간**
- 시간분

**난이도**
- 난이도 (상/중/하 중 하나)

**상세한 조리 방법**
1. 첫 번째 단계
2. 두 번째 단계
...

**요리 팁과 주의사항**
- 팁 또는 주의사항
- 팁 또는 주의사항

**완성된 요리의 이미지 URL**
- 실제 이미지 URL

주의사항:
- 모든 재료의 양과 단위를 정확히 명시해주세요.
- 조리 방법은 반드시 포함해야 하며, 순서대로 상세히 설명해주세요.
- 요리 팁과 주의사항은 실제 조리 시 도움이 될 수 있는 내용을 포함해주세요.
- 요리 이미지 URL은 실제 존재하는 이미지의 URL을 제공해주세요.
- 난이도는 반드시 '상', '중', '하' 중 하나로만 표기해주세요.
- 각 섹션은 정확히 위의 형식을 따라주세요.
- 조리 방법 섹션을 절대 생략하지 마세요. 반드시 포함해주세요.
- '상세한 조리 방법' 섹션이 누락되면 답변하지 마세요. 반드시 포함하세요.
- 아래 예시처럼 모든 섹션이 빠짐없이 포함된 답변만 작성하세요.
아래는 예시입니다. 반드시 이 형식을 따라 답변하세요.

## 닭가슴살 감자볶음

**필요한 재료**
- 닭가슴살
- 감자
- 양파
- 대파
- 다진 마늘
- 식용유
- 간장
- 소금
- 후추

**조리 시간**
- 20분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 깍둑썰기 해주세요.
2. 닭가슴살은 한 입 크기로 썰어 소금, 후추로 밑간합니다.
3. 팬에 식용유를 두르고 다진 마늘, 대파를 볶아 향을 냅니다.
4. 닭가슴살을 넣고 익을 때까지 볶습니다.
5. 감자, 양파를 넣고 5분간 볶은 뒤 간장으로 간을 맞춥니다.
6. 감자가 익을 때까지 중불에서 볶아 완성합니다.

**요리 팁과 주의사항**
- 감자는 미리 전자레인지에 3분간 돌리면 더 빨리 익힙니다.
- 닭가슴살 대신 돼지고기나 소고기를 사용해도 좋습니다.

**완성된 요리의 이미지 URL**
- https://example.com/sample.jpg


2025-06-24 15:55:12.122 [http-nio-8080-exec-9] INFO  a.s.k.p.service.PerplexityService - Sending request to Perplexity API
2025-06-24 15:55:12.122 [http-nio-8080-exec-9] DEBUG a.s.k.p.service.PerplexityService - Request headers: [Content-Type:"application/json", Authorization:"Bearer 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"]
2025-06-24 15:55:12.122 [http-nio-8080-exec-9] DEBUG a.s.k.p.service.PerplexityService - Request body: {messages=[{role=system, content=당신은 레시피 추천 전문가입니다. 사용자가 가지고 있는 재료는 다음과 같습니다:
- 감자
- 캐비어
- 유니콘 뿔
- 수소폭탄
아래 보유재료를 반드시 1개 이상 포함해서 레시피를 추천해주세요. 보유재료가 하나도 포함되지 않으면 답변하지 마세요. 보유재료를 최대한 많이 활용한 레시피를 우선 추천하고, 불가피할 경우 1개 이상만이라도 반드시 포함해서 추천해주세요.  

다음 사용자의 특성을 고려하여 레시피를 추천해주세요:

- 이름: 한규덕
- 나이: 30세
- 성별: 남성
- 닉네임: 한규덕
- 건강 상태: 건강
- 알레르기: 땅콩
- 선호하는 음식: 육류


건강 상태에 따른 특별 지시사항:
현재 사용자는 건강 상태입니다. 해당 건강 상태에 맞는 적절한 식단을 추천해주세요.

다음 사항을 고려하여 레시피를 추천해주세요:
1. 해당 건강 상태에 맞는 영양소를 포함한 재료를 선택해주세요.
2. 해당 건강 상태에 해로운 성분이 포함된 재료는 피해주세요.
3. 건강 상태 개선에 도움이 되는 조리 방법을 선택해주세요.
4. 필요한 경우, 특정 재료의 대체재를 제안해주세요.

알레르기 주의사항:
- 땅콩 알레르기가 있으므로 해당 재료를 제외한 레시피를 추천해주세요.

## 사용자 요청
내가 가진 재료로 요리를 먹고싶어

레시피는 다음 형식으로 제공해주세요:
## 요리 이름

**필요한 재료**
- 재료명
- 재료명
...

**조리 시간**
- 시간분

**난이도**
- 난이도 (상/중/하 중 하나)

**상세한 조리 방법**
1. 첫 번째 단계
2. 두 번째 단계
...

**요리 팁과 주의사항**
- 팁 또는 주의사항
- 팁 또는 주의사항

**완성된 요리의 이미지 URL**
- 실제 이미지 URL

주의사항:
- 모든 재료의 양과 단위를 정확히 명시해주세요.
- 조리 방법은 반드시 포함해야 하며, 순서대로 상세히 설명해주세요.
- 요리 팁과 주의사항은 실제 조리 시 도움이 될 수 있는 내용을 포함해주세요.
- 요리 이미지 URL은 실제 존재하는 이미지의 URL을 제공해주세요.
- 난이도는 반드시 '상', '중', '하' 중 하나로만 표기해주세요.
- 각 섹션은 정확히 위의 형식을 따라주세요.
- 조리 방법 섹션을 절대 생략하지 마세요. 반드시 포함해주세요.
- '상세한 조리 방법' 섹션이 누락되면 답변하지 마세요. 반드시 포함하세요.
- 아래 예시처럼 모든 섹션이 빠짐없이 포함된 답변만 작성하세요.
아래는 예시입니다. 반드시 이 형식을 따라 답변하세요.

## 닭가슴살 감자볶음

**필요한 재료**
- 닭가슴살
- 감자
- 양파
- 대파
- 다진 마늘
- 식용유
- 간장
- 소금
- 후추

**조리 시간**
- 20분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 깍둑썰기 해주세요.
2. 닭가슴살은 한 입 크기로 썰어 소금, 후추로 밑간합니다.
3. 팬에 식용유를 두르고 다진 마늘, 대파를 볶아 향을 냅니다.
4. 닭가슴살을 넣고 익을 때까지 볶습니다.
5. 감자, 양파를 넣고 5분간 볶은 뒤 간장으로 간을 맞춥니다.
6. 감자가 익을 때까지 중불에서 볶아 완성합니다.

**요리 팁과 주의사항**
- 감자는 미리 전자레인지에 3분간 돌리면 더 빨리 익힙니다.
- 닭가슴살 대신 돼지고기나 소고기를 사용해도 좋습니다.

**완성된 요리의 이미지 URL**
- https://example.com/sample.jpg

}, {role=user, content=내가 가진 재료로 요리를 먹고싶어}], model=sonar-pro}
2025-06-24 15:55:22.250 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-24 15:55:22.252 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-24 15:55:22.254 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-24 15:55:22.694 [http-nio-8080-exec-9] INFO  a.s.k.p.service.PerplexityService - Received response from Perplexity API
2025-06-24 15:55:22.695 [http-nio-8080-exec-9] DEBUG a.s.k.p.service.PerplexityService - Response: {id=b57bcf8d-4828-4149-bc4f-43aa5fc26dd4, model=sonar-pro, created=1750748122, usage={prompt_tokens=1026, completion_tokens=575, total_tokens=1601, search_context_size=low}, citations=[https://m.10000recipe.com/recipe/list.html?q=%EC%9E%AC%EB%A3%8C, https://blog.naver.com/satorru/222655364431, https://www.10000recipe.com, https://blog.naver.com/holic_29/221945743135, https://www.youtube.com/watch?v=ax5fjtpm3Ec], search_results=[{title=재료 - 요리를 즐겁게~ 만개의레시피, url=https://m.10000recipe.com/recipe/list.html?q=%EC%9E%AC%EB%A3%8C, date=null}, {title=[요리] 재료별 레시피 : 네이버 블로그, url=https://blog.naver.com/satorru/222655364431, date=2022-02-23}, {title=요리를 즐겁게~ 만개의레시피, url=https://www.10000recipe.com, date=null}, {title=[요리] 자취생 간단요리 메뉴 / 유학생 요리 메뉴 추천 (난이도 최하부터 ..., url=https://blog.naver.com/holic_29/221945743135, date=2020-05-04}, {title=일주일 반찬 재료별 모음 : 가지 요리 11가지 자취생 요린이 ... - YouTube, url=https://www.youtube.com/watch?v=ax5fjtpm3Ec, date=2021-05-03}], object=chat.completion, choices=[{index=0, finish_reason=stop, message={role=assistant, content=## 감자 캐비어 미니 샐러드

**필요한 재료**
- 감자 2개 (중간 크기, 약 250g)
- 캐비어 30g
- 플레인 요거트 또는 사워크림 2큰술
- 소금 약간
- 후추 약간
- 파슬리 또는 쪽파(장식용, 선택)

**조리 시간**
- 25분

**난이도**
- 하

**상세한 조리 방법**
1. 감자는 깨끗이 씻어 껍질을 벗기고 1cm 두께로 썰어주세요.
2. 끓는 물에 소금을 조금 넣고 감자가 완전히 익을 때까지 12~15분간 삶아줍니다.
3. 삶은 감자를 찬물에 헹궈 넓은 접시에 펼쳐서 식혀주세요.
4. 감자가 식으면 키친타월로 물기를 제거하고, 한 입 크기로 썰어주세요.
5. 작은 숟가락으로 감자 위에 요거트 또는 사워크림을 올리고, 그 위에 캐비어를 한 티스푼씩 얹어주세요.
6. 소금, 후추를 살짝 뿌린 뒤 파슬리나 쪽파로 장식합니다.
7. 접시에 예쁘게 담아 완성합니다.

**요리 팁과 주의사항**
- 감자를 너무 오래 삶으면 부서질 수 있으니 익힘 정도를 확인하세요.
- 요거트 대신 사워크림을 사용하면 더 고급스러운 맛을 낼 수 있습니다.
- 감자 표면이 너무 미끄러우면 키친타월로 물기를 꼭 닦아주세요.

**완성된 요리의 이미지 URL**
- https://cdn.pixabay.com/photo/2017/06/02/18/24/potato-2367454_1280.jpg

> 유니콘 뿔과 수소폭탄은 실제 요리에 사용할 수 없는 판타지/위험 재료이므로 제외하였습니다.  
> 감자와 캐비어는 건강한 한규덕 님의 영양 밸런스에 맞고, 땅콩 알레르기를 유발하지 않는 안전한 조합입니다.  
> 육류를 선호하신다고 하셨으나, 보유한 육류가 없어 대신 풍미가 좋은 캐비어를 넣었습니다.  
> 추가 재료(요거트/사워크림, 파슬리/쪽파)는 없어도 크게 무방합니다.}, delta={role=assistant, content=}}]}
2025-06-24 15:55:22.695 [http-nio-8080-exec-9] INFO  a.s.k.p.service.PerplexityService - Parsing AI response content
2025-06-24 15:55:22.695 [http-nio-8080-exec-9] DEBUG a.s.k.p.service.PerplexityService - Content: ## 감자 캐비어 미니 샐러드

**필요한 재료**
- 감자 2개 (중간 크기, 약 250g)
- 캐비어 30g
- 플레인 요거트 또는 사워크림 2큰술
- 소금 약간
- 후추 약간
- 파슬리 또는 쪽파(장식용, 선택)

**조리 시간**
- 25분

**난이도**
- 하

**상세한 조리 방법**
1. 감자는 깨끗이 씻어 껍질을 벗기고 1cm 두께로 썰어주세요.
2. 끓는 물에 소금을 조금 넣고 감자가 완전히 익을 때까지 12~15분간 삶아줍니다.
3. 삶은 감자를 찬물에 헹궈 넓은 접시에 펼쳐서 식혀주세요.
4. 감자가 식으면 키친타월로 물기를 제거하고, 한 입 크기로 썰어주세요.
5. 작은 숟가락으로 감자 위에 요거트 또는 사워크림을 올리고, 그 위에 캐비어를 한 티스푼씩 얹어주세요.
6. 소금, 후추를 살짝 뿌린 뒤 파슬리나 쪽파로 장식합니다.
7. 접시에 예쁘게 담아 완성합니다.

**요리 팁과 주의사항**
- 감자를 너무 오래 삶으면 부서질 수 있으니 익힘 정도를 확인하세요.
- 요거트 대신 사워크림을 사용하면 더 고급스러운 맛을 낼 수 있습니다.
- 감자 표면이 너무 미끄러우면 키친타월로 물기를 꼭 닦아주세요.

**완성된 요리의 이미지 URL**
- https://cdn.pixabay.com/photo/2017/06/02/18/24/potato-2367454_1280.jpg

> 유니콘 뿔과 수소폭탄은 실제 요리에 사용할 수 없는 판타지/위험 재료이므로 제외하였습니다.  
> 감자와 캐비어는 건강한 한규덕 님의 영양 밸런스에 맞고, 땅콩 알레르기를 유발하지 않는 안전한 조합입니다.  
> 육류를 선호하신다고 하셨으나, 보유한 육류가 없어 대신 풍미가 좋은 캐비어를 넣었습니다.  
> 추가 재료(요거트/사워크림, 파슬리/쪽파)는 없어도 크게 무방합니다.
2025-06-24 15:55:22.695 [http-nio-8080-exec-9] INFO  a.s.k.p.service.PerplexityService - AI 응답 원본:
## 감자 캐비어 미니 샐러드

**필요한 재료**
- 감자 2개 (중간 크기, 약 250g)
- 캐비어 30g
- 플레인 요거트 또는 사워크림 2큰술
- 소금 약간
- 후추 약간
- 파슬리 또는 쪽파(장식용, 선택)

**조리 시간**
- 25분

**난이도**
- 하

**상세한 조리 방법**
1. 감자는 깨끗이 씻어 껍질을 벗기고 1cm 두께로 썰어주세요.
2. 끓는 물에 소금을 조금 넣고 감자가 완전히 익을 때까지 12~15분간 삶아줍니다.
3. 삶은 감자를 찬물에 헹궈 넓은 접시에 펼쳐서 식혀주세요.
4. 감자가 식으면 키친타월로 물기를 제거하고, 한 입 크기로 썰어주세요.
5. 작은 숟가락으로 감자 위에 요거트 또는 사워크림을 올리고, 그 위에 캐비어를 한 티스푼씩 얹어주세요.
6. 소금, 후추를 살짝 뿌린 뒤 파슬리나 쪽파로 장식합니다.
7. 접시에 예쁘게 담아 완성합니다.

**요리 팁과 주의사항**
- 감자를 너무 오래 삶으면 부서질 수 있으니 익힘 정도를 확인하세요.
- 요거트 대신 사워크림을 사용하면 더 고급스러운 맛을 낼 수 있습니다.
- 감자 표면이 너무 미끄러우면 키친타월로 물기를 꼭 닦아주세요.

**완성된 요리의 이미지 URL**
- https://cdn.pixabay.com/photo/2017/06/02/18/24/potato-2367454_1280.jpg

> 유니콘 뿔과 수소폭탄은 실제 요리에 사용할 수 없는 판타지/위험 재료이므로 제외하였습니다.  
> 감자와 캐비어는 건강한 한규덕 님의 영양 밸런스에 맞고, 땅콩 알레르기를 유발하지 않는 안전한 조합입니다.  
> 육류를 선호하신다고 하셨으나, 보유한 육류가 없어 대신 풍미가 좋은 캐비어를 넣었습니다.  
> 추가 재료(요거트/사워크림, 파슬리/쪽파)는 없어도 크게 무방합니다.
2025-06-24 15:55:22.695 [http-nio-8080-exec-9] INFO  a.s.k.p.service.PerplexityService - Starting to parse recipe response
2025-06-24 15:55:22.695 [http-nio-8080-exec-9] DEBUG a.s.k.p.service.PerplexityService - Content to parse: ## 감자 캐비어 미니 샐러드

**필요한 재료**
- 감자 2개 (중간 크기, 약 250g)
- 캐비어 30g
- 플레인 요거트 또는 사워크림 2큰술
- 소금 약간
- 후추 약간
- 파슬리 또는 쪽파(장식용, 선택)

**조리 시간**
- 25분

**난이도**
- 하

**상세한 조리 방법**
1. 감자는 깨끗이 씻어 껍질을 벗기고 1cm 두께로 썰어주세요.
2. 끓는 물에 소금을 조금 넣고 감자가 완전히 익을 때까지 12~15분간 삶아줍니다.
3. 삶은 감자를 찬물에 헹궈 넓은 접시에 펼쳐서 식혀주세요.
4. 감자가 식으면 키친타월로 물기를 제거하고, 한 입 크기로 썰어주세요.
5. 작은 숟가락으로 감자 위에 요거트 또는 사워크림을 올리고, 그 위에 캐비어를 한 티스푼씩 얹어주세요.
6. 소금, 후추를 살짝 뿌린 뒤 파슬리나 쪽파로 장식합니다.
7. 접시에 예쁘게 담아 완성합니다.

**요리 팁과 주의사항**
- 감자를 너무 오래 삶으면 부서질 수 있으니 익힘 정도를 확인하세요.
- 요거트 대신 사워크림을 사용하면 더 고급스러운 맛을 낼 수 있습니다.
- 감자 표면이 너무 미끄러우면 키친타월로 물기를 꼭 닦아주세요.

**완성된 요리의 이미지 URL**
- https://cdn.pixabay.com/photo/2017/06/02/18/24/potato-2367454_1280.jpg

> 유니콘 뿔과 수소폭탄은 실제 요리에 사용할 수 없는 판타지/위험 재료이므로 제외하였습니다.  
> 감자와 캐비어는 건강한 한규덕 님의 영양 밸런스에 맞고, 땅콩 알레르기를 유발하지 않는 안전한 조합입니다.  
> 육류를 선호하신다고 하셨으나, 보유한 육류가 없어 대신 풍미가 좋은 캐비어를 넣었습니다.  
> 추가 재료(요거트/사워크림, 파슬리/쪽파)는 없어도 크게 무방합니다.
2025-06-24 15:55:22.697 [http-nio-8080-exec-9] WARN  a.s.k.p.service.PerplexityService - 알러지 정보 조회 실패: Error creating bean with name 'spring.data.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties': Could not bind properties to 'RedisProperties' : prefix=spring.data.redis, ignoreInvalidFields=false, ignoreUnknownFields=true
2025-06-24 15:55:22.698 [http-nio-8080-exec-9] INFO  a.s.k.p.service.PerplexityService - Final description: 필요한 재료:
- 감자 2개 (중간 크기, 약 250g)
- 캐비어 30g
- 플레인 요거트 또는 사워크림 2큰술
- 소금 약간
- 후추 약간
- 파슬리 또는 쪽파(장식용, 선택)

조리 방법:
1. 감자는 깨끗이 씻어 껍질을 벗기고 1cm 두께로 썰어주세요.
2. 끓는 물에 소금을 조금 넣고 감자가 완전히 익을 때까지 12~15분간 삶아줍니다.
3. 삶은 감자를 찬물에 헹궈 넓은 접시에 펼쳐서 식혀주세요.
4. 감자가 식으면 키친타월로 물기를 제거하고, 한 입 크기로 썰어주세요.
5. 작은 숟가락으로 감자 위에 요거트 또는 사워크림을 올리고, 그 위에 캐비어를 한 티스푼씩 얹어주세요.
6. 소금, 후추를 살짝 뿌린 뒤 파슬리나 쪽파로 장식합니다.
7. 접시에 예쁘게 담아 완성합니다.
2025-06-24 15:55:22.698 [http-nio-8080-exec-9] INFO  a.s.k.p.service.PerplexityService - Saving recipe with title: 감자 캐비어 미니 샐러드
2025-06-24 15:55:22.698 [http-nio-8080-exec-9] ERROR a.s.k.p.service.PerplexityService - Error saving recipe or recipe ingredients
org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.data.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties': Could not bind properties to 'RedisProperties' : prefix=spring.data.redis, ignoreInvalidFields=false, ignoreUnknownFields=true
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:99)
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.postProcessBeforeInitialization(ConfigurationPropertiesBindingPostProcessor.java:79)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.resolvePreparedArguments(ConstructorResolver.java:839)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:158)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1181)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$1.orderedStream(DefaultListableBeanFactory.java:473)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.detectPersistenceExceptionTranslators(PersistenceExceptionTranslationInterceptor.java:167)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)
	at jdk.proxy4/jdk.proxy4.$Proxy153.save(Unknown Source)
	at ac.su.kdt.prompttest.service.PerplexityService.parseRecipeResponse(PerplexityService.java:340)
	at ac.su.kdt.prompttest.service.PerplexityService.getResponse(PerplexityService.java:91)
	at ac.su.kdt.prompttest.service.PerplexityService.getResponseAsString(PerplexityService.java:105)
	at ac.su.kdt.prompttest.controller.TestController.getAIContent(TestController.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at ac.su.kdt.prompttest.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@22471120 has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1215)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1236)
	at org.springframework.boot.context.properties.BoundConfigurationProperties.get(BoundConfigurationProperties.java:78)
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.getHandler(ConfigurationPropertiesBinder.java:132)
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.getBindHandler(ConfigurationPropertiesBinder.java:113)
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.bind(ConfigurationPropertiesBinder.java:93)
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:96)
	... 147 common frames omitted
2025-06-24 15:55:22.699 [http-nio-8080-exec-9] ERROR a.s.k.p.service.PerplexityService - Error calling Perplexity API
java.lang.RuntimeException: Failed to save recipe: Error creating bean with name 'spring.data.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties': Could not bind properties to 'RedisProperties' : prefix=spring.data.redis, ignoreInvalidFields=false, ignoreUnknownFields=true
	at ac.su.kdt.prompttest.service.PerplexityService.parseRecipeResponse(PerplexityService.java:346)
	at ac.su.kdt.prompttest.service.PerplexityService.getResponse(PerplexityService.java:91)
	at ac.su.kdt.prompttest.service.PerplexityService.getResponseAsString(PerplexityService.java:105)
	at ac.su.kdt.prompttest.controller.TestController.getAIContent(TestController.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at ac.su.kdt.prompttest.security.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:51)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.data.redis-org.springframework.boot.autoconfigure.data.redis.RedisProperties': Could not bind properties to 'RedisProperties' : prefix=spring.data.redis, ignoreInvalidFields=false, ignoreUnknownFields=true
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:99)
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.postProcessBeforeInitialization(ConfigurationPropertiesBindingPostProcessor.java:79)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.resolvePreparedArguments(ConstructorResolver.java:839)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:158)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1181)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$1.orderedStream(DefaultListableBeanFactory.java:473)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.detectPersistenceExceptionTranslators(PersistenceExceptionTranslationInterceptor.java:167)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:164)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)
	at jdk.proxy4/jdk.proxy4.$Proxy153.save(Unknown Source)
	at ac.su.kdt.prompttest.service.PerplexityService.parseRecipeResponse(PerplexityService.java:340)
	... 104 common frames omitted
Caused by: java.lang.IllegalStateException: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@22471120 has been closed already
	at org.springframework.context.support.AbstractApplicationContext.assertBeanFactoryActive(AbstractApplicationContext.java:1215)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1236)
	at org.springframework.boot.context.properties.BoundConfigurationProperties.get(BoundConfigurationProperties.java:78)
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.getHandler(ConfigurationPropertiesBinder.java:132)
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.getBindHandler(ConfigurationPropertiesBinder.java:113)
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.bind(ConfigurationPropertiesBinder.java:93)
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:96)
	... 147 common frames omitted
2025-06-24 15:55:25.907 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-06-24 15:55:25.921 [restartedMain] INFO  a.s.k.p.PromptTestApplication - Starting PromptTestApplication using Java 17.0.14 with PID 13274 (/Users/gyudeok0202/Workspace/BE_Repository/build/classes/java/main started by gyudeok0202 in /Users/gyudeok0202/Workspace/BE_Repository)
2025-06-24 15:55:25.922 [restartedMain] DEBUG a.s.k.p.PromptTestApplication - Running with Spring Boot v3.2.3, Spring v6.1.4
2025-06-24 15:55:25.922 [restartedMain] INFO  a.s.k.p.PromptTestApplication - The following 1 profile is active: "secret"
2025-06-24 15:55:25.937 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-24 15:55:25.937 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-24 15:55:26.205 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-24 15:55:26.206 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-24 15:55:26.218 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.ChatHistoryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-24 15:55:26.218 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.IngredientRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-24 15:55:26.218 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.RecipeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-24 15:55:26.219 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.UserIngredientRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-24 15:55:26.219 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.UserPromptRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-24 15:55:26.219 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.UserRecipeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-24 15:55:26.220 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-24 15:55:26.220 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 JDBC repository interfaces.
2025-06-24 15:55:26.223 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-24 15:55:26.224 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-24 15:55:26.267 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 41 ms. Found 7 JPA repository interfaces.
2025-06-24 15:55:26.273 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-24 15:55:26.273 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-24 15:55:26.278 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.ChatHistoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 15:55:26.278 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.IngredientRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 15:55:26.278 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.RecipeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 15:55:26.278 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.UserIngredientRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 15:55:26.278 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.UserPromptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 15:55:26.278 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.UserRecipeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 15:55:26.278 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-24 15:55:26.278 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2025-06-24 15:55:26.500 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-24 15:55:26.504 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-06-24 15:55:26.505 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-24 15:55:26.505 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
2025-06-24 15:55:26.521 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-24 15:55:26.522 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 584 ms
2025-06-24 15:55:26.534 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-24 15:55:26.590 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@59d7a850
2025-06-24 15:55:26.591 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-24 15:55:26.595 [restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3306/recipedb?useSSL=false&serverTimezone=UTC&characterEncoding=UTF-8&allowPublicKeyRetrieval=true'
2025-06-24 15:55:26.629 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-24 15:55:26.647 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-06-24 15:55:26.660 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-24 15:55:26.732 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-24 15:55:26.754 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-24 15:55:26.755 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-24 15:55:27.132 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-24 15:55:27.157 [restartedMain] DEBUG org.hibernate.SQL - 
    create table recipe (
        recipe_id integer not null auto_increment,
        category varchar(50),
        cooking_time integer,
        description TEXT,
        difficulty varchar(5),
        image tinyblob,
        title varchar(15) not null,
        primary key (recipe_id)
    ) engine=InnoDB
2025-06-24 15:55:27.161 [restartedMain] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    create table recipe (
        recipe_id integer not null auto_increment,
        category varchar(50),
        cooking_time integer,
        description TEXT,
        difficulty varchar(5),
        image tinyblob,
        title varchar(15) not null,
        primary key (recipe_id)
    ) engine=InnoDB" via JDBC [Table 'recipe' already exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table recipe (
        recipe_id integer not null auto_increment,
        category varchar(50),
        cooking_time integer,
        description TEXT,
        difficulty varchar(5),
        image tinyblob,
        title varchar(15) not null,
        primary key (recipe_id)
    ) engine=InnoDB" via JDBC [Table 'recipe' already exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.createTable(AbstractSchemaMigrator.java:315)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:80)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:685)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1685)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1434)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4866)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:437)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:126)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:105)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:499)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:618)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at ac.su.kdt.prompttest.PromptTestApplication.main(PromptTestApplication.java:12)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.sql.SQLSyntaxErrorException: Table 'recipe' already exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 128 common frames omitted
2025-06-24 15:55:27.163 [restartedMain] DEBUG org.hibernate.SQL - 
    create table user_recipe (
        recipe_id integer not null,
        user_id integer not null,
        primary key (recipe_id, user_id)
    ) engine=InnoDB
2025-06-24 15:55:27.163 [restartedMain] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    create table user_recipe (
        recipe_id integer not null,
        user_id integer not null,
        primary key (recipe_id, user_id)
    ) engine=InnoDB" via JDBC [Table 'user_recipe' already exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table user_recipe (
        recipe_id integer not null,
        user_id integer not null,
        primary key (recipe_id, user_id)
    ) engine=InnoDB" via JDBC [Table 'user_recipe' already exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.createTable(AbstractSchemaMigrator.java:315)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:80)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:685)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:509)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:365)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:135)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1685)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1434)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:204)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.getOrderedBeansOfType(ServletContextInitializerBeans.java:210)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:173)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAsRegistrationBean(ServletContextInitializerBeans.java:168)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.addAdaptableBeans(ServletContextInitializerBeans.java:153)
	at org.springframework.boot.web.servlet.ServletContextInitializerBeans.<init>(ServletContextInitializerBeans.java:86)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.getServletContextInitializerBeans(ServletWebServerApplicationContext.java:266)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.selfInitialize(ServletWebServerApplicationContext.java:240)
	at org.springframework.boot.web.embedded.tomcat.TomcatStarter.onStartup(TomcatStarter.java:52)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:4866)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:845)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1332)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1322)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:145)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:866)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:240)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:433)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:921)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:171)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:437)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize(TomcatWebServer.java:126)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.<init>(TomcatWebServer.java:105)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getTomcatWebServer(TomcatServletWebServerFactory.java:499)
	at org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory.getWebServer(TomcatServletWebServerFactory.java:218)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.createWebServer(ServletWebServerApplicationContext.java:188)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.onRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:618)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at ac.su.kdt.prompttest.PromptTestApplication.main(PromptTestApplication.java:12)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.sql.SQLSyntaxErrorException: Table 'user_recipe' already exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 128 common frames omitted
2025-06-24 15:55:27.191 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-24 15:55:27.326 [restartedMain] DEBUG a.s.k.p.s.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-06-24 15:55:27.388 [restartedMain] INFO  a.s.k.p.service.PerplexityService - API URL: https://api.perplexity.ai/chat/completions
2025-06-24 15:55:27.388 [restartedMain] INFO  a.s.k.p.service.PerplexityService - API Key length: 53
2025-06-24 15:55:27.458 [restartedMain] ERROR i.n.r.d.DnsServerAddressStreamProviders - Unable to load io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'. Use DEBUG level to see the full stack: java.lang.UnsatisfiedLinkError: failed to load the required native library
2025-06-24 15:55:27.550 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-24 15:55:27.598 [restartedMain] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-24 15:55:27.648 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@5b23ae17, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@9b6fc07, org.springframework.security.web.context.SecurityContextHolderFilter@4fc23832, org.springframework.security.web.header.HeaderWriterFilter@37e0857b, org.springframework.web.filter.CorsFilter@59920076, org.springframework.security.web.authentication.logout.LogoutFilter@5489ffca, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6797f25a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@24bbcdb9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@31394edb, org.springframework.security.web.session.SessionManagementFilter@28404ed2, org.springframework.security.web.access.ExceptionTranslationFilter@46443268, org.springframework.security.web.access.intercept.AuthorizationFilter@70344e6a]
2025-06-24 15:55:27.704 [restartedMain] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2025-06-24 15:55:27.787 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-06-24 15:55:27.795 [restartedMain] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-06-24 15:55:27.798 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-06-24 15:55:27.803 [restartedMain] INFO  a.s.k.p.PromptTestApplication - Started PromptTestApplication in 1.988 seconds (process running for 2.197)
2025-06-24 15:55:30.992 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-24 15:55:30.992 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-24 15:55:30.993 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-06-24 15:55:31.032 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Starting getResponse for userId: 1, prompt: 내가 가진 재료로 요리를 먹고싶어
2025-06-24 15:55:31.048 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.user_id,
        u1_0.created_at,
        u1_0.email,
        u1_0.password,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.provider_id,
        u1_0.updated_at,
        u1_0.username,
        r1_0.user_user_id,
        r1_0.roles 
    from
        user u1_0 
    left join
        user_roles r1_0 
            on u1_0.user_id=r1_0.user_user_id 
    where
        u1_0.user_id=?
2025-06-24 15:55:31.084 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        up1_0.prompt_id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    where
        up1_0.user_id=?
2025-06-24 15:55:31.087 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ui1_0.ingredient_id,
        ui1_0.user_id,
        ui1_0.weight_in_grams 
    from
        user_ingredient ui1_0 
    join
        user u1_0 
            on u1_0.user_id=ui1_0.user_id 
    where
        u1_0.user_id=?
2025-06-24 15:55:31.089 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:55:31.090 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:55:31.091 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:55:31.091 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-24 15:55:31.092 [http-nio-8080-exec-1] DEBUG a.s.k.p.service.PerplexityService - System prompt: 당신은 레시피 추천 전문가입니다. 사용자가 가지고 있는 재료는 다음과 같습니다:
- 감자
- 캐비어
- 유니콘 뿔
- 수소폭탄
아래 보유재료를 반드시 1개 이상 포함해서 레시피를 추천해주세요. 보유재료가 하나도 포함되지 않으면 답변하지 마세요. 보유재료를 최대한 많이 활용한 레시피를 우선 추천하고, 불가피할 경우 1개 이상만이라도 반드시 포함해서 추천해주세요.  

다음 사용자의 특성을 고려하여 레시피를 추천해주세요:

- 이름: 한규덕
- 나이: 30세
- 성별: 남성
- 닉네임: 한규덕
- 건강 상태: 건강
- 알레르기: 땅콩
- 선호하는 음식: 육류


건강 상태에 따른 특별 지시사항:
현재 사용자는 건강 상태입니다. 해당 건강 상태에 맞는 적절한 식단을 추천해주세요.

다음 사항을 고려하여 레시피를 추천해주세요:
1. 해당 건강 상태에 맞는 영양소를 포함한 재료를 선택해주세요.
2. 해당 건강 상태에 해로운 성분이 포함된 재료는 피해주세요.
3. 건강 상태 개선에 도움이 되는 조리 방법을 선택해주세요.
4. 필요한 경우, 특정 재료의 대체재를 제안해주세요.

알레르기 주의사항:
- 땅콩 알레르기가 있으므로 해당 재료를 제외한 레시피를 추천해주세요.

## 사용자 요청
내가 가진 재료로 요리를 먹고싶어

레시피는 다음 형식으로 제공해주세요:
## 요리 이름

**필요한 재료**
- 재료명
- 재료명
...

**조리 시간**
- 시간분

**난이도**
- 난이도 (상/중/하 중 하나)

**상세한 조리 방법**
1. 첫 번째 단계
2. 두 번째 단계
...

**요리 팁과 주의사항**
- 팁 또는 주의사항
- 팁 또는 주의사항

**완성된 요리의 이미지 URL**
- 실제 이미지 URL

주의사항:
- 모든 재료의 양과 단위를 정확히 명시해주세요.
- 조리 방법은 반드시 포함해야 하며, 순서대로 상세히 설명해주세요.
- 요리 팁과 주의사항은 실제 조리 시 도움이 될 수 있는 내용을 포함해주세요.
- 요리 이미지 URL은 실제 존재하는 이미지의 URL을 제공해주세요.
- 난이도는 반드시 '상', '중', '하' 중 하나로만 표기해주세요.
- 각 섹션은 정확히 위의 형식을 따라주세요.
- 조리 방법 섹션을 절대 생략하지 마세요. 반드시 포함해주세요.
- '상세한 조리 방법' 섹션이 누락되면 답변하지 마세요. 반드시 포함하세요.
- 아래 예시처럼 모든 섹션이 빠짐없이 포함된 답변만 작성하세요.
아래는 예시입니다. 반드시 이 형식을 따라 답변하세요.

## 닭가슴살 감자볶음

**필요한 재료**
- 닭가슴살
- 감자
- 양파
- 대파
- 다진 마늘
- 식용유
- 간장
- 소금
- 후추

**조리 시간**
- 20분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 깍둑썰기 해주세요.
2. 닭가슴살은 한 입 크기로 썰어 소금, 후추로 밑간합니다.
3. 팬에 식용유를 두르고 다진 마늘, 대파를 볶아 향을 냅니다.
4. 닭가슴살을 넣고 익을 때까지 볶습니다.
5. 감자, 양파를 넣고 5분간 볶은 뒤 간장으로 간을 맞춥니다.
6. 감자가 익을 때까지 중불에서 볶아 완성합니다.

**요리 팁과 주의사항**
- 감자는 미리 전자레인지에 3분간 돌리면 더 빨리 익힙니다.
- 닭가슴살 대신 돼지고기나 소고기를 사용해도 좋습니다.

**완성된 요리의 이미지 URL**
- https://example.com/sample.jpg


2025-06-24 15:55:31.092 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Sending request to Perplexity API
2025-06-24 15:55:31.092 [http-nio-8080-exec-1] DEBUG a.s.k.p.service.PerplexityService - Request headers: [Content-Type:"application/json", Authorization:"Bearer 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"]
2025-06-24 15:55:31.092 [http-nio-8080-exec-1] DEBUG a.s.k.p.service.PerplexityService - Request body: {messages=[{role=system, content=당신은 레시피 추천 전문가입니다. 사용자가 가지고 있는 재료는 다음과 같습니다:
- 감자
- 캐비어
- 유니콘 뿔
- 수소폭탄
아래 보유재료를 반드시 1개 이상 포함해서 레시피를 추천해주세요. 보유재료가 하나도 포함되지 않으면 답변하지 마세요. 보유재료를 최대한 많이 활용한 레시피를 우선 추천하고, 불가피할 경우 1개 이상만이라도 반드시 포함해서 추천해주세요.  

다음 사용자의 특성을 고려하여 레시피를 추천해주세요:

- 이름: 한규덕
- 나이: 30세
- 성별: 남성
- 닉네임: 한규덕
- 건강 상태: 건강
- 알레르기: 땅콩
- 선호하는 음식: 육류


건강 상태에 따른 특별 지시사항:
현재 사용자는 건강 상태입니다. 해당 건강 상태에 맞는 적절한 식단을 추천해주세요.

다음 사항을 고려하여 레시피를 추천해주세요:
1. 해당 건강 상태에 맞는 영양소를 포함한 재료를 선택해주세요.
2. 해당 건강 상태에 해로운 성분이 포함된 재료는 피해주세요.
3. 건강 상태 개선에 도움이 되는 조리 방법을 선택해주세요.
4. 필요한 경우, 특정 재료의 대체재를 제안해주세요.

알레르기 주의사항:
- 땅콩 알레르기가 있으므로 해당 재료를 제외한 레시피를 추천해주세요.

## 사용자 요청
내가 가진 재료로 요리를 먹고싶어

레시피는 다음 형식으로 제공해주세요:
## 요리 이름

**필요한 재료**
- 재료명
- 재료명
...

**조리 시간**
- 시간분

**난이도**
- 난이도 (상/중/하 중 하나)

**상세한 조리 방법**
1. 첫 번째 단계
2. 두 번째 단계
...

**요리 팁과 주의사항**
- 팁 또는 주의사항
- 팁 또는 주의사항

**완성된 요리의 이미지 URL**
- 실제 이미지 URL

주의사항:
- 모든 재료의 양과 단위를 정확히 명시해주세요.
- 조리 방법은 반드시 포함해야 하며, 순서대로 상세히 설명해주세요.
- 요리 팁과 주의사항은 실제 조리 시 도움이 될 수 있는 내용을 포함해주세요.
- 요리 이미지 URL은 실제 존재하는 이미지의 URL을 제공해주세요.
- 난이도는 반드시 '상', '중', '하' 중 하나로만 표기해주세요.
- 각 섹션은 정확히 위의 형식을 따라주세요.
- 조리 방법 섹션을 절대 생략하지 마세요. 반드시 포함해주세요.
- '상세한 조리 방법' 섹션이 누락되면 답변하지 마세요. 반드시 포함하세요.
- 아래 예시처럼 모든 섹션이 빠짐없이 포함된 답변만 작성하세요.
아래는 예시입니다. 반드시 이 형식을 따라 답변하세요.

## 닭가슴살 감자볶음

**필요한 재료**
- 닭가슴살
- 감자
- 양파
- 대파
- 다진 마늘
- 식용유
- 간장
- 소금
- 후추

**조리 시간**
- 20분

**난이도**
- 중

**상세한 조리 방법**
1. 감자는 껍질을 벗기고 깍둑썰기 해주세요.
2. 닭가슴살은 한 입 크기로 썰어 소금, 후추로 밑간합니다.
3. 팬에 식용유를 두르고 다진 마늘, 대파를 볶아 향을 냅니다.
4. 닭가슴살을 넣고 익을 때까지 볶습니다.
5. 감자, 양파를 넣고 5분간 볶은 뒤 간장으로 간을 맞춥니다.
6. 감자가 익을 때까지 중불에서 볶아 완성합니다.

**요리 팁과 주의사항**
- 감자는 미리 전자레인지에 3분간 돌리면 더 빨리 익힙니다.
- 닭가슴살 대신 돼지고기나 소고기를 사용해도 좋습니다.

**완성된 요리의 이미지 URL**
- https://example.com/sample.jpg

}, {role=user, content=내가 가진 재료로 요리를 먹고싶어}], model=sonar-pro}
2025-06-24 15:55:37.697 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Received response from Perplexity API
2025-06-24 15:55:37.697 [http-nio-8080-exec-1] DEBUG a.s.k.p.service.PerplexityService - Response: {id=da237913-b24c-45dd-9304-b71ba80525a5, model=sonar-pro, created=1750748137, usage={prompt_tokens=1026, completion_tokens=489, total_tokens=1515, search_context_size=low}, citations=[https://m.10000recipe.com/recipe/list.html?q=%EC%9E%AC%EB%A3%8C, https://blog.naver.com/satorru/222655364431, https://www.10000recipe.com, https://blog.naver.com/holic_29/221945743135, https://www.youtube.com/watch?v=ax5fjtpm3Ec], search_results=[{title=재료 - 요리를 즐겁게~ 만개의레시피, url=https://m.10000recipe.com/recipe/list.html?q=%EC%9E%AC%EB%A3%8C, date=null}, {title=[요리] 재료별 레시피 : 네이버 블로그, url=https://blog.naver.com/satorru/222655364431, date=2022-02-23}, {title=요리를 즐겁게~ 만개의레시피, url=https://www.10000recipe.com, date=null}, {title=[요리] 자취생 간단요리 메뉴 / 유학생 요리 메뉴 추천 (난이도 최하부터 ..., url=https://blog.naver.com/holic_29/221945743135, date=2020-05-04}, {title=일주일 반찬 재료별 모음 : 가지 요리 11가지 자취생 요린이 ... - YouTube, url=https://www.youtube.com/watch?v=ax5fjtpm3Ec, date=2021-05-03}], object=chat.completion, choices=[{index=0, finish_reason=stop, message={role=assistant, content=## 감자와 캐비어 미니 감자전

**필요한 재료**
- 감자 2개 (중간 크기, 약 300g)
- 소금 1/3작은술
- 후추 약간
- 식용유 2큰술
- 캐비어 30g
- 사워크림 50g (선택, 대체 가능)
- 쪽파 또는 파슬리 약간 (선택, 다진 것)

**조리 시간**
- 25분

**난이도**
- 하

**상세한 조리 방법**
1. 감자의 껍질을 벗기고 깨끗이 씻은 뒤, 강판에 곱게 갈아주세요.
2. 간 감자를 체에 담고 물기를 꼭 짭니다. 감자의 수분이 많이 남으면 바삭하게 구워지지 않습니다.
3. 볼에 감자를 담고 소금, 후추로 간합니다.
4. 중불로 달군 팬에 식용유를 두르고, 한 숟가락씩 떠서 동그랗게 펼친 뒤 약간 납작하게 눌러주세요.
5. 노릇하게 앞뒤로 뒤집어가며 각각 3~4분씩, 총 8분가량 구워 감자전을 만듭니다.
6. 접시에 감자전을 담아 약간 식힌 뒤, 사워크림을 한 숟가락 올리고 그 위에 캐비어를 얹습니다.
7. 다진 쪽파나 파슬리를 조금 뿌려 마무리합니다.

**요리 팁과 주의사항**
- 감자 물기를 최대한 꼭 짜야 바삭한 식감이 납니다.
- 사워크림이 없다면 플레인 요거트를 사용해도 좋습니다.
- 캐비어는 조리 마지막 단계에 얹어야 풍미가 살아 있습니다.
- 팬에 기름을 두를 때 너무 많이 넣으면 느끼할 수 있으니 적당량만 사용하세요.

**완성된 요리의 이미지 URL**
- https://img.freepik.com/free-photo/potato-latkes-caviar_114579-60310.jpg}, delta={role=assistant, content=}}]}
2025-06-24 15:55:37.698 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Parsing AI response content
2025-06-24 15:55:37.698 [http-nio-8080-exec-1] DEBUG a.s.k.p.service.PerplexityService - Content: ## 감자와 캐비어 미니 감자전

**필요한 재료**
- 감자 2개 (중간 크기, 약 300g)
- 소금 1/3작은술
- 후추 약간
- 식용유 2큰술
- 캐비어 30g
- 사워크림 50g (선택, 대체 가능)
- 쪽파 또는 파슬리 약간 (선택, 다진 것)

**조리 시간**
- 25분

**난이도**
- 하

**상세한 조리 방법**
1. 감자의 껍질을 벗기고 깨끗이 씻은 뒤, 강판에 곱게 갈아주세요.
2. 간 감자를 체에 담고 물기를 꼭 짭니다. 감자의 수분이 많이 남으면 바삭하게 구워지지 않습니다.
3. 볼에 감자를 담고 소금, 후추로 간합니다.
4. 중불로 달군 팬에 식용유를 두르고, 한 숟가락씩 떠서 동그랗게 펼친 뒤 약간 납작하게 눌러주세요.
5. 노릇하게 앞뒤로 뒤집어가며 각각 3~4분씩, 총 8분가량 구워 감자전을 만듭니다.
6. 접시에 감자전을 담아 약간 식힌 뒤, 사워크림을 한 숟가락 올리고 그 위에 캐비어를 얹습니다.
7. 다진 쪽파나 파슬리를 조금 뿌려 마무리합니다.

**요리 팁과 주의사항**
- 감자 물기를 최대한 꼭 짜야 바삭한 식감이 납니다.
- 사워크림이 없다면 플레인 요거트를 사용해도 좋습니다.
- 캐비어는 조리 마지막 단계에 얹어야 풍미가 살아 있습니다.
- 팬에 기름을 두를 때 너무 많이 넣으면 느끼할 수 있으니 적당량만 사용하세요.

**완성된 요리의 이미지 URL**
- https://img.freepik.com/free-photo/potato-latkes-caviar_114579-60310.jpg
2025-06-24 15:55:37.698 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - AI 응답 원본:
## 감자와 캐비어 미니 감자전

**필요한 재료**
- 감자 2개 (중간 크기, 약 300g)
- 소금 1/3작은술
- 후추 약간
- 식용유 2큰술
- 캐비어 30g
- 사워크림 50g (선택, 대체 가능)
- 쪽파 또는 파슬리 약간 (선택, 다진 것)

**조리 시간**
- 25분

**난이도**
- 하

**상세한 조리 방법**
1. 감자의 껍질을 벗기고 깨끗이 씻은 뒤, 강판에 곱게 갈아주세요.
2. 간 감자를 체에 담고 물기를 꼭 짭니다. 감자의 수분이 많이 남으면 바삭하게 구워지지 않습니다.
3. 볼에 감자를 담고 소금, 후추로 간합니다.
4. 중불로 달군 팬에 식용유를 두르고, 한 숟가락씩 떠서 동그랗게 펼친 뒤 약간 납작하게 눌러주세요.
5. 노릇하게 앞뒤로 뒤집어가며 각각 3~4분씩, 총 8분가량 구워 감자전을 만듭니다.
6. 접시에 감자전을 담아 약간 식힌 뒤, 사워크림을 한 숟가락 올리고 그 위에 캐비어를 얹습니다.
7. 다진 쪽파나 파슬리를 조금 뿌려 마무리합니다.

**요리 팁과 주의사항**
- 감자 물기를 최대한 꼭 짜야 바삭한 식감이 납니다.
- 사워크림이 없다면 플레인 요거트를 사용해도 좋습니다.
- 캐비어는 조리 마지막 단계에 얹어야 풍미가 살아 있습니다.
- 팬에 기름을 두를 때 너무 많이 넣으면 느끼할 수 있으니 적당량만 사용하세요.

**완성된 요리의 이미지 URL**
- https://img.freepik.com/free-photo/potato-latkes-caviar_114579-60310.jpg
2025-06-24 15:55:37.698 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Starting to parse recipe response
2025-06-24 15:55:37.698 [http-nio-8080-exec-1] DEBUG a.s.k.p.service.PerplexityService - Content to parse: ## 감자와 캐비어 미니 감자전

**필요한 재료**
- 감자 2개 (중간 크기, 약 300g)
- 소금 1/3작은술
- 후추 약간
- 식용유 2큰술
- 캐비어 30g
- 사워크림 50g (선택, 대체 가능)
- 쪽파 또는 파슬리 약간 (선택, 다진 것)

**조리 시간**
- 25분

**난이도**
- 하

**상세한 조리 방법**
1. 감자의 껍질을 벗기고 깨끗이 씻은 뒤, 강판에 곱게 갈아주세요.
2. 간 감자를 체에 담고 물기를 꼭 짭니다. 감자의 수분이 많이 남으면 바삭하게 구워지지 않습니다.
3. 볼에 감자를 담고 소금, 후추로 간합니다.
4. 중불로 달군 팬에 식용유를 두르고, 한 숟가락씩 떠서 동그랗게 펼친 뒤 약간 납작하게 눌러주세요.
5. 노릇하게 앞뒤로 뒤집어가며 각각 3~4분씩, 총 8분가량 구워 감자전을 만듭니다.
6. 접시에 감자전을 담아 약간 식힌 뒤, 사워크림을 한 숟가락 올리고 그 위에 캐비어를 얹습니다.
7. 다진 쪽파나 파슬리를 조금 뿌려 마무리합니다.

**요리 팁과 주의사항**
- 감자 물기를 최대한 꼭 짜야 바삭한 식감이 납니다.
- 사워크림이 없다면 플레인 요거트를 사용해도 좋습니다.
- 캐비어는 조리 마지막 단계에 얹어야 풍미가 살아 있습니다.
- 팬에 기름을 두를 때 너무 많이 넣으면 느끼할 수 있으니 적당량만 사용하세요.

**완성된 요리의 이미지 URL**
- https://img.freepik.com/free-photo/potato-latkes-caviar_114579-60310.jpg
2025-06-24 15:55:37.703 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        up1_0.prompt_id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    where
        up1_0.user_id=?
2025-06-24 15:55:37.704 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Found ingredients text: - 감자 2개 (중간 크기, 약 300g)
- 소금 1/3작은술
- 후추 약간
- 식용유 2큰술
- 캐비어 30g
- 사워크림 50g (선택, 대체 가능)
- 쪽파 또는 파슬리 약간 (선택, 다진 것)
2025-06-24 15:55:37.705 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Number of ingredient lines: 7
2025-06-24 15:55:37.705 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Processing ingredient line: 감자 2개 (중간 크기, 약 300g)
2025-06-24 15:55:37.705 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Pattern 2 matched - Name: 감자, Amount: 2개
2025-06-24 15:55:37.705 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Found valid ingredient - Name: 감자, Amount: 2개
2025-06-24 15:55:37.706 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.name=?
2025-06-24 15:55:37.707 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Found existing ingredient with ID: 1
2025-06-24 15:55:37.708 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Processing ingredient line: 소금 1/3작은술
2025-06-24 15:55:37.708 [http-nio-8080-exec-1] WARN  a.s.k.p.service.PerplexityService - Failed to parse ingredient line: 소금 1/3작은술
2025-06-24 15:55:37.708 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Processing ingredient line: 후추 약간
2025-06-24 15:55:37.708 [http-nio-8080-exec-1] WARN  a.s.k.p.service.PerplexityService - Failed to parse ingredient line: 후추 약간
2025-06-24 15:55:37.708 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Processing ingredient line: 식용유 2큰술
2025-06-24 15:55:37.708 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Pattern 2 matched - Name: 식용유, Amount: 2큰술
2025-06-24 15:55:37.708 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Found valid ingredient - Name: 식용유, Amount: 2큰술
2025-06-24 15:55:37.709 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.name=?
2025-06-24 15:55:37.709 [http-nio-8080-exec-1] WARN  a.s.k.p.service.PerplexityService - Ingredient '식용유' not found in DB. Skipping.
2025-06-24 15:55:37.710 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Processing ingredient line: 캐비어 30g
2025-06-24 15:55:37.710 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Pattern 2 matched - Name: 캐비어, Amount: 30g
2025-06-24 15:55:37.710 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Found valid ingredient - Name: 캐비어, Amount: 30g
2025-06-24 15:55:37.710 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.name=?
2025-06-24 15:55:37.711 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Found existing ingredient with ID: 2
2025-06-24 15:55:37.711 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Processing ingredient line: 사워크림 50g (선택, 대체 가능)
2025-06-24 15:55:37.711 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Pattern 2 matched - Name: 사워크림, Amount: 50g
2025-06-24 15:55:37.711 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Found valid ingredient - Name: 사워크림, Amount: 50g
2025-06-24 15:55:37.712 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.creator_user_id,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.name=?
2025-06-24 15:55:37.712 [http-nio-8080-exec-1] WARN  a.s.k.p.service.PerplexityService - Ingredient '사워크림' not found in DB. Skipping.
2025-06-24 15:55:37.712 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Processing ingredient line: 쪽파 또는 파슬리 약간 (선택, 다진 것)
2025-06-24 15:55:37.712 [http-nio-8080-exec-1] WARN  a.s.k.p.service.PerplexityService - Failed to parse ingredient line: 쪽파 또는 파슬리 약간 (선택, 다진 것)
2025-06-24 15:55:37.713 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Final description: 필요한 재료와 양:
- 감자 2개 (중간 크기, 약 300g)
- 소금 1/3작은술
- 후추 약간
- 식용유 2큰술
- 캐비어 30g
- 사워크림 50g (선택, 대체 가능)
- 쪽파 또는 파슬리 약간 (선택, 다진 것)

조리 방법:
1. 감자의 껍질을 벗기고 깨끗이 씻은 뒤, 강판에 곱게 갈아주세요.
2. 간 감자를 체에 담고 물기를 꼭 짭니다. 감자의 수분이 많이 남으면 바삭하게 구워지지 않습니다.
3. 볼에 감자를 담고 소금, 후추로 간합니다.
4. 중불로 달군 팬에 식용유를 두르고, 한 숟가락씩 떠서 동그랗게 펼친 뒤 약간 납작하게 눌러주세요.
5. 노릇하게 앞뒤로 뒤집어가며 각각 3~4분씩, 총 8분가량 구워 감자전을 만듭니다.
6. 접시에 감자전을 담아 약간 식힌 뒤, 사워크림을 한 숟가락 올리고 그 위에 캐비어를 얹습니다.
7. 다진 쪽파나 파슬리를 조금 뿌려 마무리합니다.
2025-06-24 15:55:37.713 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Saving recipe with title: 감자와 캐비어 미니 감자전
2025-06-24 15:55:37.728 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* insert for
        ac.su.kdt.prompttest.entity.Recipe */insert 
    into
        recipe (category, cooking_time, description, difficulty, image, title) 
    values
        (?, ?, ?, ?, ?, ?)
2025-06-24 15:55:37.736 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Saved recipe with ID: 15
2025-06-24 15:55:37.736 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Successfully parsed recipe with ID: 15
