
> Task :compileJava
Note: /Users/gyudeok0202/Workspace/BE_Repository/src/main/java/ac/su/kdt/prompttest/service/PerplexityService.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.

> Task :processResources UP-TO-DATE
> Task :classes
> Task :resolveMainClassName UP-TO-DATE

> Task :bootRun

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.3)

2025-06-21 15:28:25 [main] INFO  a.s.k.p.PromptTestApplication - Starting PromptTestApplication using Java 17.0.14 with PID 29723 (/Users/gyudeok0202/Workspace/BE_Repository/build/classes/java/main started by gyudeok0202 in /Users/gyudeok0202/Workspace/BE_Repository)
2025-06-21 15:28:25 [main] DEBUG a.s.k.p.PromptTestApplication - Running with Spring Boot v3.2.3, Spring v6.1.4
2025-06-21 15:28:25 [main] INFO  a.s.k.p.PromptTestApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-21 15:28:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-21 15:28:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-06-21 15:28:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.ChatHistoryRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-21 15:28:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.ChatRoomRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-21 15:28:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.IngredientRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-21 15:28:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.RecipeIngredientRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-21 15:28:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.RecipeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-21 15:28:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.RefrigeratorIngredientRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-21 15:28:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.RefrigeratorRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-21 15:28:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.UserPromptRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-21 15:28:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.UserRecipeRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-21 15:28:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-06-21 15:28:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 12 ms. Found 0 JDBC repository interfaces.
2025-06-21 15:28:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-21 15:28:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-21 15:28:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 44 ms. Found 10 JPA repository interfaces.
2025-06-21 15:28:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-06-21 15:28:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-21 15:28:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.ChatHistoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-21 15:28:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.ChatRoomRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-21 15:28:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.IngredientRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-21 15:28:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.RecipeIngredientRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-21 15:28:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.RecipeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-21 15:28:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.RefrigeratorIngredientRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-21 15:28:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.RefrigeratorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-21 15:28:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.UserPromptRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-21 15:28:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.UserRecipeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-21 15:28:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface ac.su.kdt.prompttest.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-06-21 15:28:25 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces.
2025-06-21 15:28:25 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-21 15:28:25 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-21 15:28:25 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
2025-06-21 15:28:25 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-21 15:28:25 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 472 ms
2025-06-21 15:28:25 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-21 15:28:25 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@798deee8
2025-06-21 15:28:25 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-21 15:28:25 [main] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3306/recipedb?useSSL=false&serverTimezone=UTC&characterEncoding=UTF-8'
2025-06-21 15:28:25 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-21 15:28:25 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
2025-06-21 15:28:25 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-21 15:28:25 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-21 15:28:25 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQL8Dialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-06-21 15:28:25 [main] WARN  org.hibernate.orm.deprecation - HHH90000026: MySQL8Dialect has been deprecated; use org.hibernate.dialect.MySQLDialect instead
2025-06-21 15:28:26 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-21 15:28:26 [main] DEBUG org.hibernate.SQL - 
    create table recipe (
        recipe_id integer not null auto_increment,
        category varchar(50),
        cooking_time integer,
        description TEXT,
        difficulty varchar(5),
        image tinyblob,
        title varchar(15) not null,
        primary key (recipe_id)
    ) engine=InnoDB
Hibernate: 
    create table recipe (
        recipe_id integer not null auto_increment,
        category varchar(50),
        cooking_time integer,
        description TEXT,
        difficulty varchar(5),
        image tinyblob,
        title varchar(15) not null,
        primary key (recipe_id)
    ) engine=InnoDB
2025-06-21 15:28:26 [main] WARN  o.h.t.s.i.ExceptionHandlerLoggedImpl - GenerationTarget encountered exception accepting command : Error executing DDL "
    create table recipe (
        recipe_id integer not null auto_increment,
        category varchar(50),
        cooking_time integer,
        description TEXT,
        difficulty varchar(5),
        image tinyblob,
        title varchar(15) not null,
        primary key (recipe_id)
    ) engine=InnoDB" via JDBC [Table 'recipe' already exists]
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table recipe (
        recipe_id integer not null auto_increment,
        category varchar(50),
        cooking_time integer,
        description TEXT,
        difficulty varchar(5),
        image tinyblob,
        title varchar(15) not null,
        primary key (recipe_id)
    ) engine=InnoDB" via JDBC [Table 'recipe' already exists]
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:94)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlString(AbstractSchemaMigrator.java:574)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.applySqlStrings(AbstractSchemaMigrator.java:514)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.createTable(AbstractSchemaMigrator.java:315)
	at org.hibernate.tool.schema.internal.GroupedSchemaMigratorImpl.performTablesMigration(GroupedSchemaMigratorImpl.java:80)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.performMigration(AbstractSchemaMigrator.java:232)
	at org.hibernate.tool.schema.internal.AbstractSchemaMigrator.doMigration(AbstractSchemaMigrator.java:117)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:286)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.lambda$process$5(SchemaManagementToolCoordinator.java:145)
	at java.base/java.util.HashMap.forEach(HashMap.java:1421)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:142)
	at org.hibernate.boot.internal.SessionFactoryObserverForSchemaExport.sessionFactoryCreated(SessionFactoryObserverForSchemaExport.java:37)
	at org.hibernate.internal.SessionFactoryObserverChain.sessionFactoryCreated(SessionFactoryObserverChain.java:35)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:315)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:450)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1507)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:75)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:388)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:364)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at ac.su.kdt.prompttest.PromptTestApplication.main(PromptTestApplication.java:12)
Caused by: java.sql.SQLSyntaxErrorException: Table 'recipe' already exists
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:80)
	... 38 common frames omitted
2025-06-21 15:28:26 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-21 15:28:26 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - JSqlParser is in classpath; If applicable, JSqlParser will be used
2025-06-21 15:28:26 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-06-21 15:28:26 [main] INFO  a.s.k.p.service.PerplexityService - API URL: https://api.perplexity.ai/chat/completions
2025-06-21 15:28:26 [main] INFO  a.s.k.p.service.PerplexityService - API Key length: 24
2025-06-21 15:28:26 [main] INFO  a.s.k.p.service.PerplexityService - API Key value: your-actua...
2025-06-21 15:28:26 [main] INFO  a.s.k.p.service.PerplexityService - Full API Key: your-actual-api-key-here
2025-06-21 15:28:26 [main] ERROR a.s.k.p.service.PerplexityService - API Key format is invalid! Should start with 'pplx-' but got: your-actua
2025-06-21 15:28:26 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-21 15:28:26 [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-06-21 15:28:26 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2025-06-21 15:28:26 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-06-21 15:28:26 [main] INFO  a.s.k.p.PromptTestApplication - Started PromptTestApplication in 1.916 seconds (process running for 2.028)
2025-06-21 15:28:43 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-21 15:28:43 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-21 15:28:43 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-06-21 15:28:43 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Starting getResponse for userId: 1, prompt: 간단한 김치찌개 레시피를 알려줘
2025-06-21 15:28:43 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Authorization header: Bearer your-actua...
2025-06-21 15:28:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.age,
        u1_0.allergies,
        u1_0.created_at,
        u1_0.email,
        u1_0.gender,
        u1_0.health_conditions,
        u1_0.name,
        u1_0.password,
        u1_0.preferences,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.provider_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.age,
        u1_0.allergies,
        u1_0.created_at,
        u1_0.email,
        u1_0.gender,
        u1_0.health_conditions,
        u1_0.name,
        u1_0.password,
        u1_0.preferences,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.provider_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-21 15:28:43 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        up1_0.id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    where
        up1_0.user_id=?
Hibernate: 
    /* <criteria> */ select
        up1_0.id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    where
        up1_0.user_id=?
2025-06-21 15:28:43 [http-nio-8080-exec-1] DEBUG a.s.k.p.service.PerplexityService - System prompt: 당신은 레시피 추천 전문가입니다. 다음 사용자의 특성을 고려하여 레시피를 추천해주세요:

- 이름: 홍길동
- 나이: 30세
- 성별: 남성
- 건강 상태: 건강
- 알레르기: 땅콩, 견과류
- 선호하는 음식: 매운 음식


건강 상태에 따른 특별 지시사항:
현재 사용자는 건강 상태입니다. 해당 건강 상태에 맞는 적절한 식단을 추천해주세요.

다음 사항을 고려하여 레시피를 추천해주세요:
1. 해당 건강 상태에 맞는 영양소를 포함한 재료를 선택해주세요.
2. 해당 건강 상태에 해로운 성분이 포함된 재료는 피해주세요.
3. 건강 상태 개선에 도움이 되는 조리 방법을 선택해주세요.
4. 필요한 경우, 특정 재료의 대체재를 제안해주세요.

알레르기 주의사항:
- 땅콩, 견과류 알레르기가 있으므로 해당 재료를 제외한 레시피를 추천해주세요.

## 사용자 요청
간단한 김치찌개 레시피를 알려줘

레시피는 다음 형식으로 제공해주세요:
- 요리 이름
- 필요한 재료와 양
- 조리 시간
- 난이도
- 상세한 조리 방법
- 요리 팁과 주의사항
- 완성된 요리의 이미지 URL

주의사항:
- 모든 재료의 양과 단위를 정확히 명시해주세요.
- 조리 방법은 순서대로 상세히 설명해주세요.
- 요리 팁과 주의사항은 실제 조리 시 도움이 될 수 있는 내용을 포함해주세요.
- 요리 이미지 URL은 실제 존재하는 이미지의 URL을 제공해주세요.

2025-06-21 15:28:43 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Sending request to Perplexity API
2025-06-21 15:28:43 [http-nio-8080-exec-1] DEBUG a.s.k.p.service.PerplexityService - Request headers: [Content-Type:"application/json", Authorization:"Bearer your-actual-api-key-here"]
2025-06-21 15:28:43 [http-nio-8080-exec-1] DEBUG a.s.k.p.service.PerplexityService - Request body: {messages=[{role=system, content=당신은 레시피 추천 전문가입니다. 다음 사용자의 특성을 고려하여 레시피를 추천해주세요:

- 이름: 홍길동
- 나이: 30세
- 성별: 남성
- 건강 상태: 건강
- 알레르기: 땅콩, 견과류
- 선호하는 음식: 매운 음식


건강 상태에 따른 특별 지시사항:
현재 사용자는 건강 상태입니다. 해당 건강 상태에 맞는 적절한 식단을 추천해주세요.

다음 사항을 고려하여 레시피를 추천해주세요:
1. 해당 건강 상태에 맞는 영양소를 포함한 재료를 선택해주세요.
2. 해당 건강 상태에 해로운 성분이 포함된 재료는 피해주세요.
3. 건강 상태 개선에 도움이 되는 조리 방법을 선택해주세요.
4. 필요한 경우, 특정 재료의 대체재를 제안해주세요.

알레르기 주의사항:
- 땅콩, 견과류 알레르기가 있으므로 해당 재료를 제외한 레시피를 추천해주세요.

## 사용자 요청
간단한 김치찌개 레시피를 알려줘

레시피는 다음 형식으로 제공해주세요:
- 요리 이름
- 필요한 재료와 양
- 조리 시간
- 난이도
- 상세한 조리 방법
- 요리 팁과 주의사항
- 완성된 요리의 이미지 URL

주의사항:
- 모든 재료의 양과 단위를 정확히 명시해주세요.
- 조리 방법은 순서대로 상세히 설명해주세요.
- 요리 팁과 주의사항은 실제 조리 시 도움이 될 수 있는 내용을 포함해주세요.
- 요리 이미지 URL은 실제 존재하는 이미지의 URL을 제공해주세요.
}, {role=user, content=간단한 김치찌개 레시피를 알려줘}], model=sonar-pro}
2025-06-21 15:28:44 [http-nio-8080-exec-1] ERROR a.s.k.p.service.PerplexityService - Error calling Perplexity API
org.springframework.web.client.HttpClientErrorException$Unauthorized: 401 Unauthorized: [no body]
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:106)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:183)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:137)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:942)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:891)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.postForObject(RestTemplate.java:507)
	at ac.su.kdt.prompttest.service.PerplexityService.getResponse(PerplexityService.java:95)
	at ac.su.kdt.prompttest.service.PerplexityService.getResponseAsString(PerplexityService.java:122)
	at ac.su.kdt.prompttest.controller.TestController.testPerplexity(TestController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-06-21 15:28:44 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: Error calling Perplexity API: 401 Unauthorized: [no body]] with root cause
java.lang.RuntimeException: Error calling Perplexity API: 401 Unauthorized: [no body]
	at ac.su.kdt.prompttest.service.PerplexityService.getResponse(PerplexityService.java:117)
	at ac.su.kdt.prompttest.service.PerplexityService.getResponseAsString(PerplexityService.java:122)
	at ac.su.kdt.prompttest.controller.TestController.testPerplexity(TestController.java:20)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-06-21 15:28:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id,
        u1_0.age,
        u1_0.allergies,
        u1_0.created_at,
        u1_0.email,
        u1_0.gender,
        u1_0.health_conditions,
        u1_0.name,
        u1_0.password,
        u1_0.preferences,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.provider_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
Hibernate: 
    /* <criteria> */ select
        u1_0.id,
        u1_0.age,
        u1_0.allergies,
        u1_0.created_at,
        u1_0.email,
        u1_0.gender,
        u1_0.health_conditions,
        u1_0.name,
        u1_0.password,
        u1_0.preferences,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.provider_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0
2025-06-21 15:28:44 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.age,
        u1_0.allergies,
        u1_0.created_at,
        u1_0.email,
        u1_0.gender,
        u1_0.health_conditions,
        u1_0.name,
        u1_0.password,
        u1_0.preferences,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.provider_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.age,
        u1_0.allergies,
        u1_0.created_at,
        u1_0.email,
        u1_0.gender,
        u1_0.health_conditions,
        u1_0.name,
        u1_0.password,
        u1_0.preferences,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.provider_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-21 15:28:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.name like ? escape '\\'
Hibernate: 
    /* <criteria> */ select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.name like ? escape '\\'
2025-06-21 15:28:44 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
Hibernate: 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-21 15:28:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.age,
        u1_0.allergies,
        u1_0.created_at,
        u1_0.email,
        u1_0.gender,
        u1_0.health_conditions,
        u1_0.name,
        u1_0.password,
        u1_0.preferences,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.provider_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.age,
        u1_0.allergies,
        u1_0.created_at,
        u1_0.email,
        u1_0.gender,
        u1_0.health_conditions,
        u1_0.name,
        u1_0.password,
        u1_0.preferences,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.provider_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-21 15:28:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.refrigerator_id 
    from
        refrigerator r1_0 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    where
        u1_0.id=? 
        and r1_0.name=? 
    limit
        ?
Hibernate: 
    /* <criteria> */ select
        r1_0.refrigerator_id 
    from
        refrigerator r1_0 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    where
        u1_0.id=? 
        and r1_0.name=? 
    limit
        ?
2025-06-21 15:28:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.refrigerator_id 
    from
        refrigerator r1_0 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    where
        u1_0.id=? 
        and r1_0.name=? 
    limit
        ?
Hibernate: 
    /* <criteria> */ select
        r1_0.refrigerator_id 
    from
        refrigerator r1_0 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    where
        u1_0.id=? 
        and r1_0.name=? 
    limit
        ?
2025-06-21 15:28:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.refrigerator_id 
    from
        refrigerator r1_0 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    where
        u1_0.id=? 
        and r1_0.name=? 
    limit
        ?
Hibernate: 
    /* <criteria> */ select
        r1_0.refrigerator_id 
    from
        refrigerator r1_0 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    where
        u1_0.id=? 
        and r1_0.name=? 
    limit
        ?
2025-06-21 15:28:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.refrigerator_id 
    from
        refrigerator r1_0 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    where
        u1_0.id=? 
        and r1_0.name=? 
    limit
        ?
Hibernate: 
    /* <criteria> */ select
        r1_0.refrigerator_id 
    from
        refrigerator r1_0 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    where
        u1_0.id=? 
        and r1_0.name=? 
    limit
        ?
2025-06-21 15:28:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.refrigerator_id 
    from
        refrigerator r1_0 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    where
        u1_0.id=? 
        and r1_0.name=? 
    limit
        ?
Hibernate: 
    /* <criteria> */ select
        r1_0.refrigerator_id 
    from
        refrigerator r1_0 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    where
        u1_0.id=? 
        and r1_0.name=? 
    limit
        ?
2025-06-21 15:28:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.refrigerator_id 
    from
        refrigerator r1_0 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    where
        u1_0.id=? 
        and r1_0.name=? 
    limit
        ?
Hibernate: 
    /* <criteria> */ select
        r1_0.refrigerator_id 
    from
        refrigerator r1_0 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    where
        u1_0.id=? 
        and r1_0.name=? 
    limit
        ?
2025-06-21 15:28:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.refrigerator_id 
    from
        refrigerator r1_0 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    where
        u1_0.id=? 
        and r1_0.name=? 
    limit
        ?
Hibernate: 
    /* <criteria> */ select
        r1_0.refrigerator_id 
    from
        refrigerator r1_0 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    where
        u1_0.id=? 
        and r1_0.name=? 
    limit
        ?
2025-06-21 15:28:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.refrigerator_id 
    from
        refrigerator r1_0 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    where
        u1_0.id=? 
        and r1_0.name=? 
    limit
        ?
Hibernate: 
    /* <criteria> */ select
        r1_0.refrigerator_id 
    from
        refrigerator r1_0 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    where
        u1_0.id=? 
        and r1_0.name=? 
    limit
        ?
2025-06-21 15:28:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* insert for
        ac.su.kdt.prompttest.entity.Refrigerator */insert 
    into
        refrigerator (created_at, description, name, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?)
Hibernate: 
    /* insert for
        ac.su.kdt.prompttest.entity.Refrigerator */insert 
    into
        refrigerator (created_at, description, name, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?)
2025-06-21 15:28:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.refrigerator_id,
        r1_0.created_at,
        r1_0.description,
        r1_0.name,
        r1_0.updated_at,
        r1_0.user_id 
    from
        refrigerator r1_0 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    where
        u1_0.id=?
Hibernate: 
    /* <criteria> */ select
        r1_0.refrigerator_id,
        r1_0.created_at,
        r1_0.description,
        r1_0.name,
        r1_0.updated_at,
        r1_0.user_id 
    from
        refrigerator r1_0 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    where
        u1_0.id=?
2025-06-21 15:28:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ri1_0.refrigerator_id,
        ri1_0.id,
        ri1_0.created_at,
        ri1_0.expiry_date,
        ri1_0.freshness_status,
        ri1_0.ingredient_id,
        ri1_0.notes,
        ri1_0.purchase_date,
        ri1_0.quantity,
        ri1_0.storage_location,
        ri1_0.unit,
        ri1_0.updated_at 
    from
        refrigerator_ingredient ri1_0 
    where
        ri1_0.refrigerator_id=?
Hibernate: 
    select
        ri1_0.refrigerator_id,
        ri1_0.id,
        ri1_0.created_at,
        ri1_0.expiry_date,
        ri1_0.freshness_status,
        ri1_0.ingredient_id,
        ri1_0.notes,
        ri1_0.purchase_date,
        ri1_0.quantity,
        ri1_0.storage_location,
        ri1_0.unit,
        ri1_0.updated_at 
    from
        refrigerator_ingredient ri1_0 
    where
        ri1_0.refrigerator_id=?
2025-06-21 15:28:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
Hibernate: 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-21 15:28:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
Hibernate: 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-21 15:28:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
Hibernate: 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-21 15:28:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
Hibernate: 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-21 15:28:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ri1_0.refrigerator_id,
        ri1_0.id,
        ri1_0.created_at,
        ri1_0.expiry_date,
        ri1_0.freshness_status,
        ri1_0.ingredient_id,
        ri1_0.notes,
        ri1_0.purchase_date,
        ri1_0.quantity,
        ri1_0.storage_location,
        ri1_0.unit,
        ri1_0.updated_at 
    from
        refrigerator_ingredient ri1_0 
    where
        ri1_0.refrigerator_id=?
Hibernate: 
    select
        ri1_0.refrigerator_id,
        ri1_0.id,
        ri1_0.created_at,
        ri1_0.expiry_date,
        ri1_0.freshness_status,
        ri1_0.ingredient_id,
        ri1_0.notes,
        ri1_0.purchase_date,
        ri1_0.quantity,
        ri1_0.storage_location,
        ri1_0.unit,
        ri1_0.updated_at 
    from
        refrigerator_ingredient ri1_0 
    where
        ri1_0.refrigerator_id=?
2025-06-21 15:28:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ri1_0.refrigerator_id,
        ri1_0.id,
        ri1_0.created_at,
        ri1_0.expiry_date,
        ri1_0.freshness_status,
        ri1_0.ingredient_id,
        ri1_0.notes,
        ri1_0.purchase_date,
        ri1_0.quantity,
        ri1_0.storage_location,
        ri1_0.unit,
        ri1_0.updated_at 
    from
        refrigerator_ingredient ri1_0 
    where
        ri1_0.refrigerator_id=?
Hibernate: 
    select
        ri1_0.refrigerator_id,
        ri1_0.id,
        ri1_0.created_at,
        ri1_0.expiry_date,
        ri1_0.freshness_status,
        ri1_0.ingredient_id,
        ri1_0.notes,
        ri1_0.purchase_date,
        ri1_0.quantity,
        ri1_0.storage_location,
        ri1_0.unit,
        ri1_0.updated_at 
    from
        refrigerator_ingredient ri1_0 
    where
        ri1_0.refrigerator_id=?
2025-06-21 15:28:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ri1_0.refrigerator_id,
        ri1_0.id,
        ri1_0.created_at,
        ri1_0.expiry_date,
        ri1_0.freshness_status,
        ri1_0.ingredient_id,
        ri1_0.notes,
        ri1_0.purchase_date,
        ri1_0.quantity,
        ri1_0.storage_location,
        ri1_0.unit,
        ri1_0.updated_at 
    from
        refrigerator_ingredient ri1_0 
    where
        ri1_0.refrigerator_id=?
Hibernate: 
    select
        ri1_0.refrigerator_id,
        ri1_0.id,
        ri1_0.created_at,
        ri1_0.expiry_date,
        ri1_0.freshness_status,
        ri1_0.ingredient_id,
        ri1_0.notes,
        ri1_0.purchase_date,
        ri1_0.quantity,
        ri1_0.storage_location,
        ri1_0.unit,
        ri1_0.updated_at 
    from
        refrigerator_ingredient ri1_0 
    where
        ri1_0.refrigerator_id=?
2025-06-21 15:28:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ri1_0.refrigerator_id,
        ri1_0.id,
        ri1_0.created_at,
        ri1_0.expiry_date,
        ri1_0.freshness_status,
        ri1_0.ingredient_id,
        ri1_0.notes,
        ri1_0.purchase_date,
        ri1_0.quantity,
        ri1_0.storage_location,
        ri1_0.unit,
        ri1_0.updated_at 
    from
        refrigerator_ingredient ri1_0 
    where
        ri1_0.refrigerator_id=?
Hibernate: 
    select
        ri1_0.refrigerator_id,
        ri1_0.id,
        ri1_0.created_at,
        ri1_0.expiry_date,
        ri1_0.freshness_status,
        ri1_0.ingredient_id,
        ri1_0.notes,
        ri1_0.purchase_date,
        ri1_0.quantity,
        ri1_0.storage_location,
        ri1_0.unit,
        ri1_0.updated_at 
    from
        refrigerator_ingredient ri1_0 
    where
        ri1_0.refrigerator_id=?
2025-06-21 15:28:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ri1_0.refrigerator_id,
        ri1_0.id,
        ri1_0.created_at,
        ri1_0.expiry_date,
        ri1_0.freshness_status,
        ri1_0.ingredient_id,
        ri1_0.notes,
        ri1_0.purchase_date,
        ri1_0.quantity,
        ri1_0.storage_location,
        ri1_0.unit,
        ri1_0.updated_at 
    from
        refrigerator_ingredient ri1_0 
    where
        ri1_0.refrigerator_id=?
Hibernate: 
    select
        ri1_0.refrigerator_id,
        ri1_0.id,
        ri1_0.created_at,
        ri1_0.expiry_date,
        ri1_0.freshness_status,
        ri1_0.ingredient_id,
        ri1_0.notes,
        ri1_0.purchase_date,
        ri1_0.quantity,
        ri1_0.storage_location,
        ri1_0.unit,
        ri1_0.updated_at 
    from
        refrigerator_ingredient ri1_0 
    where
        ri1_0.refrigerator_id=?
2025-06-21 15:28:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ri1_0.refrigerator_id,
        ri1_0.id,
        ri1_0.created_at,
        ri1_0.expiry_date,
        ri1_0.freshness_status,
        ri1_0.ingredient_id,
        ri1_0.notes,
        ri1_0.purchase_date,
        ri1_0.quantity,
        ri1_0.storage_location,
        ri1_0.unit,
        ri1_0.updated_at 
    from
        refrigerator_ingredient ri1_0 
    where
        ri1_0.refrigerator_id=?
Hibernate: 
    select
        ri1_0.refrigerator_id,
        ri1_0.id,
        ri1_0.created_at,
        ri1_0.expiry_date,
        ri1_0.freshness_status,
        ri1_0.ingredient_id,
        ri1_0.notes,
        ri1_0.purchase_date,
        ri1_0.quantity,
        ri1_0.storage_location,
        ri1_0.unit,
        ri1_0.updated_at 
    from
        refrigerator_ingredient ri1_0 
    where
        ri1_0.refrigerator_id=?
2025-06-21 15:28:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ri1_0.refrigerator_id,
        ri1_0.id,
        ri1_0.created_at,
        ri1_0.expiry_date,
        ri1_0.freshness_status,
        ri1_0.ingredient_id,
        ri1_0.notes,
        ri1_0.purchase_date,
        ri1_0.quantity,
        ri1_0.storage_location,
        ri1_0.unit,
        ri1_0.updated_at 
    from
        refrigerator_ingredient ri1_0 
    where
        ri1_0.refrigerator_id=?
Hibernate: 
    select
        ri1_0.refrigerator_id,
        ri1_0.id,
        ri1_0.created_at,
        ri1_0.expiry_date,
        ri1_0.freshness_status,
        ri1_0.ingredient_id,
        ri1_0.notes,
        ri1_0.purchase_date,
        ri1_0.quantity,
        ri1_0.storage_location,
        ri1_0.unit,
        ri1_0.updated_at 
    from
        refrigerator_ingredient ri1_0 
    where
        ri1_0.refrigerator_id=?
2025-06-21 15:28:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ri1_0.refrigerator_id,
        ri1_0.id,
        ri1_0.created_at,
        ri1_0.expiry_date,
        ri1_0.freshness_status,
        ri1_0.ingredient_id,
        ri1_0.notes,
        ri1_0.purchase_date,
        ri1_0.quantity,
        ri1_0.storage_location,
        ri1_0.unit,
        ri1_0.updated_at 
    from
        refrigerator_ingredient ri1_0 
    where
        ri1_0.refrigerator_id=?
Hibernate: 
    select
        ri1_0.refrigerator_id,
        ri1_0.id,
        ri1_0.created_at,
        ri1_0.expiry_date,
        ri1_0.freshness_status,
        ri1_0.ingredient_id,
        ri1_0.notes,
        ri1_0.purchase_date,
        ri1_0.quantity,
        ri1_0.storage_location,
        ri1_0.unit,
        ri1_0.updated_at 
    from
        refrigerator_ingredient ri1_0 
    where
        ri1_0.refrigerator_id=?
2025-06-21 15:28:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ri1_0.refrigerator_id,
        ri1_0.id,
        ri1_0.created_at,
        ri1_0.expiry_date,
        ri1_0.freshness_status,
        ri1_0.ingredient_id,
        ri1_0.notes,
        ri1_0.purchase_date,
        ri1_0.quantity,
        ri1_0.storage_location,
        ri1_0.unit,
        ri1_0.updated_at 
    from
        refrigerator_ingredient ri1_0 
    where
        ri1_0.refrigerator_id=?
Hibernate: 
    select
        ri1_0.refrigerator_id,
        ri1_0.id,
        ri1_0.created_at,
        ri1_0.expiry_date,
        ri1_0.freshness_status,
        ri1_0.ingredient_id,
        ri1_0.notes,
        ri1_0.purchase_date,
        ri1_0.quantity,
        ri1_0.storage_location,
        ri1_0.unit,
        ri1_0.updated_at 
    from
        refrigerator_ingredient ri1_0 
    where
        ri1_0.refrigerator_id=?
2025-06-21 15:28:44 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.refrigerator_id,
        r1_0.created_at,
        r1_0.description,
        r1_0.name,
        r1_0.updated_at,
        r1_0.user_id 
    from
        refrigerator r1_0 
    where
        r1_0.refrigerator_id=?
Hibernate: 
    select
        r1_0.refrigerator_id,
        r1_0.created_at,
        r1_0.description,
        r1_0.name,
        r1_0.updated_at,
        r1_0.user_id 
    from
        refrigerator r1_0 
    where
        r1_0.refrigerator_id=?
2025-06-21 15:28:44 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
Hibernate: 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-21 15:28:44 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ri1_0.id,
        ri1_0.created_at,
        ri1_0.expiry_date,
        ri1_0.freshness_status,
        ri1_0.ingredient_id,
        ri1_0.notes,
        ri1_0.purchase_date,
        ri1_0.quantity,
        ri1_0.refrigerator_id,
        ri1_0.storage_location,
        ri1_0.unit,
        ri1_0.updated_at 
    from
        refrigerator_ingredient ri1_0 
    join
        refrigerator r1_0 
            on r1_0.refrigerator_id=ri1_0.refrigerator_id 
    join
        ingredient i1_0 
            on i1_0.ingredient_id=ri1_0.ingredient_id 
    where
        r1_0.refrigerator_id=? 
        and i1_0.ingredient_id=? 
        and ri1_0.unit=?
Hibernate: 
    /* <criteria> */ select
        ri1_0.id,
        ri1_0.created_at,
        ri1_0.expiry_date,
        ri1_0.freshness_status,
        ri1_0.ingredient_id,
        ri1_0.notes,
        ri1_0.purchase_date,
        ri1_0.quantity,
        ri1_0.refrigerator_id,
        ri1_0.storage_location,
        ri1_0.unit,
        ri1_0.updated_at 
    from
        refrigerator_ingredient ri1_0 
    join
        refrigerator r1_0 
            on r1_0.refrigerator_id=ri1_0.refrigerator_id 
    join
        ingredient i1_0 
            on i1_0.ingredient_id=ri1_0.ingredient_id 
    where
        r1_0.refrigerator_id=? 
        and i1_0.ingredient_id=? 
        and ri1_0.unit=?
2025-06-21 15:28:44 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: Ingredient with same unit already exists in refrigerator] with root cause
java.lang.RuntimeException: Ingredient with same unit already exists in refrigerator
	at ac.su.kdt.prompttest.service.RefrigeratorIngredientService.lambda$addIngredient$2(RefrigeratorIngredientService.java:51)
	at java.base/java.util.Optional.ifPresent(Optional.java:178)
	at ac.su.kdt.prompttest.service.RefrigeratorIngredientService.addIngredient(RefrigeratorIngredientService.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at ac.su.kdt.prompttest.service.RefrigeratorIngredientService$$SpringCGLIB$$0.addIngredient(<generated>)
	at ac.su.kdt.prompttest.controller.RefrigeratorIngredientController.addIngredient(RefrigeratorIngredientController.java:38)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-06-21 15:28:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ri1_0.id,
        ri1_0.created_at,
        ri1_0.expiry_date,
        ri1_0.freshness_status,
        ri1_0.ingredient_id,
        ri1_0.notes,
        ri1_0.purchase_date,
        ri1_0.quantity,
        ri1_0.refrigerator_id,
        ri1_0.storage_location,
        ri1_0.unit,
        ri1_0.updated_at 
    from
        refrigerator_ingredient ri1_0 
    join
        refrigerator r1_0 
            on r1_0.refrigerator_id=ri1_0.refrigerator_id 
    where
        r1_0.refrigerator_id=?
Hibernate: 
    /* <criteria> */ select
        ri1_0.id,
        ri1_0.created_at,
        ri1_0.expiry_date,
        ri1_0.freshness_status,
        ri1_0.ingredient_id,
        ri1_0.notes,
        ri1_0.purchase_date,
        ri1_0.quantity,
        ri1_0.refrigerator_id,
        ri1_0.storage_location,
        ri1_0.unit,
        ri1_0.updated_at 
    from
        refrigerator_ingredient ri1_0 
    join
        refrigerator r1_0 
            on r1_0.refrigerator_id=ri1_0.refrigerator_id 
    where
        r1_0.refrigerator_id=?
2025-06-21 15:28:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
Hibernate: 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-21 15:28:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
Hibernate: 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-21 15:28:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
Hibernate: 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-21 15:28:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
Hibernate: 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-21 15:28:44 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        r1_0.recipe_id,
        r1_0.category,
        r1_0.cooking_time,
        r1_0.description,
        r1_0.difficulty,
        r1_0.image,
        r1_0.title 
    from
        recipe r1_0 
    where
        r1_0.title like ? escape '\\'
Hibernate: 
    /* <criteria> */ select
        r1_0.recipe_id,
        r1_0.category,
        r1_0.cooking_time,
        r1_0.description,
        r1_0.difficulty,
        r1_0.image,
        r1_0.title 
    from
        recipe r1_0 
    where
        r1_0.title like ? escape '\\'
2025-06-21 15:28:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.recipe_id,
        r1_0.category,
        r1_0.cooking_time,
        r1_0.description,
        r1_0.difficulty,
        r1_0.image,
        r1_0.title 
    from
        recipe r1_0 
    where
        r1_0.recipe_id=?
Hibernate: 
    select
        r1_0.recipe_id,
        r1_0.category,
        r1_0.cooking_time,
        r1_0.description,
        r1_0.difficulty,
        r1_0.image,
        r1_0.title 
    from
        recipe r1_0 
    where
        r1_0.recipe_id=?
2025-06-21 15:28:44 [http-nio-8080-exec-1] INFO  a.s.k.p.c.RecipeRecommendationController - Recipe recommendation request - userId: 1, refrigeratorId: 1
2025-06-21 15:28:44 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Starting recipe recommendation for userId: 1, refrigeratorId: 1
2025-06-21 15:28:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ri1_0.id,
        ri1_0.created_at,
        ri1_0.expiry_date,
        ri1_0.freshness_status,
        ri1_0.ingredient_id,
        ri1_0.notes,
        ri1_0.purchase_date,
        ri1_0.quantity,
        ri1_0.refrigerator_id,
        ri1_0.storage_location,
        ri1_0.unit,
        ri1_0.updated_at 
    from
        refrigerator_ingredient ri1_0 
    join
        refrigerator r1_0 
            on r1_0.refrigerator_id=ri1_0.refrigerator_id 
    where
        r1_0.refrigerator_id=?
Hibernate: 
    /* <criteria> */ select
        ri1_0.id,
        ri1_0.created_at,
        ri1_0.expiry_date,
        ri1_0.freshness_status,
        ri1_0.ingredient_id,
        ri1_0.notes,
        ri1_0.purchase_date,
        ri1_0.quantity,
        ri1_0.refrigerator_id,
        ri1_0.storage_location,
        ri1_0.unit,
        ri1_0.updated_at 
    from
        refrigerator_ingredient ri1_0 
    join
        refrigerator r1_0 
            on r1_0.refrigerator_id=ri1_0.refrigerator_id 
    where
        r1_0.refrigerator_id=?
2025-06-21 15:28:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
Hibernate: 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-21 15:28:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
Hibernate: 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-21 15:28:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
Hibernate: 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-21 15:28:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
Hibernate: 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-21 15:28:44 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Starting getResponse for userId: 1, prompt: 현재 냉장고에 있는 재료들을 기반으로 레시피를 추천해주세요.

【냉장고 재료 목록】
- 양파 500.0g (유통기한: 2025-12-31)
- 양파 2.5개 (유통기한: 2024-12-31)
- 양파 500.0그램 (유통기한: 2024-12-31)
- 테스트재료 300.0g (유통기한: 2025-12-31)
- 테스트재료 400.0g (유통기한: 2025-12-31)
- 테스트재료 200.0g (유통기한: 2025-12-31)


위의 냉장고 재료들을 최대한 활용하면서, 추가 요구사항에 맞는 맛있는 레시피를 추천해주세요. 유통기한이 임박한 재료를 우선적으로 사용하는 방향으로 추천해주시고, 재료의 양을 고려해서 적절한 인분 수의 레시피를 제안해주세요.

응답은 다음 형식으로 해주세요:
1. 요리 이름: [요리명]
2. 필요한 재료와 양:
- [재료명] [양]
3. 조리 시간: [시간]분
4. 난이도: [난이도]
5. 조리 방법과 팁: [상세한 조리 방법과 팁]

2025-06-21 15:28:44 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Authorization header: Bearer your-actua...
2025-06-21 15:28:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.age,
        u1_0.allergies,
        u1_0.created_at,
        u1_0.email,
        u1_0.gender,
        u1_0.health_conditions,
        u1_0.name,
        u1_0.password,
        u1_0.preferences,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.provider_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.age,
        u1_0.allergies,
        u1_0.created_at,
        u1_0.email,
        u1_0.gender,
        u1_0.health_conditions,
        u1_0.name,
        u1_0.password,
        u1_0.preferences,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.provider_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-21 15:28:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        up1_0.id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    where
        up1_0.user_id=?
Hibernate: 
    /* <criteria> */ select
        up1_0.id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    where
        up1_0.user_id=?
2025-06-21 15:28:44 [http-nio-8080-exec-1] DEBUG a.s.k.p.service.PerplexityService - System prompt: 당신은 레시피 추천 전문가입니다. 다음 사용자의 특성을 고려하여 레시피를 추천해주세요:

- 이름: 홍길동
- 나이: 30세
- 성별: 남성
- 건강 상태: 건강
- 알레르기: 땅콩, 견과류
- 선호하는 음식: 매운 음식


건강 상태에 따른 특별 지시사항:
현재 사용자는 건강 상태입니다. 해당 건강 상태에 맞는 적절한 식단을 추천해주세요.

다음 사항을 고려하여 레시피를 추천해주세요:
1. 해당 건강 상태에 맞는 영양소를 포함한 재료를 선택해주세요.
2. 해당 건강 상태에 해로운 성분이 포함된 재료는 피해주세요.
3. 건강 상태 개선에 도움이 되는 조리 방법을 선택해주세요.
4. 필요한 경우, 특정 재료의 대체재를 제안해주세요.

알레르기 주의사항:
- 땅콩, 견과류 알레르기가 있으므로 해당 재료를 제외한 레시피를 추천해주세요.

## 사용자 요청
현재 냉장고에 있는 재료들을 기반으로 레시피를 추천해주세요.

【냉장고 재료 목록】
- 양파 500.0g (유통기한: 2025-12-31)
- 양파 2.5개 (유통기한: 2024-12-31)
- 양파 500.0그램 (유통기한: 2024-12-31)
- 테스트재료 300.0g (유통기한: 2025-12-31)
- 테스트재료 400.0g (유통기한: 2025-12-31)
- 테스트재료 200.0g (유통기한: 2025-12-31)


위의 냉장고 재료들을 최대한 활용하면서, 추가 요구사항에 맞는 맛있는 레시피를 추천해주세요. 유통기한이 임박한 재료를 우선적으로 사용하는 방향으로 추천해주시고, 재료의 양을 고려해서 적절한 인분 수의 레시피를 제안해주세요.

응답은 다음 형식으로 해주세요:
1. 요리 이름: [요리명]
2. 필요한 재료와 양:
- [재료명] [양]
3. 조리 시간: [시간]분
4. 난이도: [난이도]
5. 조리 방법과 팁: [상세한 조리 방법과 팁]


레시피는 다음 형식으로 제공해주세요:
- 요리 이름
- 필요한 재료와 양
- 조리 시간
- 난이도
- 상세한 조리 방법
- 요리 팁과 주의사항
- 완성된 요리의 이미지 URL

주의사항:
- 모든 재료의 양과 단위를 정확히 명시해주세요.
- 조리 방법은 순서대로 상세히 설명해주세요.
- 요리 팁과 주의사항은 실제 조리 시 도움이 될 수 있는 내용을 포함해주세요.
- 요리 이미지 URL은 실제 존재하는 이미지의 URL을 제공해주세요.

2025-06-21 15:28:44 [http-nio-8080-exec-1] INFO  a.s.k.p.service.PerplexityService - Sending request to Perplexity API
2025-06-21 15:28:44 [http-nio-8080-exec-1] DEBUG a.s.k.p.service.PerplexityService - Request headers: [Content-Type:"application/json", Authorization:"Bearer your-actual-api-key-here"]
2025-06-21 15:28:44 [http-nio-8080-exec-1] DEBUG a.s.k.p.service.PerplexityService - Request body: {messages=[{role=system, content=당신은 레시피 추천 전문가입니다. 다음 사용자의 특성을 고려하여 레시피를 추천해주세요:

- 이름: 홍길동
- 나이: 30세
- 성별: 남성
- 건강 상태: 건강
- 알레르기: 땅콩, 견과류
- 선호하는 음식: 매운 음식


건강 상태에 따른 특별 지시사항:
현재 사용자는 건강 상태입니다. 해당 건강 상태에 맞는 적절한 식단을 추천해주세요.

다음 사항을 고려하여 레시피를 추천해주세요:
1. 해당 건강 상태에 맞는 영양소를 포함한 재료를 선택해주세요.
2. 해당 건강 상태에 해로운 성분이 포함된 재료는 피해주세요.
3. 건강 상태 개선에 도움이 되는 조리 방법을 선택해주세요.
4. 필요한 경우, 특정 재료의 대체재를 제안해주세요.

알레르기 주의사항:
- 땅콩, 견과류 알레르기가 있으므로 해당 재료를 제외한 레시피를 추천해주세요.

## 사용자 요청
현재 냉장고에 있는 재료들을 기반으로 레시피를 추천해주세요.

【냉장고 재료 목록】
- 양파 500.0g (유통기한: 2025-12-31)
- 양파 2.5개 (유통기한: 2024-12-31)
- 양파 500.0그램 (유통기한: 2024-12-31)
- 테스트재료 300.0g (유통기한: 2025-12-31)
- 테스트재료 400.0g (유통기한: 2025-12-31)
- 테스트재료 200.0g (유통기한: 2025-12-31)


위의 냉장고 재료들을 최대한 활용하면서, 추가 요구사항에 맞는 맛있는 레시피를 추천해주세요. 유통기한이 임박한 재료를 우선적으로 사용하는 방향으로 추천해주시고, 재료의 양을 고려해서 적절한 인분 수의 레시피를 제안해주세요.

응답은 다음 형식으로 해주세요:
1. 요리 이름: [요리명]
2. 필요한 재료와 양:
- [재료명] [양]
3. 조리 시간: [시간]분
4. 난이도: [난이도]
5. 조리 방법과 팁: [상세한 조리 방법과 팁]


레시피는 다음 형식으로 제공해주세요:
- 요리 이름
- 필요한 재료와 양
- 조리 시간
- 난이도
- 상세한 조리 방법
- 요리 팁과 주의사항
- 완성된 요리의 이미지 URL

주의사항:
- 모든 재료의 양과 단위를 정확히 명시해주세요.
- 조리 방법은 순서대로 상세히 설명해주세요.
- 요리 팁과 주의사항은 실제 조리 시 도움이 될 수 있는 내용을 포함해주세요.
- 요리 이미지 URL은 실제 존재하는 이미지의 URL을 제공해주세요.
}, {role=user, content=현재 냉장고에 있는 재료들을 기반으로 레시피를 추천해주세요.

【냉장고 재료 목록】
- 양파 500.0g (유통기한: 2025-12-31)
- 양파 2.5개 (유통기한: 2024-12-31)
- 양파 500.0그램 (유통기한: 2024-12-31)
- 테스트재료 300.0g (유통기한: 2025-12-31)
- 테스트재료 400.0g (유통기한: 2025-12-31)
- 테스트재료 200.0g (유통기한: 2025-12-31)


위의 냉장고 재료들을 최대한 활용하면서, 추가 요구사항에 맞는 맛있는 레시피를 추천해주세요. 유통기한이 임박한 재료를 우선적으로 사용하는 방향으로 추천해주시고, 재료의 양을 고려해서 적절한 인분 수의 레시피를 제안해주세요.

응답은 다음 형식으로 해주세요:
1. 요리 이름: [요리명]
2. 필요한 재료와 양:
- [재료명] [양]
3. 조리 시간: [시간]분
4. 난이도: [난이도]
5. 조리 방법과 팁: [상세한 조리 방법과 팁]
}], model=sonar-pro}
2025-06-21 15:28:44 [http-nio-8080-exec-1] ERROR a.s.k.p.service.PerplexityService - Error calling Perplexity API
org.springframework.web.client.HttpClientErrorException$Unauthorized: 401 Unauthorized: [no body]
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:106)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:183)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:137)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:942)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:891)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.postForObject(RestTemplate.java:507)
	at ac.su.kdt.prompttest.service.PerplexityService.getResponse(PerplexityService.java:95)
	at ac.su.kdt.prompttest.service.PerplexityService.getRecipeRecommendation(PerplexityService.java:172)
	at ac.su.kdt.prompttest.controller.RecipeRecommendationController.getRecipeRecommendation(RecipeRecommendationController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-06-21 15:28:44 [http-nio-8080-exec-1] ERROR a.s.k.p.c.RecipeRecommendationController - Error generating recipe recommendation
java.lang.RuntimeException: Error calling Perplexity API: 401 Unauthorized: [no body]
	at ac.su.kdt.prompttest.service.PerplexityService.getResponse(PerplexityService.java:117)
	at ac.su.kdt.prompttest.service.PerplexityService.getRecipeRecommendation(PerplexityService.java:172)
	at ac.su.kdt.prompttest.controller.RecipeRecommendationController.getRecipeRecommendation(RecipeRecommendationController.java:30)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-06-21 15:28:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.age,
        u1_0.allergies,
        u1_0.created_at,
        u1_0.email,
        u1_0.gender,
        u1_0.health_conditions,
        u1_0.name,
        u1_0.password,
        u1_0.preferences,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.provider_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.age,
        u1_0.allergies,
        u1_0.created_at,
        u1_0.email,
        u1_0.gender,
        u1_0.health_conditions,
        u1_0.name,
        u1_0.password,
        u1_0.preferences,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.provider_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-21 15:28:44 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* insert for
        ac.su.kdt.prompttest.entity.UserPrompt */insert 
    into
        user_prompt (age, allergy, created_at, gender, health_status, is_pregnant, name, nickname, preference, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    /* insert for
        ac.su.kdt.prompttest.entity.UserPrompt */insert 
    into
        user_prompt (age, allergy, created_at, gender, health_status, is_pregnant, name, nickname, preference, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-06-21 15:28:44 [http-nio-8080-exec-2] WARN  o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 1062, SQLState: 23000
2025-06-21 15:28:44 [http-nio-8080-exec-2] ERROR o.h.e.jdbc.spi.SqlExceptionHelper - Duplicate entry '1' for key 'user_prompt.UK_talr9bw5uwj1cmhctfjlklmf4'
2025-06-21 15:28:44 [http-nio-8080-exec-2] ERROR a.s.k.p.c.UserPromptController - Error creating user prompt: could not execute statement [Duplicate entry '1' for key 'user_prompt.UK_talr9bw5uwj1cmhctfjlklmf4'] [/* insert for ac.su.kdt.prompttest.entity.UserPrompt */insert into user_prompt (age,allergy,created_at,gender,health_status,is_pregnant,name,nickname,preference,updated_at,user_id) values (?,?,?,?,?,?,?,?,?,?,?)]; SQL [/* insert for ac.su.kdt.prompttest.entity.UserPrompt */insert into user_prompt (age,allergy,created_at,gender,health_status,is_pregnant,name,nickname,preference,updated_at,user_id) values (?,?,?,?,?,?,?,?,?,?,?)]; constraint [user_prompt.UK_talr9bw5uwj1cmhctfjlklmf4]
2025-06-21 15:28:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        up1_0.id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    left join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        u1_0.id=?
Hibernate: 
    /* <criteria> */ select
        up1_0.id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    left join
        users u1_0 
            on u1_0.id=up1_0.user_id 
    where
        u1_0.id=?
2025-06-21 15:28:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.age,
        u1_0.allergies,
        u1_0.created_at,
        u1_0.email,
        u1_0.gender,
        u1_0.health_conditions,
        u1_0.name,
        u1_0.password,
        u1_0.preferences,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.provider_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.age,
        u1_0.allergies,
        u1_0.created_at,
        u1_0.email,
        u1_0.gender,
        u1_0.health_conditions,
        u1_0.name,
        u1_0.password,
        u1_0.preferences,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.provider_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-21 15:28:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ui1_0.user_id,
        ui1_0.id,
        ui1_0.ingredient_id,
        ui1_0.weight_in_grams 
    from
        user_ingredient ui1_0 
    where
        ui1_0.user_id=?
Hibernate: 
    select
        ui1_0.user_id,
        ui1_0.id,
        ui1_0.ingredient_id,
        ui1_0.weight_in_grams 
    from
        user_ingredient ui1_0 
    where
        ui1_0.user_id=?
2025-06-21 15:28:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.user_id,
        r1_0.refrigerator_id,
        r1_0.created_at,
        r1_0.description,
        r1_0.name,
        r1_0.updated_at 
    from
        refrigerator r1_0 
    where
        r1_0.user_id=?
Hibernate: 
    select
        r1_0.user_id,
        r1_0.refrigerator_id,
        r1_0.created_at,
        r1_0.description,
        r1_0.name,
        r1_0.updated_at 
    from
        refrigerator r1_0 
    where
        r1_0.user_id=?
2025-06-21 15:28:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ri1_0.refrigerator_id,
        ri1_0.id,
        ri1_0.created_at,
        ri1_0.expiry_date,
        ri1_0.freshness_status,
        ri1_0.ingredient_id,
        ri1_0.notes,
        ri1_0.purchase_date,
        ri1_0.quantity,
        ri1_0.storage_location,
        ri1_0.unit,
        ri1_0.updated_at 
    from
        refrigerator_ingredient ri1_0 
    where
        ri1_0.refrigerator_id=?
Hibernate: 
    select
        ri1_0.refrigerator_id,
        ri1_0.id,
        ri1_0.created_at,
        ri1_0.expiry_date,
        ri1_0.freshness_status,
        ri1_0.ingredient_id,
        ri1_0.notes,
        ri1_0.purchase_date,
        ri1_0.quantity,
        ri1_0.storage_location,
        ri1_0.unit,
        ri1_0.updated_at 
    from
        refrigerator_ingredient ri1_0 
    where
        ri1_0.refrigerator_id=?
2025-06-21 15:28:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
Hibernate: 
    select
        i1_0.ingredient_id,
        i1_0.calories,
        i1_0.name,
        i1_0.nutrition_info,
        i1_0.required_amount 
    from
        ingredient i1_0 
    where
        i1_0.ingredient_id=?
2025-06-21 15:28:44 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor]] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0]->ac.su.kdt.prompttest.entity.UserPrompt["user"]->ac.su.kdt.prompttest.entity.User$HibernateProxy$xenEx5e0["refrigerators"]->org.hibernate.collection.spi.PersistentBag[0]->ac.su.kdt.prompttest.entity.Refrigerator["refrigeratorIngredients"]->org.hibernate.collection.spi.PersistentBag[0]->ac.su.kdt.prompttest.entity.RefrigeratorIngredient["ingredient"]->ac.su.kdt.prompttest.entity.Ingredient$HibernateProxy$XzD0RiEQ["hibernateLazyInitializer"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1308)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:53)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:30)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:318)
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1572)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:483)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:114)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:297)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-06-21 15:28:44 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* insert for
        ac.su.kdt.prompttest.entity.ChatRoom */insert 
    into
        chat_rooms (created_at, room_name, updated_at) 
    values
        (?, ?, ?)
Hibernate: 
    /* insert for
        ac.su.kdt.prompttest.entity.ChatRoom */insert 
    into
        chat_rooms (created_at, room_name, updated_at) 
    values
        (?, ?, ?)
2025-06-21 15:28:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.age,
        u1_0.allergies,
        u1_0.created_at,
        u1_0.email,
        u1_0.gender,
        u1_0.health_conditions,
        u1_0.name,
        u1_0.password,
        u1_0.preferences,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.provider_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.age,
        u1_0.allergies,
        u1_0.created_at,
        u1_0.email,
        u1_0.gender,
        u1_0.health_conditions,
        u1_0.name,
        u1_0.password,
        u1_0.preferences,
        u1_0.profile_image,
        u1_0.provider,
        u1_0.provider_id,
        u1_0.updated_at,
        u1_0.username 
    from
        users u1_0 
    where
        u1_0.id=?
2025-06-21 15:28:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        up1_0.id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    where
        up1_0.user_id=?
Hibernate: 
    /* <criteria> */ select
        up1_0.id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    where
        up1_0.user_id=?
2025-06-21 15:28:44 [http-nio-8080-exec-6] INFO  a.s.k.p.service.PerplexityService - Starting getResponse for userId: 1, prompt: 감자 요리 추천해줘
2025-06-21 15:28:44 [http-nio-8080-exec-6] INFO  a.s.k.p.service.PerplexityService - Authorization header: Bearer your-actua...
2025-06-21 15:28:44 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        up1_0.id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    where
        up1_0.user_id=?
Hibernate: 
    /* <criteria> */ select
        up1_0.id,
        up1_0.age,
        up1_0.allergy,
        up1_0.created_at,
        up1_0.gender,
        up1_0.health_status,
        up1_0.is_pregnant,
        up1_0.name,
        up1_0.nickname,
        up1_0.preference,
        up1_0.updated_at,
        up1_0.user_id 
    from
        user_prompt up1_0 
    where
        up1_0.user_id=?
2025-06-21 15:28:44 [http-nio-8080-exec-6] DEBUG a.s.k.p.service.PerplexityService - System prompt: 당신은 레시피 추천 전문가입니다. 다음 사용자의 특성을 고려하여 레시피를 추천해주세요:

- 이름: 홍길동
- 나이: 30세
- 성별: 남성
- 건강 상태: 건강
- 알레르기: 땅콩, 견과류
- 선호하는 음식: 매운 음식


건강 상태에 따른 특별 지시사항:
현재 사용자는 건강 상태입니다. 해당 건강 상태에 맞는 적절한 식단을 추천해주세요.

다음 사항을 고려하여 레시피를 추천해주세요:
1. 해당 건강 상태에 맞는 영양소를 포함한 재료를 선택해주세요.
2. 해당 건강 상태에 해로운 성분이 포함된 재료는 피해주세요.
3. 건강 상태 개선에 도움이 되는 조리 방법을 선택해주세요.
4. 필요한 경우, 특정 재료의 대체재를 제안해주세요.

알레르기 주의사항:
- 땅콩, 견과류 알레르기가 있으므로 해당 재료를 제외한 레시피를 추천해주세요.

## 사용자 요청
감자 요리 추천해줘

레시피는 다음 형식으로 제공해주세요:
- 요리 이름
- 필요한 재료와 양
- 조리 시간
- 난이도
- 상세한 조리 방법
- 요리 팁과 주의사항
- 완성된 요리의 이미지 URL

주의사항:
- 모든 재료의 양과 단위를 정확히 명시해주세요.
- 조리 방법은 순서대로 상세히 설명해주세요.
- 요리 팁과 주의사항은 실제 조리 시 도움이 될 수 있는 내용을 포함해주세요.
- 요리 이미지 URL은 실제 존재하는 이미지의 URL을 제공해주세요.

2025-06-21 15:28:44 [http-nio-8080-exec-6] INFO  a.s.k.p.service.PerplexityService - Sending request to Perplexity API
2025-06-21 15:28:44 [http-nio-8080-exec-6] DEBUG a.s.k.p.service.PerplexityService - Request headers: [Content-Type:"application/json", Authorization:"Bearer your-actual-api-key-here"]
2025-06-21 15:28:44 [http-nio-8080-exec-6] DEBUG a.s.k.p.service.PerplexityService - Request body: {messages=[{role=system, content=당신은 레시피 추천 전문가입니다. 다음 사용자의 특성을 고려하여 레시피를 추천해주세요:

- 이름: 홍길동
- 나이: 30세
- 성별: 남성
- 건강 상태: 건강
- 알레르기: 땅콩, 견과류
- 선호하는 음식: 매운 음식


건강 상태에 따른 특별 지시사항:
현재 사용자는 건강 상태입니다. 해당 건강 상태에 맞는 적절한 식단을 추천해주세요.

다음 사항을 고려하여 레시피를 추천해주세요:
1. 해당 건강 상태에 맞는 영양소를 포함한 재료를 선택해주세요.
2. 해당 건강 상태에 해로운 성분이 포함된 재료는 피해주세요.
3. 건강 상태 개선에 도움이 되는 조리 방법을 선택해주세요.
4. 필요한 경우, 특정 재료의 대체재를 제안해주세요.

알레르기 주의사항:
- 땅콩, 견과류 알레르기가 있으므로 해당 재료를 제외한 레시피를 추천해주세요.

## 사용자 요청
감자 요리 추천해줘

레시피는 다음 형식으로 제공해주세요:
- 요리 이름
- 필요한 재료와 양
- 조리 시간
- 난이도
- 상세한 조리 방법
- 요리 팁과 주의사항
- 완성된 요리의 이미지 URL

주의사항:
- 모든 재료의 양과 단위를 정확히 명시해주세요.
- 조리 방법은 순서대로 상세히 설명해주세요.
- 요리 팁과 주의사항은 실제 조리 시 도움이 될 수 있는 내용을 포함해주세요.
- 요리 이미지 URL은 실제 존재하는 이미지의 URL을 제공해주세요.
}, {role=user, content=감자 요리 추천해줘}], model=sonar-pro}
2025-06-21 15:28:45 [http-nio-8080-exec-6] ERROR a.s.k.p.service.PerplexityService - Error calling Perplexity API
org.springframework.web.client.HttpClientErrorException$Unauthorized: 401 Unauthorized: [no body]
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:106)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:183)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:137)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:942)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:891)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.postForObject(RestTemplate.java:507)
	at ac.su.kdt.prompttest.service.PerplexityService.getResponse(PerplexityService.java:95)
	at ac.su.kdt.prompttest.service.ChatHistoryService.processRecipeRequest(ChatHistoryService.java:39)
	at ac.su.kdt.prompttest.service.ChatHistoryService.processRecipeRequestDTO(ChatHistoryService.java:131)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at ac.su.kdt.prompttest.service.ChatHistoryService$$SpringCGLIB$$0.processRecipeRequestDTO(<generated>)
	at ac.su.kdt.prompttest.controller.ChatHistoryController.sendMessage(ChatHistoryController.java:22)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
2025-06-21 15:28:45 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: Error calling Perplexity API: 401 Unauthorized: [no body]] with root cause
java.lang.RuntimeException: Error calling Perplexity API: 401 Unauthorized: [no body]
	at ac.su.kdt.prompttest.service.PerplexityService.getResponse(PerplexityService.java:117)
	at ac.su.kdt.prompttest.service.ChatHistoryService.processRecipeRequest(ChatHistoryService.java:39)
	at ac.su.kdt.prompttest.service.ChatHistoryService.processRecipeRequestDTO(ChatHistoryService.java:131)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at ac.su.kdt.prompttest.service.ChatHistoryService$$SpringCGLIB$$0.processRecipeRequestDTO(<generated>)
	at ac.su.kdt.prompttest.controller.ChatHistoryController.sendMessage(ChatHistoryController.java:22)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
